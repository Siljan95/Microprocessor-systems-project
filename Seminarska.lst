;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 01-Mar-17 5:49:00 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x158A      	BSF        PCLATH, 3
0x0001	0x2800      	GOTO       2048
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0003	0x3021      	MOVLW      33
0x0004	0x1283      	BCF        STATUS, 5
0x0005	0x1303      	BCF        STATUS, 6
0x0006	0x00FD      	MOVWF      R13
L_Delay_50us2:
0x0007	0x0BFD      	DECFSZ     R13, 1
0x0008	0x2807      	GOTO       L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
0x0009	0x0008      	RETURN
; end of _Delay_50us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x000A	0x0000      	NOP
0x000B	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
0x000C	0x0008      	RETURN
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x000D	0x300F      	MOVLW      15
0x000E	0x1283      	BCF        STATUS, 5
0x000F	0x1303      	BCF        STATUS, 6
0x0010	0x00FC      	MOVWF      R12
0x0011	0x3047      	MOVLW      71
0x0012	0x00FD      	MOVWF      R13
L_Delay_5500us5:
0x0013	0x0BFD      	DECFSZ     R13, 1
0x0014	0x2813      	GOTO       L_Delay_5500us5
0x0015	0x0BFC      	DECFSZ     R12, 1
0x0016	0x2813      	GOTO       L_Delay_5500us5
0x0017	0x0000      	NOP
0x0018	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
0x0019	0x0008      	RETURN
; end of _Delay_5500us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x001A	0x1283      	BCF        STATUS, 5
0x001B	0x1703      	BSF        STATUS, 6
0x001C	0x1BD3      	BTFSC      FARG_Lcd_Cmd_out_char, 7
0x001D	0x2820      	GOTO       L__Lcd_Cmd20
0x001E	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x001F	0x2821      	GOTO       L__Lcd_Cmd21
L__Lcd_Cmd20:
0x0020	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd21:
;__Lib_Lcd.c,21 :: 		
0x0021	0x1B53      	BTFSC      FARG_Lcd_Cmd_out_char, 6
0x0022	0x2825      	GOTO       L__Lcd_Cmd22
0x0023	0x1106      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x0024	0x2826      	GOTO       L__Lcd_Cmd23
L__Lcd_Cmd22:
0x0025	0x1506      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd23:
;__Lib_Lcd.c,22 :: 		
0x0026	0x1AD3      	BTFSC      FARG_Lcd_Cmd_out_char, 5
0x0027	0x282A      	GOTO       L__Lcd_Cmd24
0x0028	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x0029	0x282B      	GOTO       L__Lcd_Cmd25
L__Lcd_Cmd24:
0x002A	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd25:
;__Lib_Lcd.c,23 :: 		
0x002B	0x1A53      	BTFSC      FARG_Lcd_Cmd_out_char, 4
0x002C	0x282F      	GOTO       L__Lcd_Cmd26
0x002D	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x002E	0x2830      	GOTO       L__Lcd_Cmd27
L__Lcd_Cmd26:
0x002F	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd27:
;__Lib_Lcd.c,25 :: 		
0x0030	0x1683      	BSF        STATUS, 5
0x0031	0x1303      	BCF        STATUS, 6
0x0032	0x1845      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x0033	0x2837      	GOTO       L__Lcd_Cmd28
0x0034	0x1283      	BCF        STATUS, 5
0x0035	0x1606      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x0036	0x2839      	GOTO       L__Lcd_Cmd29
L__Lcd_Cmd28:
0x0037	0x1283      	BCF        STATUS, 5
0x0038	0x1206      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd29:
;__Lib_Lcd.c,28 :: 		
0x0039	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,29 :: 		
0x003A	0x200A      	CALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x003B	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,33 :: 		
0x003C	0x1703      	BSF        STATUS, 6
0x003D	0x19D3      	BTFSC      FARG_Lcd_Cmd_out_char, 3
0x003E	0x2841      	GOTO       L__Lcd_Cmd30
0x003F	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x0040	0x2842      	GOTO       L__Lcd_Cmd31
L__Lcd_Cmd30:
0x0041	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd31:
;__Lib_Lcd.c,34 :: 		
0x0042	0x1953      	BTFSC      FARG_Lcd_Cmd_out_char, 2
0x0043	0x2846      	GOTO       L__Lcd_Cmd32
0x0044	0x1106      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x0045	0x2847      	GOTO       L__Lcd_Cmd33
L__Lcd_Cmd32:
0x0046	0x1506      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd33:
;__Lib_Lcd.c,35 :: 		
0x0047	0x18D3      	BTFSC      FARG_Lcd_Cmd_out_char, 1
0x0048	0x284B      	GOTO       L__Lcd_Cmd34
0x0049	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x004A	0x284C      	GOTO       L__Lcd_Cmd35
L__Lcd_Cmd34:
0x004B	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd35:
;__Lib_Lcd.c,36 :: 		
0x004C	0x1853      	BTFSC      FARG_Lcd_Cmd_out_char, 0
0x004D	0x2850      	GOTO       L__Lcd_Cmd36
0x004E	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x004F	0x2851      	GOTO       L__Lcd_Cmd37
L__Lcd_Cmd36:
0x0050	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd37:
;__Lib_Lcd.c,38 :: 		
0x0051	0x1683      	BSF        STATUS, 5
0x0052	0x1303      	BCF        STATUS, 6
0x0053	0x1845      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x0054	0x2858      	GOTO       L__Lcd_Cmd38
0x0055	0x1283      	BCF        STATUS, 5
0x0056	0x1606      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x0057	0x285A      	GOTO       L__Lcd_Cmd39
L__Lcd_Cmd38:
0x0058	0x1283      	BCF        STATUS, 5
0x0059	0x1206      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd39:
;__Lib_Lcd.c,40 :: 		
0x005A	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,41 :: 		
0x005B	0x200A      	CALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x005C	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,44 :: 		
0x005D	0x1683      	BSF        STATUS, 5
0x005E	0x1C45      	BTFSS      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x005F	0x2862      	GOTO       L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x0060	0x200D      	CALL       _Delay_5500us
0x0061	0x2863      	GOTO       L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x0062	0x2003      	CALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
0x0063	0x0008      	RETURN
; end of _Lcd_Cmd
_Div_16x16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x0064	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x0065	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x0066	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x0067	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x0068	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x0069	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x006A	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x006B	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x006C	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x006D	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x006E	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x006F	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x0070	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x0071	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x0072	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x0073	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x0074	0x287C      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x0075	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x0076	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x0077	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x0078	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x0079	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x007A	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x007B	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x007C	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x007D	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x007E	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x007F	0x286A      	GOTO       $-21
;__Lib_Math.c,251 :: 		
0x0080	0x0008      	RETURN
; end of _Div_16x16_U
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x0081	0x1683      	BSF        STATUS, 5
0x0082	0x1303      	BCF        STATUS, 6
0x0083	0x1045      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,53 :: 		
0x0084	0x1283      	BCF        STATUS, 5
0x0085	0x1703      	BSF        STATUS, 6
0x0086	0x0852      	MOVF       FARG_Lcd_Chr_CP_out_char, 0
0x0087	0x00D3      	MOVWF      FARG_Lcd_Cmd_out_char
0x0088	0x201A      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x0089	0x1683      	BSF        STATUS, 5
0x008A	0x1445      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,55 :: 		
0x008B	0x0008      	RETURN
; end of _Lcd_Chr_CP
_Lcd_Chr:
;__Lib_Lcd.c,65 :: 		
;__Lib_Lcd.c,66 :: 		
0x008C	0x289E      	GOTO       L_Lcd_Chr4
;__Lib_Lcd.c,67 :: 		
L_Lcd_Chr6:
0x008D	0x3080      	MOVLW      128
0x008E	0x1283      	BCF        STATUS, 5
0x008F	0x1703      	BSF        STATUS, 6
0x0090	0x00CD      	MOVWF      FARG_Lcd_Chr_row
0x0091	0x28B1      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,68 :: 		
L_Lcd_Chr7:
0x0092	0x30C0      	MOVLW      192
0x0093	0x00CD      	MOVWF      FARG_Lcd_Chr_row
0x0094	0x28B1      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,69 :: 		
L_Lcd_Chr8:
0x0095	0x3094      	MOVLW      148
0x0096	0x00CD      	MOVWF      FARG_Lcd_Chr_row
0x0097	0x28B1      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,70 :: 		
L_Lcd_Chr9:
0x0098	0x30D4      	MOVLW      212
0x0099	0x00CD      	MOVWF      FARG_Lcd_Chr_row
0x009A	0x28B1      	GOTO       L_Lcd_Chr5
;__Lib_Lcd.c,71 :: 		
L_Lcd_Chr10:
0x009B	0x3080      	MOVLW      128
0x009C	0x00CD      	MOVWF      FARG_Lcd_Chr_row
;__Lib_Lcd.c,72 :: 		
0x009D	0x28B1      	GOTO       L_Lcd_Chr5
L_Lcd_Chr4:
0x009E	0x1283      	BCF        STATUS, 5
0x009F	0x1703      	BSF        STATUS, 6
0x00A0	0x084D      	MOVF       FARG_Lcd_Chr_row, 0
0x00A1	0x3A01      	XORLW      1
0x00A2	0x1903      	BTFSC      STATUS, 2
0x00A3	0x288D      	GOTO       L_Lcd_Chr6
0x00A4	0x084D      	MOVF       FARG_Lcd_Chr_row, 0
0x00A5	0x3A02      	XORLW      2
0x00A6	0x1903      	BTFSC      STATUS, 2
0x00A7	0x2892      	GOTO       L_Lcd_Chr7
0x00A8	0x084D      	MOVF       FARG_Lcd_Chr_row, 0
0x00A9	0x3A03      	XORLW      3
0x00AA	0x1903      	BTFSC      STATUS, 2
0x00AB	0x2895      	GOTO       L_Lcd_Chr8
0x00AC	0x084D      	MOVF       FARG_Lcd_Chr_row, 0
0x00AD	0x3A04      	XORLW      4
0x00AE	0x1903      	BTFSC      STATUS, 2
0x00AF	0x2898      	GOTO       L_Lcd_Chr9
0x00B0	0x289B      	GOTO       L_Lcd_Chr10
L_Lcd_Chr5:
;__Lib_Lcd.c,74 :: 		
0x00B1	0x034E      	DECF       FARG_Lcd_Chr_column, 0
0x00B2	0x00F0      	MOVWF      R0
0x00B3	0x084D      	MOVF       FARG_Lcd_Chr_row, 0
0x00B4	0x07F0      	ADDWF      R0, 1
0x00B5	0x0870      	MOVF       R0, 0
0x00B6	0x00CD      	MOVWF      FARG_Lcd_Chr_row
;__Lib_Lcd.c,76 :: 		
0x00B7	0x1683      	BSF        STATUS, 5
0x00B8	0x1303      	BCF        STATUS, 6
0x00B9	0x1445      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,77 :: 		
0x00BA	0x0870      	MOVF       R0, 0
0x00BB	0x1283      	BCF        STATUS, 5
0x00BC	0x1703      	BSF        STATUS, 6
0x00BD	0x00D3      	MOVWF      FARG_Lcd_Cmd_out_char
0x00BE	0x201A      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,79 :: 		
0x00BF	0x1683      	BSF        STATUS, 5
0x00C0	0x1045      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,80 :: 		
0x00C1	0x1283      	BCF        STATUS, 5
0x00C2	0x1703      	BSF        STATUS, 6
0x00C3	0x084F      	MOVF       FARG_Lcd_Chr_out_char, 0
0x00C4	0x00D3      	MOVWF      FARG_Lcd_Cmd_out_char
0x00C5	0x201A      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,81 :: 		
0x00C6	0x1683      	BSF        STATUS, 5
0x00C7	0x1445      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,82 :: 		
0x00C8	0x0008      	RETURN
; end of _Lcd_Chr
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x00C9	0x28DB      	GOTO       L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x00CA	0x3080      	MOVLW      128
0x00CB	0x1283      	BCF        STATUS, 5
0x00CC	0x1703      	BSF        STATUS, 6
0x00CD	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x00CE	0x28EE      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x00CF	0x30C0      	MOVLW      192
0x00D0	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x00D1	0x28EE      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x00D2	0x3094      	MOVLW      148
0x00D3	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x00D4	0x28EE      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x00D5	0x30D4      	MOVLW      212
0x00D6	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x00D7	0x28EE      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x00D8	0x3080      	MOVLW      128
0x00D9	0x00CD      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,193 :: 		
0x00DA	0x28EE      	GOTO       L_Lcd_Out12
L_Lcd_Out11:
0x00DB	0x1283      	BCF        STATUS, 5
0x00DC	0x1703      	BSF        STATUS, 6
0x00DD	0x084D      	MOVF       FARG_Lcd_Out_row, 0
0x00DE	0x3A01      	XORLW      1
0x00DF	0x1903      	BTFSC      STATUS, 2
0x00E0	0x28CA      	GOTO       L_Lcd_Out13
0x00E1	0x084D      	MOVF       FARG_Lcd_Out_row, 0
0x00E2	0x3A02      	XORLW      2
0x00E3	0x1903      	BTFSC      STATUS, 2
0x00E4	0x28CF      	GOTO       L_Lcd_Out14
0x00E5	0x084D      	MOVF       FARG_Lcd_Out_row, 0
0x00E6	0x3A03      	XORLW      3
0x00E7	0x1903      	BTFSC      STATUS, 2
0x00E8	0x28D2      	GOTO       L_Lcd_Out15
0x00E9	0x084D      	MOVF       FARG_Lcd_Out_row, 0
0x00EA	0x3A04      	XORLW      4
0x00EB	0x1903      	BTFSC      STATUS, 2
0x00EC	0x28D5      	GOTO       L_Lcd_Out16
0x00ED	0x28D8      	GOTO       L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x00EE	0x034E      	DECF       FARG_Lcd_Out_column, 0
0x00EF	0x00F0      	MOVWF      R0
0x00F0	0x084D      	MOVF       FARG_Lcd_Out_row, 0
0x00F1	0x07F0      	ADDWF      R0, 1
0x00F2	0x0870      	MOVF       R0, 0
0x00F3	0x00CD      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x00F4	0x0870      	MOVF       R0, 0
0x00F5	0x00D3      	MOVWF      FARG_Lcd_Cmd_out_char
0x00F6	0x201A      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x00F7	0x1683      	BSF        STATUS, 5
0x00F8	0x1045      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,198 :: 		
0x00F9	0x1283      	BCF        STATUS, 5
0x00FA	0x1703      	BSF        STATUS, 6
0x00FB	0x01D0      	CLRF       Lcd_Out_i_L0
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x00FC	0x0850      	MOVF       Lcd_Out_i_L0, 0
0x00FD	0x074F      	ADDWF      FARG_Lcd_Out_text, 0
0x00FE	0x0084      	MOVWF      FSR
0x00FF	0x0800      	MOVF       INDF, 0
0x0100	0x1903      	BTFSC      STATUS, 2
0x0101	0x290C      	GOTO       L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0102	0x0850      	MOVF       Lcd_Out_i_L0, 0
0x0103	0x074F      	ADDWF      FARG_Lcd_Out_text, 0
0x0104	0x0084      	MOVWF      FSR
0x0105	0x0800      	MOVF       INDF, 0
0x0106	0x00D2      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0107	0x2081      	CALL       _Lcd_Chr_CP
0x0108	0x1283      	BCF        STATUS, 5
0x0109	0x1703      	BSF        STATUS, 6
0x010A	0x0AD0      	INCF       Lcd_Out_i_L0, 1
0x010B	0x28FC      	GOTO       L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x010C	0x1683      	BSF        STATUS, 5
0x010D	0x1303      	BCF        STATUS, 6
0x010E	0x1445      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,202 :: 		
0x010F	0x0008      	RETURN
; end of _Lcd_Out
_EEPROM_Read:
;__Lib_EEPROM.c,4 :: 		
;__Lib_EEPROM.c,5 :: 		
0x0110	0x1283      	BCF        STATUS, 5
0x0111	0x1703      	BSF        STATUS, 6
0x0112	0x084D      	MOVF       FARG_EEPROM_Read_Address, 0
0x0113	0x008D      	MOVWF      EEADR
;__Lib_EEPROM.c,6 :: 		
0x0114	0x1683      	BSF        STATUS, 5
0x0115	0x138C      	BCF        EECON1, 7
;__Lib_EEPROM.c,12 :: 		
0x0116	0x140C      	BSF        EECON1, 0
;__Lib_EEPROM.c,13 :: 		
0x0117	0x1283      	BCF        STATUS, 5
0x0118	0x080C      	MOVF       EEDATA, 0
0x0119	0x00F0      	MOVWF      R0
;__Lib_EEPROM.c,14 :: 		
0x011A	0x0008      	RETURN
; end of _EEPROM_Read
_TrimLeft:
;Seminarska.c,39 :: 		void TrimLeft(char *str) {
;Seminarska.c,40 :: 		char count  = 1;
0x011B	0x3001      	MOVLW      1
0x011C	0x1283      	BCF        STATUS, 5
0x011D	0x1703      	BSF        STATUS, 6
0x011E	0x00CE      	MOVWF      TrimLeft_count_L0
;Seminarska.c,41 :: 		while (*str++ != 0) {
L_TrimLeft0:
0x011F	0x084D      	MOVF       FARG_TrimLeft_str, 0
0x0120	0x00F1      	MOVWF      R1
0x0121	0x0ACD      	INCF       FARG_TrimLeft_str, 1
0x0122	0x0871      	MOVF       R1, 0
0x0123	0x0084      	MOVWF      FSR
0x0124	0x0800      	MOVF       INDF, 0
0x0125	0x3A00      	XORLW      0
0x0126	0x1903      	BTFSC      STATUS, 2
0x0127	0x293C      	GOTO       L_TrimLeft1
;Seminarska.c,42 :: 		if (*str != 32) {
0x0128	0x084D      	MOVF       FARG_TrimLeft_str, 0
0x0129	0x0084      	MOVWF      FSR
0x012A	0x0800      	MOVF       INDF, 0
0x012B	0x3A20      	XORLW      32
0x012C	0x1903      	BTFSC      STATUS, 2
0x012D	0x293A      	GOTO       L_TrimLeft2
;Seminarska.c,43 :: 		*(str - count--) = *str;
0x012E	0x084E      	MOVF       TrimLeft_count_L0, 0
0x012F	0x024D      	SUBWF      FARG_TrimLeft_str, 0
0x0130	0x00F1      	MOVWF      R1
0x0131	0x084D      	MOVF       FARG_TrimLeft_str, 0
0x0132	0x0084      	MOVWF      FSR
0x0133	0x0800      	MOVF       INDF, 0
0x0134	0x00F0      	MOVWF      R0
0x0135	0x0871      	MOVF       R1, 0
0x0136	0x0084      	MOVWF      FSR
0x0137	0x0870      	MOVF       R0, 0
0x0138	0x0080      	MOVWF      INDF
0x0139	0x03CE      	DECF       TrimLeft_count_L0, 1
;Seminarska.c,44 :: 		}
L_TrimLeft2:
;Seminarska.c,45 :: 		count++;
0x013A	0x0ACE      	INCF       TrimLeft_count_L0, 1
;Seminarska.c,46 :: 		}
0x013B	0x291F      	GOTO       L_TrimLeft0
L_TrimLeft1:
;Seminarska.c,47 :: 		}
0x013C	0x0008      	RETURN
; end of _TrimLeft
_WordToStr:
;__Lib_Conversions.c,21 :: 		
;__Lib_Conversions.c,26 :: 		
0x013D	0x1283      	BCF        STATUS, 5
0x013E	0x1703      	BSF        STATUS, 6
0x013F	0x01D0      	CLRF       WordToStr_len_L0
L_WordToStr6:
0x0140	0x3005      	MOVLW      5
0x0141	0x0250      	SUBWF      WordToStr_len_L0, 0
0x0142	0x1803      	BTFSC      STATUS, 0
0x0143	0x294B      	GOTO       L_WordToStr7
;__Lib_Conversions.c,27 :: 		
0x0144	0x0850      	MOVF       WordToStr_len_L0, 0
0x0145	0x074F      	ADDWF      FARG_WordToStr_output, 0
0x0146	0x0084      	MOVWF      FSR
0x0147	0x3020      	MOVLW      32
0x0148	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,26 :: 		
0x0149	0x0AD0      	INCF       WordToStr_len_L0, 1
;__Lib_Conversions.c,27 :: 		
0x014A	0x2940      	GOTO       L_WordToStr6
L_WordToStr7:
;__Lib_Conversions.c,28 :: 		
0x014B	0x0850      	MOVF       WordToStr_len_L0, 0
0x014C	0x074F      	ADDWF      FARG_WordToStr_output, 0
0x014D	0x0084      	MOVWF      FSR
0x014E	0x0180      	CLRF       INDF
0x014F	0x03D0      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,30 :: 		
L_WordToStr9:
;__Lib_Conversions.c,31 :: 		
0x0150	0x0850      	MOVF       WordToStr_len_L0, 0
0x0151	0x074F      	ADDWF      FARG_WordToStr_output, 0
0x0152	0x00D1      	MOVWF      FLOC__WordToStr
0x0153	0x300A      	MOVLW      10
0x0154	0x00F4      	MOVWF      R4
0x0155	0x01F5      	CLRF       R4+1
0x0156	0x084D      	MOVF       FARG_WordToStr_input, 0
0x0157	0x00F0      	MOVWF      R0
0x0158	0x084E      	MOVF       FARG_WordToStr_input+1, 0
0x0159	0x00F1      	MOVWF      R0+1
0x015A	0x2064      	CALL       _Div_16x16_U
0x015B	0x0878      	MOVF       R8, 0
0x015C	0x00F0      	MOVWF      R0
0x015D	0x0879      	MOVF       R8+1, 0
0x015E	0x00F1      	MOVWF      R0+1
0x015F	0x3030      	MOVLW      48
0x0160	0x07F0      	ADDWF      R0, 1
0x0161	0x1703      	BSF        STATUS, 6
0x0162	0x0851      	MOVF       FLOC__WordToStr, 0
0x0163	0x0084      	MOVWF      FSR
0x0164	0x0870      	MOVF       R0, 0
0x0165	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,32 :: 		
0x0166	0x300A      	MOVLW      10
0x0167	0x00F4      	MOVWF      R4
0x0168	0x01F5      	CLRF       R4+1
0x0169	0x084D      	MOVF       FARG_WordToStr_input, 0
0x016A	0x00F0      	MOVWF      R0
0x016B	0x084E      	MOVF       FARG_WordToStr_input+1, 0
0x016C	0x00F1      	MOVWF      R0+1
0x016D	0x2064      	CALL       _Div_16x16_U
0x016E	0x0870      	MOVF       R0, 0
0x016F	0x1703      	BSF        STATUS, 6
0x0170	0x00CD      	MOVWF      FARG_WordToStr_input
0x0171	0x0871      	MOVF       R0+1, 0
0x0172	0x00CE      	MOVWF      FARG_WordToStr_input+1
;__Lib_Conversions.c,33 :: 		
0x0173	0x3000      	MOVLW      0
0x0174	0x0671      	XORWF      R0+1, 0
0x0175	0x1D03      	BTFSS      STATUS, 2
0x0176	0x2979      	GOTO       L__WordToStr63
0x0177	0x3000      	MOVLW      0
0x0178	0x0670      	XORWF      R0, 0
L__WordToStr63:
0x0179	0x1D03      	BTFSS      STATUS, 2
0x017A	0x297C      	GOTO       L_WordToStr11
;__Lib_Conversions.c,34 :: 		
0x017B	0x297E      	GOTO       L_WordToStr10
L_WordToStr11:
;__Lib_Conversions.c,35 :: 		
0x017C	0x03D0      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,36 :: 		
0x017D	0x2950      	GOTO       L_WordToStr9
L_WordToStr10:
;__Lib_Conversions.c,37 :: 		
0x017E	0x0008      	RETURN
; end of _WordToStr
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x017F	0x1283      	BCF        STATUS, 5
0x0180	0x1703      	BSF        STATUS, 6
0x0181	0x0845      	MOVF       ___DoICPAddr+1, 0
0x0182	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0183	0x0844      	MOVF       ___DoICPAddr, 0
0x0184	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
0x0185	0x0008      	RETURN
; end of _____DoICP
_pecatiMin:
;Seminarska.c,54 :: 		void pecatiMin(short q, int p, short red){
;Seminarska.c,55 :: 		k=1;
0x0186	0x3001      	MOVLW      1
0x0187	0x1683      	BSF        STATUS, 5
0x0188	0x1303      	BCF        STATUS, 6
0x0189	0x00B0      	MOVWF      _k
;Seminarska.c,56 :: 		temp = q * 16;
0x018A	0x3004      	MOVLW      4
0x018B	0x00F0      	MOVWF      R0
0x018C	0x1283      	BCF        STATUS, 5
0x018D	0x1703      	BSF        STATUS, 6
0x018E	0x0848      	MOVF       FARG_pecatiMin_q, 0
0x018F	0x1303      	BCF        STATUS, 6
0x0190	0x00B4      	MOVWF      _temp
0x0191	0x3000      	MOVLW      0
0x0192	0x1BB4      	BTFSC      _temp, 7
0x0193	0x30FF      	MOVLW      255
0x0194	0x00B5      	MOVWF      _temp+1
0x0195	0x0870      	MOVF       R0, 0
L__pecatiMin162:
0x0196	0x1903      	BTFSC      STATUS, 2
0x0197	0x299D      	GOTO       L__pecatiMin163
0x0198	0x0DB4      	RLF        _temp, 1
0x0199	0x0DB5      	RLF        _temp+1, 1
0x019A	0x1034      	BCF        _temp, 0
0x019B	0x3EFF      	ADDLW      255
0x019C	0x2996      	GOTO       L__pecatiMin162
L__pecatiMin163:
;Seminarska.c,57 :: 		temp++;
0x019D	0x0AB4      	INCF       _temp, 1
0x019E	0x1903      	BTFSC      STATUS, 2
0x019F	0x0AB5      	INCF       _temp+1, 1
;Seminarska.c,58 :: 		WordToStr(q, print);
0x01A0	0x1703      	BSF        STATUS, 6
0x01A1	0x0848      	MOVF       FARG_pecatiMin_q, 0
0x01A2	0x00CD      	MOVWF      FARG_WordToStr_input
0x01A3	0x3000      	MOVLW      0
0x01A4	0x1BCD      	BTFSC      FARG_WordToStr_input, 7
0x01A5	0x30FF      	MOVLW      255
0x01A6	0x00CE      	MOVWF      FARG_WordToStr_input+1
0x01A7	0x30B1      	MOVLW      _print
0x01A8	0x00CF      	MOVWF      FARG_WordToStr_output
0x01A9	0x213D      	CALL       _WordToStr
;Seminarska.c,59 :: 		TrimLeft(print);
0x01AA	0x30B1      	MOVLW      _print
0x01AB	0x00CD      	MOVWF      FARG_TrimLeft_str
0x01AC	0x211B      	CALL       _TrimLeft
;Seminarska.c,60 :: 		LCD_Out(red, 1, print);
0x01AD	0x084B      	MOVF       FARG_pecatiMin_red, 0
0x01AE	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x01AF	0x3001      	MOVLW      1
0x01B0	0x00CE      	MOVWF      FARG_Lcd_Out_column
0x01B1	0x30B1      	MOVLW      _print
0x01B2	0x00CF      	MOVWF      FARG_Lcd_Out_text
0x01B3	0x20C9      	CALL       _Lcd_Out
;Seminarska.c,61 :: 		k++;
0x01B4	0x0AB0      	INCF       _k, 1
;Seminarska.c,62 :: 		LCD_Chr(red, k, 32);
0x01B5	0x1283      	BCF        STATUS, 5
0x01B6	0x1703      	BSF        STATUS, 6
0x01B7	0x084B      	MOVF       FARG_pecatiMin_red, 0
0x01B8	0x00CD      	MOVWF      FARG_Lcd_Chr_row
0x01B9	0x1683      	BSF        STATUS, 5
0x01BA	0x1303      	BCF        STATUS, 6
0x01BB	0x0830      	MOVF       _k, 0
0x01BC	0x1283      	BCF        STATUS, 5
0x01BD	0x1703      	BSF        STATUS, 6
0x01BE	0x00CE      	MOVWF      FARG_Lcd_Chr_column
0x01BF	0x3020      	MOVLW      32
0x01C0	0x00CF      	MOVWF      FARG_Lcd_Chr_out_char
0x01C1	0x208C      	CALL       _Lcd_Chr
;Seminarska.c,63 :: 		k++;
0x01C2	0x0AB0      	INCF       _k, 1
;Seminarska.c,64 :: 		for(i = 0; i < 9; i++){
0x01C3	0x1283      	BCF        STATUS, 5
0x01C4	0x01A0      	CLRF       _i
0x01C5	0x01A1      	CLRF       _i+1
L_pecatiMin3:
0x01C6	0x3080      	MOVLW      128
0x01C7	0x0621      	XORWF      _i+1, 0
0x01C8	0x00F0      	MOVWF      R0
0x01C9	0x3080      	MOVLW      128
0x01CA	0x0270      	SUBWF      R0, 0
0x01CB	0x1D03      	BTFSS      STATUS, 2
0x01CC	0x29CF      	GOTO       L__pecatiMin164
0x01CD	0x3009      	MOVLW      9
0x01CE	0x0220      	SUBWF      _i, 0
L__pecatiMin164:
0x01CF	0x1803      	BTFSC      STATUS, 0
0x01D0	0x29FB      	GOTO       L_pecatiMin4
;Seminarska.c,65 :: 		kp = EEPROM_Read(temp);
0x01D1	0x0834      	MOVF       _temp, 0
0x01D2	0x1703      	BSF        STATUS, 6
0x01D3	0x00CD      	MOVWF      FARG_EEPROM_Read_Address
0x01D4	0x2110      	CALL       _EEPROM_Read
0x01D5	0x0870      	MOVF       R0, 0
0x01D6	0x1683      	BSF        STATUS, 5
0x01D7	0x1303      	BCF        STATUS, 6
0x01D8	0x00AD      	MOVWF      _kp
;Seminarska.c,66 :: 		if(kp > 64 && kp < 123){
0x01D9	0x0870      	MOVF       R0, 0
0x01DA	0x3C40      	SUBLW      64
0x01DB	0x1803      	BTFSC      STATUS, 0
0x01DC	0x29F3      	GOTO       L_pecatiMin8
0x01DD	0x307B      	MOVLW      123
0x01DE	0x022D      	SUBWF      _kp, 0
0x01DF	0x1803      	BTFSC      STATUS, 0
0x01E0	0x29F3      	GOTO       L_pecatiMin8
L__pecatiMin155:
;Seminarska.c,67 :: 		Lcd_Chr(red, k, kp);
0x01E1	0x1283      	BCF        STATUS, 5
0x01E2	0x1703      	BSF        STATUS, 6
0x01E3	0x084B      	MOVF       FARG_pecatiMin_red, 0
0x01E4	0x00CD      	MOVWF      FARG_Lcd_Chr_row
0x01E5	0x1683      	BSF        STATUS, 5
0x01E6	0x1303      	BCF        STATUS, 6
0x01E7	0x0830      	MOVF       _k, 0
0x01E8	0x1283      	BCF        STATUS, 5
0x01E9	0x1703      	BSF        STATUS, 6
0x01EA	0x00CE      	MOVWF      FARG_Lcd_Chr_column
0x01EB	0x1683      	BSF        STATUS, 5
0x01EC	0x1303      	BCF        STATUS, 6
0x01ED	0x082D      	MOVF       _kp, 0
0x01EE	0x1283      	BCF        STATUS, 5
0x01EF	0x1703      	BSF        STATUS, 6
0x01F0	0x00CF      	MOVWF      FARG_Lcd_Chr_out_char
0x01F1	0x208C      	CALL       _Lcd_Chr
;Seminarska.c,68 :: 		k++;
0x01F2	0x0AB0      	INCF       _k, 1
;Seminarska.c,69 :: 		}
L_pecatiMin8:
;Seminarska.c,70 :: 		temp++;
0x01F3	0x1283      	BCF        STATUS, 5
0x01F4	0x0AB4      	INCF       _temp, 1
0x01F5	0x1903      	BTFSC      STATUS, 2
0x01F6	0x0AB5      	INCF       _temp+1, 1
;Seminarska.c,64 :: 		for(i = 0; i < 9; i++){
0x01F7	0x0AA0      	INCF       _i, 1
0x01F8	0x1903      	BTFSC      STATUS, 2
0x01F9	0x0AA1      	INCF       _i+1, 1
;Seminarska.c,71 :: 		}
0x01FA	0x29C6      	GOTO       L_pecatiMin3
L_pecatiMin4:
;Seminarska.c,72 :: 		k = 10;
0x01FB	0x300A      	MOVLW      10
0x01FC	0x1683      	BSF        STATUS, 5
0x01FD	0x00B0      	MOVWF      _k
;Seminarska.c,73 :: 		WordToStr(p, print);
0x01FE	0x1283      	BCF        STATUS, 5
0x01FF	0x1703      	BSF        STATUS, 6
0x0200	0x0849      	MOVF       FARG_pecatiMin_p, 0
0x0201	0x00CD      	MOVWF      FARG_WordToStr_input
0x0202	0x084A      	MOVF       FARG_pecatiMin_p+1, 0
0x0203	0x00CE      	MOVWF      FARG_WordToStr_input+1
0x0204	0x30B1      	MOVLW      _print
0x0205	0x00CF      	MOVWF      FARG_WordToStr_output
0x0206	0x213D      	CALL       _WordToStr
;Seminarska.c,74 :: 		LCD_Chr(red, k, 32);
0x0207	0x084B      	MOVF       FARG_pecatiMin_red, 0
0x0208	0x00CD      	MOVWF      FARG_Lcd_Chr_row
0x0209	0x1683      	BSF        STATUS, 5
0x020A	0x1303      	BCF        STATUS, 6
0x020B	0x0830      	MOVF       _k, 0
0x020C	0x1283      	BCF        STATUS, 5
0x020D	0x1703      	BSF        STATUS, 6
0x020E	0x00CE      	MOVWF      FARG_Lcd_Chr_column
0x020F	0x3020      	MOVLW      32
0x0210	0x00CF      	MOVWF      FARG_Lcd_Chr_out_char
0x0211	0x208C      	CALL       _Lcd_Chr
;Seminarska.c,75 :: 		k++;
0x0212	0x0AB0      	INCF       _k, 1
;Seminarska.c,76 :: 		TrimLeft(print);
0x0213	0x30B1      	MOVLW      _print
0x0214	0x1283      	BCF        STATUS, 5
0x0215	0x1703      	BSF        STATUS, 6
0x0216	0x00CD      	MOVWF      FARG_TrimLeft_str
0x0217	0x211B      	CALL       _TrimLeft
;Seminarska.c,77 :: 		Lcd_Out(red, k, print);
0x0218	0x084B      	MOVF       FARG_pecatiMin_red, 0
0x0219	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x021A	0x1683      	BSF        STATUS, 5
0x021B	0x1303      	BCF        STATUS, 6
0x021C	0x0830      	MOVF       _k, 0
0x021D	0x1283      	BCF        STATUS, 5
0x021E	0x1703      	BSF        STATUS, 6
0x021F	0x00CE      	MOVWF      FARG_Lcd_Out_column
0x0220	0x30B1      	MOVLW      _print
0x0221	0x00CF      	MOVWF      FARG_Lcd_Out_text
0x0222	0x20C9      	CALL       _Lcd_Out
;Seminarska.c,78 :: 		temp+=2;
0x0223	0x3002      	MOVLW      2
0x0224	0x1283      	BCF        STATUS, 5
0x0225	0x07B4      	ADDWF      _temp, 1
0x0226	0x1803      	BTFSC      STATUS, 0
0x0227	0x0AB5      	INCF       _temp+1, 1
;Seminarska.c,79 :: 		for(i = 0; i < 3; i++){
0x0228	0x01A0      	CLRF       _i
0x0229	0x01A1      	CLRF       _i+1
L_pecatiMin9:
0x022A	0x3080      	MOVLW      128
0x022B	0x0621      	XORWF      _i+1, 0
0x022C	0x00F0      	MOVWF      R0
0x022D	0x3080      	MOVLW      128
0x022E	0x0270      	SUBWF      R0, 0
0x022F	0x1D03      	BTFSS      STATUS, 2
0x0230	0x2A33      	GOTO       L__pecatiMin165
0x0231	0x3003      	MOVLW      3
0x0232	0x0220      	SUBWF      _i, 0
L__pecatiMin165:
0x0233	0x1803      	BTFSC      STATUS, 0
0x0234	0x2A4D      	GOTO       L_pecatiMin10
;Seminarska.c,80 :: 		kp = EEPROM_Read(temp);
0x0235	0x0834      	MOVF       _temp, 0
0x0236	0x1703      	BSF        STATUS, 6
0x0237	0x00CD      	MOVWF      FARG_EEPROM_Read_Address
0x0238	0x2110      	CALL       _EEPROM_Read
0x0239	0x0870      	MOVF       R0, 0
0x023A	0x1683      	BSF        STATUS, 5
0x023B	0x1303      	BCF        STATUS, 6
0x023C	0x00AD      	MOVWF      _kp
;Seminarska.c,81 :: 		Lcd_Chr_CP(kp);
0x023D	0x0870      	MOVF       R0, 0
0x023E	0x1283      	BCF        STATUS, 5
0x023F	0x1703      	BSF        STATUS, 6
0x0240	0x00D2      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0241	0x2081      	CALL       _Lcd_Chr_CP
;Seminarska.c,82 :: 		temp+=1;
0x0242	0x1283      	BCF        STATUS, 5
0x0243	0x0AB4      	INCF       _temp, 1
0x0244	0x1903      	BTFSC      STATUS, 2
0x0245	0x0AB5      	INCF       _temp+1, 1
;Seminarska.c,83 :: 		k++;
0x0246	0x1683      	BSF        STATUS, 5
0x0247	0x0AB0      	INCF       _k, 1
;Seminarska.c,79 :: 		for(i = 0; i < 3; i++){
0x0248	0x1283      	BCF        STATUS, 5
0x0249	0x0AA0      	INCF       _i, 1
0x024A	0x1903      	BTFSC      STATUS, 2
0x024B	0x0AA1      	INCF       _i+1, 1
;Seminarska.c,84 :: 		}
0x024C	0x2A2A      	GOTO       L_pecatiMin9
L_pecatiMin10:
;Seminarska.c,85 :: 		}
0x024D	0x0008      	RETURN
; end of _pecatiMin
_Delay_10us:
;__Lib_Delays.c,11 :: 		void Delay_10us() {
;__Lib_Delays.c,12 :: 		Delay_us(10);
0x024E	0x3006      	MOVLW      6
0x024F	0x1283      	BCF        STATUS, 5
0x0250	0x1303      	BCF        STATUS, 6
0x0251	0x00FD      	MOVWF      R13
L_Delay_10us0:
0x0252	0x0BFD      	DECFSZ     R13, 1
0x0253	0x2A52      	GOTO       L_Delay_10us0
0x0254	0x0000      	NOP
;__Lib_Delays.c,13 :: 		}
0x0255	0x0008      	RETURN
; end of _Delay_10us
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x0256	0x300E      	MOVLW      14
0x0257	0x1283      	BCF        STATUS, 5
0x0258	0x1303      	BCF        STATUS, 6
0x0259	0x00FD      	MOVWF      R13
L_Delay_22us1:
0x025A	0x0BFD      	DECFSZ     R13, 1
0x025B	0x2A5A      	GOTO       L_Delay_22us1
0x025C	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
0x025D	0x0008      	RETURN
; end of _Delay_22us
_Keypad_Key_Press:
;__Lib_Keypad4x4.c,38 :: 		
;__Lib_Keypad4x4.c,42 :: 		
0x025E	0x1283      	BCF        STATUS, 5
0x025F	0x1703      	BSF        STATUS, 6
0x0260	0x01C8      	CLRF       Keypad_Key_Press_rslt_L0
;__Lib_Keypad4x4.c,43 :: 		
0x0261	0x01CA      	CLRF       Keypad_Key_Press_loc_L0
;__Lib_Keypad4x4.c,44 :: 		
0x0262	0x01CB      	CLRF       Keypad_Key_Press_rowcnt_L0
;__Lib_Keypad4x4.c,45 :: 		
0x0263	0x3010      	MOVLW      16
0x0264	0x00CC      	MOVWF      Keypad_Key_Press_shifter_L0
;__Lib_Keypad4x4.c,47 :: 		
L_Keypad_Key_Press0:
0x0265	0x3004      	MOVLW      4
0x0266	0x024B      	SUBWF      Keypad_Key_Press_rowcnt_L0, 0
0x0267	0x1803      	BTFSC      STATUS, 0
0x0268	0x2A8E      	GOTO       L_Keypad_Key_Press1
;__Lib_Keypad4x4.c,49 :: 		
0x0269	0x30F0      	MOVLW      240
0x026A	0x1303      	BCF        STATUS, 6
0x026B	0x0088      	MOVWF      keypadPort
;__Lib_Keypad4x4.c,50 :: 		
0x026C	0x1703      	BSF        STATUS, 6
0x026D	0x094C      	COMF       Keypad_Key_Press_shifter_L0, 0
0x026E	0x1683      	BSF        STATUS, 5
0x026F	0x1303      	BCF        STATUS, 6
0x0270	0x0088      	MOVWF      keypadPort+128
;__Lib_Keypad4x4.c,54 :: 		
0x0271	0x200A      	CALL       _Delay_1us
;__Lib_Keypad4x4.c,55 :: 		
0x0272	0x200A      	CALL       _Delay_1us
;__Lib_Keypad4x4.c,56 :: 		
0x0273	0x300F      	MOVLW      15
0x0274	0x1283      	BCF        STATUS, 5
0x0275	0x0508      	ANDWF      keypadPort, 0
0x0276	0x00F0      	MOVWF      R0
0x0277	0x0870      	MOVF       R0, 0
0x0278	0x1703      	BSF        STATUS, 6
0x0279	0x00C9      	MOVWF      Keypad_Key_Press_kdata_L0
;__Lib_Keypad4x4.c,57 :: 		
0x027A	0x0870      	MOVF       R0, 0
0x027B	0x1903      	BTFSC      STATUS, 2
0x027C	0x2A88      	GOTO       L_Keypad_Key_Press2
;__Lib_Keypad4x4.c,59 :: 		
0x027D	0x084A      	MOVF       Keypad_Key_Press_loc_L0, 0
0x027E	0x00C8      	MOVWF      Keypad_Key_Press_rslt_L0
;__Lib_Keypad4x4.c,60 :: 		
L_Keypad_Key_Press3:
0x027F	0x0849      	MOVF       Keypad_Key_Press_kdata_L0, 0
0x0280	0x1903      	BTFSC      STATUS, 2
0x0281	0x2A86      	GOTO       L_Keypad_Key_Press4
;__Lib_Keypad4x4.c,61 :: 		
0x0282	0x0CC9      	RRF        Keypad_Key_Press_kdata_L0, 1
0x0283	0x13C9      	BCF        Keypad_Key_Press_kdata_L0, 7
;__Lib_Keypad4x4.c,62 :: 		
0x0284	0x0AC8      	INCF       Keypad_Key_Press_rslt_L0, 1
;__Lib_Keypad4x4.c,63 :: 		
0x0285	0x2A7F      	GOTO       L_Keypad_Key_Press3
L_Keypad_Key_Press4:
;__Lib_Keypad4x4.c,65 :: 		
0x0286	0x3004      	MOVLW      4
0x0287	0x00CB      	MOVWF      Keypad_Key_Press_rowcnt_L0
;__Lib_Keypad4x4.c,66 :: 		
L_Keypad_Key_Press2:
;__Lib_Keypad4x4.c,67 :: 		
0x0288	0x0DCC      	RLF        Keypad_Key_Press_shifter_L0, 1
0x0289	0x104C      	BCF        Keypad_Key_Press_shifter_L0, 0
;__Lib_Keypad4x4.c,68 :: 		
0x028A	0x3004      	MOVLW      4
0x028B	0x07CA      	ADDWF      Keypad_Key_Press_loc_L0, 1
;__Lib_Keypad4x4.c,69 :: 		
0x028C	0x0ACB      	INCF       Keypad_Key_Press_rowcnt_L0, 1
;__Lib_Keypad4x4.c,70 :: 		
0x028D	0x2A65      	GOTO       L_Keypad_Key_Press0
L_Keypad_Key_Press1:
;__Lib_Keypad4x4.c,72 :: 		
0x028E	0x0848      	MOVF       Keypad_Key_Press_rslt_L0, 0
0x028F	0x00F0      	MOVWF      R0
;__Lib_Keypad4x4.c,73 :: 		
0x0290	0x0008      	RETURN
; end of _Keypad_Key_Press
_strcmp:
;__Lib_CString.c,116 :: 		
;__Lib_CString.c,118 :: 		
L_strcmp30:
0x0291	0x1283      	BCF        STATUS, 5
0x0292	0x1703      	BSF        STATUS, 6
0x0293	0x0846      	MOVF       FARG_strcmp_s1, 0
0x0294	0x0084      	MOVWF      FSR
0x0295	0x0800      	MOVF       INDF, 0
0x0296	0x1903      	BTFSC      STATUS, 2
0x0297	0x2AA5      	GOTO       L_strcmp31
0x0298	0x0846      	MOVF       FARG_strcmp_s1, 0
0x0299	0x0084      	MOVWF      FSR
0x029A	0x0800      	MOVF       INDF, 0
0x029B	0x00F1      	MOVWF      R1
0x029C	0x0847      	MOVF       FARG_strcmp_s2, 0
0x029D	0x0084      	MOVWF      FSR
0x029E	0x0871      	MOVF       R1, 0
0x029F	0x0600      	XORWF      INDF, 0
0x02A0	0x1D03      	BTFSS      STATUS, 2
0x02A1	0x2AA5      	GOTO       L_strcmp31
L__strcmp81:
;__Lib_CString.c,119 :: 		
0x02A2	0x0AC6      	INCF       FARG_strcmp_s1, 1
0x02A3	0x0AC7      	INCF       FARG_strcmp_s2, 1
0x02A4	0x2A91      	GOTO       L_strcmp30
L_strcmp31:
;__Lib_CString.c,121 :: 		
0x02A5	0x0846      	MOVF       FARG_strcmp_s1, 0
0x02A6	0x0084      	MOVWF      FSR
0x02A7	0x0800      	MOVF       INDF, 0
0x02A8	0x00F0      	MOVWF      R0
0x02A9	0x0847      	MOVF       FARG_strcmp_s2, 0
0x02AA	0x0084      	MOVWF      FSR
0x02AB	0x0800      	MOVF       INDF, 0
0x02AC	0x02F0      	SUBWF      R0, 1
0x02AD	0x01F1      	CLRF       R0+1
0x02AE	0x1C03      	BTFSS      STATUS, 0
0x02AF	0x03F1      	DECF       R0+1, 1
;__Lib_CString.c,122 :: 		
0x02B0	0x0008      	RETURN
; end of _strcmp
_Mul_16x16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x02B1	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x02B2	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x02B3	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x02B4	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x02B5	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x02B6	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x02B7	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x02B8	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x02B9	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x02BA	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x02BB	0x2AC5      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x02BC	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x02BD	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x02BE	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x02BF	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x02C0	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x02C1	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x02C2	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x02C3	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x02C4	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x02C5	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x02C6	0x2ACD      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x02C7	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x02C8	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x02C9	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x02CA	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x02CB	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x02CC	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x02CD	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x02CE	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x02CF	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x02D0	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x02D1	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x02D2	0x2AB8      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x02D3	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x02D4	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x02D5	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x02D6	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x02D7	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x02D8	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x02D9	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x02DA	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
0x02DB	0x0008      	RETURN
; end of _Mul_16x16_U
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x02DC	0x1683      	BSF        STATUS, 5
0x02DD	0x1303      	BCF        STATUS, 6
0x02DE	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x02DF	0x3090      	MOVLW      144
0x02E0	0x1283      	BCF        STATUS, 5
0x02E1	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x02E2	0x1683      	BSF        STATUS, 5
0x02E3	0x1787      	BSF        TRISC7_bit, 7
;__Lib_UART_c67.c,8 :: 		
0x02E4	0x1307      	BCF        TRISC6_bit, 6
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x02E5	0x1283      	BCF        STATUS, 5
0x02E6	0x1E8C      	BTFSS      PIR1, 5
0x02E7	0x2AEB      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x02E8	0x081A      	MOVF       RCREG, 0
0x02E9	0x00F0      	MOVWF      R0
0x02EA	0x2AE5      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
0x02EB	0x0008      	RETURN
; end of _UART1_Init
_pecati:
;Seminarska.c,87 :: 		void pecati(){
;Seminarska.c,88 :: 		Lcd_Cmd(_LCD_CLEAR);
0x02EC	0x3001      	MOVLW      1
0x02ED	0x1283      	BCF        STATUS, 5
0x02EE	0x1703      	BSF        STATUS, 6
0x02EF	0x00D3      	MOVWF      FARG_Lcd_Cmd_out_char
0x02F0	0x201A      	CALL       _Lcd_Cmd
;Seminarska.c,89 :: 		if(min1Stanica != 100){
0x02F1	0x0843      	MOVF       _min1Stanica, 0
0x02F2	0x3A64      	XORLW      100
0x02F3	0x1903      	BTFSC      STATUS, 2
0x02F4	0x2B03      	GOTO       L_pecati12
;Seminarska.c,90 :: 		pecatiMin(min1Stanica, min1Time, 1);
0x02F5	0x0843      	MOVF       _min1Stanica, 0
0x02F6	0x1703      	BSF        STATUS, 6
0x02F7	0x00C8      	MOVWF      FARG_pecatiMin_q
0x02F8	0x1303      	BCF        STATUS, 6
0x02F9	0x0840      	MOVF       _min1Time, 0
0x02FA	0x1703      	BSF        STATUS, 6
0x02FB	0x00C9      	MOVWF      FARG_pecatiMin_p
0x02FC	0x1303      	BCF        STATUS, 6
0x02FD	0x0841      	MOVF       _min1Time+1, 0
0x02FE	0x1703      	BSF        STATUS, 6
0x02FF	0x00CA      	MOVWF      FARG_pecatiMin_p+1
0x0300	0x3001      	MOVLW      1
0x0301	0x00CB      	MOVWF      FARG_pecatiMin_red
0x0302	0x2186      	CALL       _pecatiMin
;Seminarska.c,91 :: 		}
L_pecati12:
;Seminarska.c,92 :: 		if(min2Stanica != 100){
0x0303	0x0842      	MOVF       _min2Stanica, 0
0x0304	0x3A64      	XORLW      100
0x0305	0x1903      	BTFSC      STATUS, 2
0x0306	0x2B15      	GOTO       L_pecati13
;Seminarska.c,93 :: 		pecatiMin(min2Stanica, min2Time, 2);
0x0307	0x0842      	MOVF       _min2Stanica, 0
0x0308	0x1703      	BSF        STATUS, 6
0x0309	0x00C8      	MOVWF      FARG_pecatiMin_q
0x030A	0x1303      	BCF        STATUS, 6
0x030B	0x0832      	MOVF       _min2Time, 0
0x030C	0x1703      	BSF        STATUS, 6
0x030D	0x00C9      	MOVWF      FARG_pecatiMin_p
0x030E	0x1303      	BCF        STATUS, 6
0x030F	0x0833      	MOVF       _min2Time+1, 0
0x0310	0x1703      	BSF        STATUS, 6
0x0311	0x00CA      	MOVWF      FARG_pecatiMin_p+1
0x0312	0x3002      	MOVLW      2
0x0313	0x00CB      	MOVWF      FARG_pecatiMin_red
0x0314	0x2186      	CALL       _pecatiMin
;Seminarska.c,94 :: 		}
L_pecati13:
;Seminarska.c,96 :: 		}
0x0315	0x0008      	RETURN
; end of _pecati
_greska:
;Seminarska.c,98 :: 		void greska(){
;Seminarska.c,99 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0316	0x3001      	MOVLW      1
0x0317	0x1283      	BCF        STATUS, 5
0x0318	0x1703      	BSF        STATUS, 6
0x0319	0x00D3      	MOVWF      FARG_Lcd_Cmd_out_char
0x031A	0x201A      	CALL       _Lcd_Cmd
;Seminarska.c,100 :: 		Lcd_Out(1,1, "Greshka");
0x031B	0x3001      	MOVLW      1
0x031C	0x1703      	BSF        STATUS, 6
0x031D	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x031E	0x3001      	MOVLW      1
0x031F	0x00CE      	MOVWF      FARG_Lcd_Out_column
0x0320	0x3036      	MOVLW      ?lstr1_Seminarska
0x0321	0x00CF      	MOVWF      FARG_Lcd_Out_text
0x0322	0x20C9      	CALL       _Lcd_Out
;Seminarska.c,101 :: 		Delay_ms(10);
0x0323	0x301A      	MOVLW      26
0x0324	0x00FC      	MOVWF      R12
0x0325	0x30F8      	MOVLW      248
0x0326	0x00FD      	MOVWF      R13
L_greska14:
0x0327	0x0BFD      	DECFSZ     R13, 1
0x0328	0x2B27      	GOTO       L_greska14
0x0329	0x0BFC      	DECFSZ     R12, 1
0x032A	0x2B27      	GOTO       L_greska14
0x032B	0x0000      	NOP
;Seminarska.c,102 :: 		oldState=kp=0;
0x032C	0x01AD      	CLRF       _kp
0x032D	0x01AE      	CLRF       _oldState
;Seminarska.c,103 :: 		brCifri = 0;
0x032E	0x01A9      	CLRF       _brCifri
;Seminarska.c,104 :: 		brStanici = 0;
0x032F	0x1283      	BCF        STATUS, 5
0x0330	0x01EE      	CLRF       _brStanici
0x0331	0x01EF      	CLRF       _brStanici+1
;Seminarska.c,105 :: 		flagPlus = 0;
0x0332	0x1683      	BSF        STATUS, 5
0x0333	0x01AA      	CLRF       _flagPlus
;Seminarska.c,106 :: 		flag3 = 0;
0x0334	0x01AC      	CLRF       _flag3
;Seminarska.c,107 :: 		flagVneseno = 0;
0x0335	0x1283      	BCF        STATUS, 5
0x0336	0x01BF      	CLRF       _flagVneseno
;Seminarska.c,108 :: 		temp = 0;
0x0337	0x01B4      	CLRF       _temp
0x0338	0x01B5      	CLRF       _temp+1
;Seminarska.c,109 :: 		}
0x0339	0x0008      	RETURN
; end of _greska
_clear:
;Seminarska.c,111 :: 		void clear(){
;Seminarska.c,112 :: 		oldState=kp=0;
0x033A	0x1683      	BSF        STATUS, 5
0x033B	0x1303      	BCF        STATUS, 6
0x033C	0x01AD      	CLRF       _kp
0x033D	0x01AE      	CLRF       _oldState
;Seminarska.c,113 :: 		brCifri = 0;
0x033E	0x01A9      	CLRF       _brCifri
;Seminarska.c,114 :: 		brStanici = 0;
0x033F	0x1283      	BCF        STATUS, 5
0x0340	0x01EE      	CLRF       _brStanici
0x0341	0x01EF      	CLRF       _brStanici+1
;Seminarska.c,115 :: 		flagPlus = 0;
0x0342	0x1683      	BSF        STATUS, 5
0x0343	0x01AA      	CLRF       _flagPlus
;Seminarska.c,116 :: 		flag3 = 0;
0x0344	0x01AC      	CLRF       _flag3
;Seminarska.c,117 :: 		pomestuvanje = 0;
0x0345	0x01AB      	CLRF       _pomestuvanje
;Seminarska.c,118 :: 		flagTime = 0;
0x0346	0x1283      	BCF        STATUS, 5
0x0347	0x01BE      	CLRF       _flagTime
;Seminarska.c,119 :: 		flagVneseno = 0;
0x0348	0x01BF      	CLRF       _flagVneseno
;Seminarska.c,120 :: 		temp = 0;
0x0349	0x01B4      	CLRF       _temp
0x034A	0x01B5      	CLRF       _temp+1
;Seminarska.c,121 :: 		}
0x034B	0x0008      	RETURN
; end of _clear
_strcpy:
;__Lib_CString.c,127 :: 		
;__Lib_CString.c,130 :: 		
0x034C	0x1283      	BCF        STATUS, 5
0x034D	0x1703      	BSF        STATUS, 6
0x034E	0x0846      	MOVF       FARG_strcpy_to, 0
0x034F	0x00F2      	MOVWF      R2
;__Lib_CString.c,131 :: 		
L_strcpy34:
0x0350	0x0872      	MOVF       R2, 0
0x0351	0x00F1      	MOVWF      R1
0x0352	0x0AF2      	INCF       R2, 1
0x0353	0x0847      	MOVF       FARG_strcpy_from, 0
0x0354	0x00F0      	MOVWF      R0
0x0355	0x0AC7      	INCF       FARG_strcpy_from, 1
0x0356	0x0870      	MOVF       R0, 0
0x0357	0x0084      	MOVWF      FSR
0x0358	0x0800      	MOVF       INDF, 0
0x0359	0x00F0      	MOVWF      R0
0x035A	0x0871      	MOVF       R1, 0
0x035B	0x0084      	MOVWF      FSR
0x035C	0x0870      	MOVF       R0, 0
0x035D	0x0080      	MOVWF      INDF
0x035E	0x0871      	MOVF       R1, 0
0x035F	0x0084      	MOVWF      FSR
0x0360	0x0800      	MOVF       INDF, 0
0x0361	0x1903      	BTFSC      STATUS, 2
0x0362	0x2B64      	GOTO       L_strcpy35
;__Lib_CString.c,132 :: 		
0x0363	0x2B50      	GOTO       L_strcpy34
L_strcpy35:
;__Lib_CString.c,133 :: 		
0x0364	0x0846      	MOVF       FARG_strcpy_to, 0
0x0365	0x00F0      	MOVWF      R0
;__Lib_CString.c,134 :: 		
0x0366	0x0008      	RETURN
; end of _strcpy
_EEPROM_Write:
;__Lib_EEPROM.c,16 :: 		
;__Lib_EEPROM.c,20 :: 		
L_EEPROM_Write0:
0x0367	0x1683      	BSF        STATUS, 5
0x0368	0x1703      	BSF        STATUS, 6
0x0369	0x1C8C      	BTFSS      EECON1, 1
0x036A	0x2B6D      	GOTO       L_EEPROM_Write1
0x036B	0x0000      	NOP
0x036C	0x2B67      	GOTO       L_EEPROM_Write0
L_EEPROM_Write1:
;__Lib_EEPROM.c,21 :: 		
0x036D	0x1283      	BCF        STATUS, 5
0x036E	0x0846      	MOVF       FARG_EEPROM_Write_Address, 0
0x036F	0x008D      	MOVWF      EEADR
;__Lib_EEPROM.c,22 :: 		
0x0370	0x0847      	MOVF       FARG_EEPROM_Write_data_, 0
0x0371	0x008C      	MOVWF      EEDATA
;__Lib_EEPROM.c,23 :: 		
0x0372	0x1683      	BSF        STATUS, 5
0x0373	0x138C      	BCF        EECON1, 7
;__Lib_EEPROM.c,24 :: 		
0x0374	0x150C      	BSF        EECON1, 2
;__Lib_EEPROM.c,26 :: 		
0x0375	0x080B      	MOVF       INTCON, 0
0x0376	0x00F0      	MOVWF      R0
;__Lib_EEPROM.c,29 :: 		
0x0377	0x138B      	BCF        INTCON, 7
;__Lib_EEPROM.c,30 :: 		
0x0378	0x3055      	MOVLW      85
0x0379	0x008D      	MOVWF      EECON2
;__Lib_EEPROM.c,31 :: 		
0x037A	0x30AA      	MOVLW      170
0x037B	0x008D      	MOVWF      EECON2
;__Lib_EEPROM.c,32 :: 		
0x037C	0x148C      	BSF        EECON1, 1
;__Lib_EEPROM.c,36 :: 		
0x037D	0x1BF0      	BTFSC      R0, 7
0x037E	0x2B81      	GOTO       L__EEPROM_Write2
0x037F	0x138B      	BCF        INTCON, 7
0x0380	0x2B82      	GOTO       L__EEPROM_Write3
L__EEPROM_Write2:
0x0381	0x178B      	BSF        INTCON, 7
L__EEPROM_Write3:
;__Lib_EEPROM.c,37 :: 		
0x0382	0x110C      	BCF        EECON1, 2
;__Lib_EEPROM.c,38 :: 		
0x0383	0x0008      	RETURN
; end of _EEPROM_Write
_Keypad_Key_Click:
;__Lib_Keypad4x4.c,76 :: 		
;__Lib_Keypad4x4.c,80 :: 		
0x0384	0x225E      	CALL       _Keypad_Key_Press
0x0385	0x0870      	MOVF       R0, 0
0x0386	0x1683      	BSF        STATUS, 5
0x0387	0x1303      	BCF        STATUS, 6
0x0388	0x00EF      	MOVWF      Keypad_Key_Click_rslt_L0
;__Lib_Keypad4x4.c,82 :: 		
L_Keypad_Key_Click5:
0x0389	0x300F      	MOVLW      15
0x038A	0x1283      	BCF        STATUS, 5
0x038B	0x0508      	ANDWF      keypadPort, 0
0x038C	0x00F0      	MOVWF      R0
0x038D	0x1903      	BTFSC      STATUS, 2
0x038E	0x2B91      	GOTO       L_Keypad_Key_Click6
;__Lib_Keypad4x4.c,83 :: 		
0x038F	0x224E      	CALL       _Delay_10us
0x0390	0x2B89      	GOTO       L_Keypad_Key_Click5
L_Keypad_Key_Click6:
;__Lib_Keypad4x4.c,85 :: 		
0x0391	0x1683      	BSF        STATUS, 5
0x0392	0x086F      	MOVF       Keypad_Key_Click_rslt_L0, 0
0x0393	0x00F0      	MOVWF      R0
;__Lib_Keypad4x4.c,86 :: 		
0x0394	0x0008      	RETURN
; end of _Keypad_Key_Click
_Keypad_Init:
;__Lib_Keypad4x4.c,33 :: 		
;__Lib_Keypad4x4.c,34 :: 		
0x0395	0x30FF      	MOVLW      255
0x0396	0x1683      	BSF        STATUS, 5
0x0397	0x1303      	BCF        STATUS, 6
0x0398	0x0088      	MOVWF      keypadPort+128
;__Lib_Keypad4x4.c,35 :: 		
0x0399	0x0008      	RETURN
; end of _Keypad_Init
_Mul_8x8_U:
;__Lib_Math.c,103 :: 		
;__Lib_Math.c,108 :: 		
0x039A	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,109 :: 		
0x039B	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,110 :: 		
0x039C	0x0870      	MOVF       R0, 0
;__Lib_Math.c,111 :: 		
0x039D	0x00F1      	MOVWF      R1
;__Lib_Math.c,112 :: 		
0x039E	0x01F0      	CLRF       R0
;__Lib_Math.c,113 :: 		
0x039F	0x3008      	MOVLW      8
;__Lib_Math.c,114 :: 		
0x03A0	0x00FC      	MOVWF      R12
;__Lib_Math.c,115 :: 		
0x03A1	0x0871      	MOVF       R1, 0
;__Lib_Math.c,116 :: 		
0x03A2	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,117 :: 		
0x03A3	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,118 :: 		
0x03A4	0x2BA9      	GOTO       $+5
;__Lib_Math.c,119 :: 		
0x03A5	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,120 :: 		
0x03A6	0x2BA2      	GOTO       $-4
;__Lib_Math.c,121 :: 		
0x03A7	0x01F1      	CLRF       R1
;__Lib_Math.c,122 :: 		
0x03A8	0x3400      	RETLW      0
;__Lib_Math.c,123 :: 		
0x03A9	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,124 :: 		
0x03AA	0x2BAE      	GOTO       $+4
;__Lib_Math.c,125 :: 		
0x03AB	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,126 :: 		
0x03AC	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,127 :: 		
0x03AD	0x07F1      	ADDWF      R1, 1
;__Lib_Math.c,128 :: 		
0x03AE	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,129 :: 		
0x03AF	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,130 :: 		
0x03B0	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,131 :: 		
0x03B1	0x2BAB      	GOTO       $-6
;__Lib_Math.c,133 :: 		
;__Lib_Math.c,134 :: 		
0x03B2	0x0008      	RETURN
; end of _Mul_8x8_U
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x03B3	0x217F      	CALL       _____DoICP
0x03B4	0x118A      	BCF        PCLATH, 3
0x03B5	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x03B6	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x03B7	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x03B8	0x0AC4      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x03B9	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x03BA	0x0AC5      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x03BB	0x03F0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x03BC	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x03BD	0x2BB3      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
0x03BE	0x0008      	RETURN
; end of ___CC2DW
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x03BF	0x1683      	BSF        STATUS, 5
0x03C0	0x1303      	BCF        STATUS, 6
0x03C1	0x1286      	BCF        LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,87 :: 		
0x03C2	0x1206      	BCF        LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,88 :: 		
0x03C3	0x1006      	BCF        LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,89 :: 		
0x03C4	0x1086      	BCF        LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,90 :: 		
0x03C5	0x1106      	BCF        LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,91 :: 		
0x03C6	0x1186      	BCF        LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,93 :: 		
0x03C7	0x1283      	BCF        STATUS, 5
0x03C8	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,94 :: 		
0x03C9	0x1206      	BCF        LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,95 :: 		
0x03CA	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,96 :: 		
0x03CB	0x1106      	BCF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,97 :: 		
0x03CC	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,98 :: 		
0x03CD	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,100 :: 		
0x03CE	0x200D      	CALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x03CF	0x200D      	CALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x03D0	0x200D      	CALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x03D1	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,106 :: 		
0x03D2	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,107 :: 		
0x03D3	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,108 :: 		
0x03D4	0x200A      	CALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x03D5	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,110 :: 		
0x03D6	0x200D      	CALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x03D7	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,113 :: 		
0x03D8	0x200A      	CALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x03D9	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,115 :: 		
0x03DA	0x200D      	CALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x03DB	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,118 :: 		
0x03DC	0x200A      	CALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x03DD	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,120 :: 		
0x03DE	0x200D      	CALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x03DF	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,124 :: 		
0x03E0	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,125 :: 		
0x03E1	0x200A      	CALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x03E2	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,127 :: 		
0x03E3	0x200D      	CALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x03E4	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,131 :: 		
0x03E5	0x200A      	CALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x03E6	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,134 :: 		
0x03E7	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,135 :: 		
0x03E8	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,136 :: 		
0x03E9	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,137 :: 		
0x03EA	0x200A      	CALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x03EB	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,139 :: 		
0x03EC	0x200D      	CALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x03ED	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,143 :: 		
0x03EE	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,144 :: 		
0x03EF	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,145 :: 		
0x03F0	0x200A      	CALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x03F1	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,148 :: 		
0x03F2	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,149 :: 		
0x03F3	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,150 :: 		
0x03F4	0x200A      	CALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x03F5	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,152 :: 		
0x03F6	0x200D      	CALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x03F7	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,156 :: 		
0x03F8	0x200A      	CALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x03F9	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,159 :: 		
0x03FA	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,160 :: 		
0x03FB	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,161 :: 		
0x03FC	0x200A      	CALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x03FD	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,163 :: 		
0x03FE	0x200D      	CALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x03FF	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,167 :: 		
0x0400	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,168 :: 		
0x0401	0x200A      	CALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x0402	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,171 :: 		
0x0403	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,172 :: 		
0x0404	0x1506      	BSF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,173 :: 		
0x0405	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,174 :: 		
0x0406	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,175 :: 		
0x0407	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,176 :: 		
0x0408	0x200A      	CALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x0409	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,179 :: 		
0x040A	0x200D      	CALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x040B	0x1683      	BSF        STATUS, 5
0x040C	0x1445      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,182 :: 		
0x040D	0x0008      	RETURN
; end of _Lcd_Init
_UART1_Data_Ready:
;__Lib_UART_c67.c,16 :: 		
;__Lib_UART_c67.c,17 :: 		
0x040E	0x3000      	MOVLW      0
0x040F	0x1283      	BCF        STATUS, 5
0x0410	0x1303      	BCF        STATUS, 6
0x0411	0x1A8C      	BTFSC      PIR1, 5
0x0412	0x3001      	MOVLW      1
0x0413	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,18 :: 		
0x0414	0x0008      	RETURN
; end of _UART1_Data_Ready
_UART1_Read:
;__Lib_UART_c67.c,22 :: 		
;__Lib_UART_c67.c,24 :: 		
0x0415	0x1283      	BCF        STATUS, 5
0x0416	0x1303      	BCF        STATUS, 6
0x0417	0x081A      	MOVF       RCREG, 0
0x0418	0x1683      	BSF        STATUS, 5
0x0419	0x00AF      	MOVWF      ___tmp_UART1_Read
;__Lib_UART_c67.c,25 :: 		
0x041A	0x1283      	BCF        STATUS, 5
0x041B	0x1C98      	BTFSS      RCSTA, 1
0x041C	0x2C1F      	GOTO       L_UART1_Read2
;__Lib_UART_c67.c,26 :: 		
0x041D	0x1218      	BCF        RCSTA, 4
;__Lib_UART_c67.c,27 :: 		
0x041E	0x1618      	BSF        RCSTA, 4
;__Lib_UART_c67.c,28 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,29 :: 		
0x041F	0x1683      	BSF        STATUS, 5
0x0420	0x082F      	MOVF       ___tmp_UART1_Read, 0
0x0421	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,30 :: 		
0x0422	0x0008      	RETURN
; end of _UART1_Read
_ADC_Read:
;__Lib_ADC_88X.c,6 :: 		
;__Lib_ADC_88X.c,8 :: 		
0x0423	0x303C      	MOVLW      60
0x0424	0x1283      	BCF        STATUS, 5
0x0425	0x1303      	BCF        STATUS, 6
0x0426	0x059F      	ANDWF      ADCON0, 1
;__Lib_ADC_88X.c,12 :: 		
0x0427	0x30C0      	MOVLW      192
0x0428	0x009F      	MOVWF      ADCON0
;__Lib_ADC_88X.c,13 :: 		
0x0429	0x1683      	BSF        STATUS, 5
0x042A	0x086F      	MOVF       FARG_ADC_Read_channel, 0
0x042B	0x00F0      	MOVWF      R0
0x042C	0x0DF0      	RLF        R0, 1
0x042D	0x1070      	BCF        R0, 0
0x042E	0x0DF0      	RLF        R0, 1
0x042F	0x1070      	BCF        R0, 0
0x0430	0x0870      	MOVF       R0, 0
0x0431	0x1283      	BCF        STATUS, 5
0x0432	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_88X.c,14 :: 		
0x0433	0x1683      	BSF        STATUS, 5
0x0434	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_88X.c,17 :: 		
0x0435	0x1283      	BCF        STATUS, 5
0x0436	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_88X.c,20 :: 		
0x0437	0x2256      	CALL       _Delay_22us
;__Lib_ADC_88X.c,23 :: 		
0x0438	0x149F      	BSF        ADCON0, 1
;__Lib_ADC_88X.c,26 :: 		
L_ADC_Read0:
0x0439	0x1C9F      	BTFSS      ADCON0, 1
0x043A	0x2C3D      	GOTO       L_ADC_Read1
;__Lib_ADC_88X.c,27 :: 		
0x043B	0x0000      	NOP
0x043C	0x2C39      	GOTO       L_ADC_Read0
L_ADC_Read1:
;__Lib_ADC_88X.c,30 :: 		
0x043D	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_88X.c,33 :: 		
0x043E	0x081E      	MOVF       ADRESH, 0
0x043F	0x00F1      	MOVWF      R0+1
0x0440	0x01F0      	CLRF       R0
0x0441	0x1683      	BSF        STATUS, 5
0x0442	0x081E      	MOVF       ADRESL, 0
0x0443	0x04F0      	IORWF      R0, 1
0x0444	0x3000      	MOVLW      0
0x0445	0x04F1      	IORWF      R0+1, 1
;__Lib_ADC_88X.c,34 :: 		
0x0446	0x0008      	RETURN
; end of _ADC_Read
0x04AC	0x3020      	MOVLW      32
0x04AD	0x0084      	MOVWF      FSR
0x04AE	0x304E      	MOVLW      78
0x04AF	0x1283      	BCF        STATUS, 5
0x04B0	0x1303      	BCF        STATUS, 6
0x04B1	0x00F0      	MOVWF      R0
0x04B2	0x3047      	MOVLW      71
0x04B3	0x1703      	BSF        STATUS, 6
0x04B4	0x00C4      	MOVWF      ___DoICPAddr
0x04B5	0x3004      	MOVLW      4
0x04B6	0x00C5      	MOVWF      325
0x04B7	0x23B3      	CALL       947
0x04B8	0x30A0      	MOVLW      160
0x04B9	0x0084      	MOVWF      FSR
0x04BA	0x3009      	MOVLW      9
0x04BB	0x1283      	BCF        STATUS, 5
0x04BC	0x1303      	BCF        STATUS, 6
0x04BD	0x00F0      	MOVWF      R0
0x04BE	0x3095      	MOVLW      149
0x04BF	0x1703      	BSF        STATUS, 6
0x04C0	0x00C4      	MOVWF      ___DoICPAddr
0x04C1	0x3004      	MOVLW      4
0x04C2	0x00C5      	MOVWF      325
0x04C3	0x23B3      	CALL       947
0x04C4	0x306E      	MOVLW      110
0x04C5	0x0084      	MOVWF      FSR
0x04C6	0x3002      	MOVLW      2
0x04C7	0x1283      	BCF        STATUS, 5
0x04C8	0x1303      	BCF        STATUS, 6
0x04C9	0x00F0      	MOVWF      R0
0x04CA	0x30AA      	MOVLW      170
0x04CB	0x1703      	BSF        STATUS, 6
0x04CC	0x00C4      	MOVWF      ___DoICPAddr
0x04CD	0x3004      	MOVLW      4
0x04CE	0x00C5      	MOVWF      325
0x04CF	0x23B3      	CALL       947
0x04D0	0x30A9      	MOVLW      169
0x04D1	0x0084      	MOVWF      FSR
0x04D2	0x3006      	MOVLW      6
0x04D3	0x1283      	BCF        STATUS, 5
0x04D4	0x1303      	BCF        STATUS, 6
0x04D5	0x00F0      	MOVWF      R0
0x04D6	0x309E      	MOVLW      158
0x04D7	0x1703      	BSF        STATUS, 6
0x04D8	0x00C4      	MOVWF      ___DoICPAddr
0x04D9	0x3004      	MOVLW      4
0x04DA	0x00C5      	MOVWF      325
0x04DB	0x23B3      	CALL       947
0x04DC	0x0008      	RETURN
_main:
0x0800	0x118A      	BCF        PCLATH, 3
0x0801	0x24AC      	CALL       1196
0x0802	0x158A      	BSF        PCLATH, 3
;Seminarska.c,123 :: 		void main() {
;Seminarska.c,124 :: 		Keypad_Init();
0x0803	0x118A      	BCF        PCLATH, 3
0x0804	0x2395      	CALL       _Keypad_Init
0x0805	0x158A      	BSF        PCLATH, 3
;Seminarska.c,125 :: 		ANSEL = 0x80;
0x0806	0x3080      	MOVLW      128
0x0807	0x1703      	BSF        STATUS, 6
0x0808	0x0088      	MOVWF      ANSEL
;Seminarska.c,126 :: 		ANSELH = 0;
0x0809	0x0189      	CLRF       ANSELH
;Seminarska.c,127 :: 		TRISA = 0xFF;
0x080A	0x30FF      	MOVLW      255
0x080B	0x1303      	BCF        STATUS, 6
0x080C	0x0085      	MOVWF      TRISA
;Seminarska.c,128 :: 		Lcd_Init();
0x080D	0x118A      	BCF        PCLATH, 3
0x080E	0x23BF      	CALL       _Lcd_Init
0x080F	0x158A      	BSF        PCLATH, 3
;Seminarska.c,129 :: 		Lcd_Cmd(_LCD_Clear);
0x0810	0x3001      	MOVLW      1
0x0811	0x1283      	BCF        STATUS, 5
0x0812	0x1703      	BSF        STATUS, 6
0x0813	0x00D3      	MOVWF      FARG_Lcd_Cmd_out_char
0x0814	0x118A      	BCF        PCLATH, 3
0x0815	0x201A      	CALL       _Lcd_Cmd
0x0816	0x158A      	BSF        PCLATH, 3
;Seminarska.c,151 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);
0x0817	0x300C      	MOVLW      12
0x0818	0x1703      	BSF        STATUS, 6
0x0819	0x00D3      	MOVWF      FARG_Lcd_Cmd_out_char
0x081A	0x118A      	BCF        PCLATH, 3
0x081B	0x201A      	CALL       _Lcd_Cmd
0x081C	0x158A      	BSF        PCLATH, 3
;Seminarska.c,153 :: 		typeUser = ADC_Read(7);
0x081D	0x3007      	MOVLW      7
0x081E	0x1683      	BSF        STATUS, 5
0x081F	0x00EF      	MOVWF      FARG_ADC_Read_channel
0x0820	0x118A      	BCF        PCLATH, 3
0x0821	0x2423      	CALL       _ADC_Read
0x0822	0x158A      	BSF        PCLATH, 3
0x0823	0x0870      	MOVF       R0, 0
0x0824	0x1283      	BCF        STATUS, 5
0x0825	0x00A2      	MOVWF      _typeUser
;Seminarska.c,154 :: 		C1ON_bit = 0;
0x0826	0x1703      	BSF        STATUS, 6
0x0827	0x1387      	BCF        C1ON_bit, 7
;Seminarska.c,155 :: 		C2ON_bit = 0;
0x0828	0x1388      	BCF        C2ON_bit, 7
;Seminarska.c,156 :: 		UART1_Init(9600);
0x0829	0x3033      	MOVLW      51
0x082A	0x1683      	BSF        STATUS, 5
0x082B	0x1303      	BCF        STATUS, 6
0x082C	0x0099      	MOVWF      SPBRG
0x082D	0x1518      	BSF        TXSTA, 2
0x082E	0x118A      	BCF        PCLATH, 3
0x082F	0x22DC      	CALL       _UART1_Init
0x0830	0x158A      	BSF        PCLATH, 3
;Seminarska.c,157 :: 		Delay_ms(50);
0x0831	0x3082      	MOVLW      130
0x0832	0x00FC      	MOVWF      R12
0x0833	0x30DD      	MOVLW      221
0x0834	0x00FD      	MOVWF      R13
L_main15:
0x0835	0x0BFD      	DECFSZ     R13, 1
0x0836	0x2835      	GOTO       L_main15
0x0837	0x0BFC      	DECFSZ     R12, 1
0x0838	0x2835      	GOTO       L_main15
0x0839	0x0000      	NOP
0x083A	0x0000      	NOP
;Seminarska.c,160 :: 		while(1){
L_main16:
0x083B	0x1283      	BCF        STATUS, 5
;Seminarska.c,161 :: 		if(typeUser == 0){
0x083C	0x0822      	MOVF       _typeUser, 0
0x083D	0x3A00      	XORLW      0
0x083E	0x1D03      	BTFSS      STATUS, 2
0x083F	0x2C4C      	GOTO       L_main18
;Seminarska.c,162 :: 		do
L_main19:
0x0840	0x1283      	BCF        STATUS, 5
;Seminarska.c,164 :: 		Lcd_Cmd(_LCD_Clear);
0x0841	0x3001      	MOVLW      1
0x0842	0x1703      	BSF        STATUS, 6
0x0843	0x00D3      	MOVWF      FARG_Lcd_Cmd_out_char
0x0844	0x118A      	BCF        PCLATH, 3
0x0845	0x201A      	CALL       _Lcd_Cmd
0x0846	0x158A      	BSF        PCLATH, 3
;Seminarska.c,165 :: 		Lcd_Out(1,1, "Vnesi");
0x0847	0x3001      	MOVLW      1
0x0848	0x1703      	BSF        STATUS, 6
0x0849	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x084A	0x3001      	MOVLW      1
0x084B	0x00CE      	MOVWF      FARG_Lcd_Out_column
0x084C	0x302B      	MOVLW      ?lstr2_Seminarska
0x084D	0x00CF      	MOVWF      FARG_Lcd_Out_text
0x084E	0x118A      	BCF        PCLATH, 3
0x084F	0x20C9      	CALL       _Lcd_Out
0x0850	0x158A      	BSF        PCLATH, 3
;Seminarska.c,166 :: 		if(kp != 43 && kp != 45 && kp != 46 && kp != 47)
0x0851	0x082D      	MOVF       _kp, 0
0x0852	0x3A2B      	XORLW      43
0x0853	0x1903      	BTFSC      STATUS, 2
0x0854	0x2863      	GOTO       L_main24
0x0855	0x082D      	MOVF       _kp, 0
0x0856	0x3A2D      	XORLW      45
0x0857	0x1903      	BTFSC      STATUS, 2
0x0858	0x2863      	GOTO       L_main24
0x0859	0x082D      	MOVF       _kp, 0
0x085A	0x3A2E      	XORLW      46
0x085B	0x1903      	BTFSC      STATUS, 2
0x085C	0x2863      	GOTO       L_main24
0x085D	0x082D      	MOVF       _kp, 0
0x085E	0x3A2F      	XORLW      47
0x085F	0x1903      	BTFSC      STATUS, 2
0x0860	0x2863      	GOTO       L_main24
L__main161:
;Seminarska.c,167 :: 		oldState = kp;
0x0861	0x082D      	MOVF       _kp, 0
0x0862	0x00AE      	MOVWF      _oldState
L_main24:
;Seminarska.c,168 :: 		kp = 0;
0x0863	0x01AD      	CLRF       _kp
;Seminarska.c,169 :: 		do{
L_main25:
;Seminarska.c,170 :: 		kp = Keypad_Key_Click();
0x0864	0x118A      	BCF        PCLATH, 3
0x0865	0x2384      	CALL       _Keypad_Key_Click
0x0866	0x158A      	BSF        PCLATH, 3
0x0867	0x0870      	MOVF       R0, 0
0x0868	0x00AD      	MOVWF      _kp
;Seminarska.c,171 :: 		typeUser = ADC_Read(7);
0x0869	0x3007      	MOVLW      7
0x086A	0x00EF      	MOVWF      FARG_ADC_Read_channel
0x086B	0x118A      	BCF        PCLATH, 3
0x086C	0x2423      	CALL       _ADC_Read
0x086D	0x158A      	BSF        PCLATH, 3
0x086E	0x0870      	MOVF       R0, 0
0x086F	0x1283      	BCF        STATUS, 5
0x0870	0x00A2      	MOVWF      _typeUser
;Seminarska.c,172 :: 		if(typeUser != 0){
0x0871	0x0870      	MOVF       R0, 0
0x0872	0x3A00      	XORLW      0
0x0873	0x1903      	BTFSC      STATUS, 2
0x0874	0x2876      	GOTO       L_main28
;Seminarska.c,173 :: 		break;
0x0875	0x287A      	GOTO       L_main26
;Seminarska.c,174 :: 		}
L_main28:
;Seminarska.c,175 :: 		}while (!kp);
0x0876	0x1683      	BSF        STATUS, 5
0x0877	0x082D      	MOVF       _kp, 0
0x0878	0x1903      	BTFSC      STATUS, 2
0x0879	0x2864      	GOTO       L_main25
L_main26:
;Seminarska.c,176 :: 		if(typeUser != 0){
0x087A	0x1283      	BCF        STATUS, 5
0x087B	0x0822      	MOVF       _typeUser, 0
0x087C	0x3A00      	XORLW      0
0x087D	0x1903      	BTFSC      STATUS, 2
0x087E	0x2880      	GOTO       L_main29
;Seminarska.c,177 :: 		break;
0x087F	0x2C4B      	GOTO       L_main20
;Seminarska.c,178 :: 		}
L_main29:
;Seminarska.c,179 :: 		switch (kp)
0x0880	0x28B2      	GOTO       L_main30
;Seminarska.c,181 :: 		case 1: kp = 49; break; // 1
L_main32:
0x0881	0x3031      	MOVLW      49
0x0882	0x1683      	BSF        STATUS, 5
0x0883	0x00AD      	MOVWF      _kp
0x0884	0x28F3      	GOTO       L_main31
;Seminarska.c,182 :: 		case 2: kp = 52; break; // 4
L_main33:
0x0885	0x3034      	MOVLW      52
0x0886	0x00AD      	MOVWF      _kp
0x0887	0x28F3      	GOTO       L_main31
;Seminarska.c,183 :: 		case 3: kp = 55; break; // 7
L_main34:
0x0888	0x3037      	MOVLW      55
0x0889	0x00AD      	MOVWF      _kp
0x088A	0x28F3      	GOTO       L_main31
;Seminarska.c,184 :: 		case 4: kp = 74; break; // J
L_main35:
0x088B	0x304A      	MOVLW      74
0x088C	0x00AD      	MOVWF      _kp
0x088D	0x28F3      	GOTO       L_main31
;Seminarska.c,185 :: 		case 5: kp = 50; break; // 2
L_main36:
0x088E	0x3032      	MOVLW      50
0x088F	0x00AD      	MOVWF      _kp
0x0890	0x28F3      	GOTO       L_main31
;Seminarska.c,186 :: 		case 6: kp = 53; break; // 5
L_main37:
0x0891	0x3035      	MOVLW      53
0x0892	0x00AD      	MOVWF      _kp
0x0893	0x28F3      	GOTO       L_main31
;Seminarska.c,187 :: 		case 7: kp = 56; break; // 8
L_main38:
0x0894	0x3038      	MOVLW      56
0x0895	0x00AD      	MOVWF      _kp
0x0896	0x28F3      	GOTO       L_main31
;Seminarska.c,188 :: 		case 8: kp = 48; break; // 0
L_main39:
0x0897	0x3030      	MOVLW      48
0x0898	0x00AD      	MOVWF      _kp
0x0899	0x28F3      	GOTO       L_main31
;Seminarska.c,189 :: 		case 9: kp = 51; break; // 3
L_main40:
0x089A	0x3033      	MOVLW      51
0x089B	0x00AD      	MOVWF      _kp
0x089C	0x28F3      	GOTO       L_main31
;Seminarska.c,190 :: 		case 10: kp = 54; break; // 6
L_main41:
0x089D	0x3036      	MOVLW      54
0x089E	0x00AD      	MOVWF      _kp
0x089F	0x28F3      	GOTO       L_main31
;Seminarska.c,191 :: 		case 11: kp = 57; break; // 9
L_main42:
0x08A0	0x3039      	MOVLW      57
0x08A1	0x00AD      	MOVWF      _kp
0x08A2	0x28F3      	GOTO       L_main31
;Seminarska.c,192 :: 		case 12: kp = 76; break; // L
L_main43:
0x08A3	0x304C      	MOVLW      76
0x08A4	0x00AD      	MOVWF      _kp
0x08A5	0x28F3      	GOTO       L_main31
;Seminarska.c,193 :: 		case 13: kp = 43; break; // +
L_main44:
0x08A6	0x302B      	MOVLW      43
0x08A7	0x00AD      	MOVWF      _kp
0x08A8	0x28F3      	GOTO       L_main31
;Seminarska.c,194 :: 		case 14: kp = 45; break; // Time
L_main45:
0x08A9	0x302D      	MOVLW      45
0x08AA	0x00AD      	MOVWF      _kp
0x08AB	0x28F3      	GOTO       L_main31
;Seminarska.c,195 :: 		case 15: kp = 46; break; // Add
L_main46:
0x08AC	0x302E      	MOVLW      46
0x08AD	0x00AD      	MOVWF      _kp
0x08AE	0x28F3      	GOTO       L_main31
;Seminarska.c,196 :: 		case 16: kp = 47; break; // Erase
L_main47:
0x08AF	0x302F      	MOVLW      47
0x08B0	0x00AD      	MOVWF      _kp
0x08B1	0x28F3      	GOTO       L_main31
;Seminarska.c,197 :: 		}
L_main30:
0x08B2	0x1683      	BSF        STATUS, 5
0x08B3	0x082D      	MOVF       _kp, 0
0x08B4	0x3A01      	XORLW      1
0x08B5	0x1903      	BTFSC      STATUS, 2
0x08B6	0x2881      	GOTO       L_main32
0x08B7	0x082D      	MOVF       _kp, 0
0x08B8	0x3A02      	XORLW      2
0x08B9	0x1903      	BTFSC      STATUS, 2
0x08BA	0x2885      	GOTO       L_main33
0x08BB	0x082D      	MOVF       _kp, 0
0x08BC	0x3A03      	XORLW      3
0x08BD	0x1903      	BTFSC      STATUS, 2
0x08BE	0x2888      	GOTO       L_main34
0x08BF	0x082D      	MOVF       _kp, 0
0x08C0	0x3A04      	XORLW      4
0x08C1	0x1903      	BTFSC      STATUS, 2
0x08C2	0x288B      	GOTO       L_main35
0x08C3	0x082D      	MOVF       _kp, 0
0x08C4	0x3A05      	XORLW      5
0x08C5	0x1903      	BTFSC      STATUS, 2
0x08C6	0x288E      	GOTO       L_main36
0x08C7	0x082D      	MOVF       _kp, 0
0x08C8	0x3A06      	XORLW      6
0x08C9	0x1903      	BTFSC      STATUS, 2
0x08CA	0x2891      	GOTO       L_main37
0x08CB	0x082D      	MOVF       _kp, 0
0x08CC	0x3A07      	XORLW      7
0x08CD	0x1903      	BTFSC      STATUS, 2
0x08CE	0x2894      	GOTO       L_main38
0x08CF	0x082D      	MOVF       _kp, 0
0x08D0	0x3A08      	XORLW      8
0x08D1	0x1903      	BTFSC      STATUS, 2
0x08D2	0x2897      	GOTO       L_main39
0x08D3	0x082D      	MOVF       _kp, 0
0x08D4	0x3A09      	XORLW      9
0x08D5	0x1903      	BTFSC      STATUS, 2
0x08D6	0x289A      	GOTO       L_main40
0x08D7	0x082D      	MOVF       _kp, 0
0x08D8	0x3A0A      	XORLW      10
0x08D9	0x1903      	BTFSC      STATUS, 2
0x08DA	0x289D      	GOTO       L_main41
0x08DB	0x082D      	MOVF       _kp, 0
0x08DC	0x3A0B      	XORLW      11
0x08DD	0x1903      	BTFSC      STATUS, 2
0x08DE	0x28A0      	GOTO       L_main42
0x08DF	0x082D      	MOVF       _kp, 0
0x08E0	0x3A0C      	XORLW      12
0x08E1	0x1903      	BTFSC      STATUS, 2
0x08E2	0x28A3      	GOTO       L_main43
0x08E3	0x082D      	MOVF       _kp, 0
0x08E4	0x3A0D      	XORLW      13
0x08E5	0x1903      	BTFSC      STATUS, 2
0x08E6	0x28A6      	GOTO       L_main44
0x08E7	0x082D      	MOVF       _kp, 0
0x08E8	0x3A0E      	XORLW      14
0x08E9	0x1903      	BTFSC      STATUS, 2
0x08EA	0x28A9      	GOTO       L_main45
0x08EB	0x082D      	MOVF       _kp, 0
0x08EC	0x3A0F      	XORLW      15
0x08ED	0x1903      	BTFSC      STATUS, 2
0x08EE	0x28AC      	GOTO       L_main46
0x08EF	0x082D      	MOVF       _kp, 0
0x08F0	0x3A10      	XORLW      16
0x08F1	0x1903      	BTFSC      STATUS, 2
0x08F2	0x28AF      	GOTO       L_main47
L_main31:
;Seminarska.c,199 :: 		if(oldState == 0){
0x08F3	0x082E      	MOVF       _oldState, 0
0x08F4	0x3A00      	XORLW      0
0x08F5	0x1D03      	BTFSS      STATUS, 2
0x08F6	0x290B      	GOTO       L_main48
;Seminarska.c,200 :: 		if(kp == 43 || kp == 45 || kp == 46 || kp == 47){
0x08F7	0x082D      	MOVF       _kp, 0
0x08F8	0x3A2B      	XORLW      43
0x08F9	0x1903      	BTFSC      STATUS, 2
0x08FA	0x2908      	GOTO       L__main160
0x08FB	0x082D      	MOVF       _kp, 0
0x08FC	0x3A2D      	XORLW      45
0x08FD	0x1903      	BTFSC      STATUS, 2
0x08FE	0x2908      	GOTO       L__main160
0x08FF	0x082D      	MOVF       _kp, 0
0x0900	0x3A2E      	XORLW      46
0x0901	0x1903      	BTFSC      STATUS, 2
0x0902	0x2908      	GOTO       L__main160
0x0903	0x082D      	MOVF       _kp, 0
0x0904	0x3A2F      	XORLW      47
0x0905	0x1903      	BTFSC      STATUS, 2
0x0906	0x2908      	GOTO       L__main160
0x0907	0x290B      	GOTO       L_main51
L__main160:
;Seminarska.c,201 :: 		greska();
0x0908	0x118A      	BCF        PCLATH, 3
0x0909	0x2316      	CALL       _greska
0x090A	0x158A      	BSF        PCLATH, 3
;Seminarska.c,202 :: 		}
L_main51:
;Seminarska.c,203 :: 		}
L_main48:
;Seminarska.c,205 :: 		if(kp == 43){// +
0x090B	0x1683      	BSF        STATUS, 5
0x090C	0x082D      	MOVF       _kp, 0
0x090D	0x3A2B      	XORLW      43
0x090E	0x1D03      	BTFSS      STATUS, 2
0x090F	0x29C6      	GOTO       L_main52
;Seminarska.c,206 :: 		flagPlus = 1;
0x0910	0x3001      	MOVLW      1
0x0911	0x00AA      	MOVWF      _flagPlus
;Seminarska.c,207 :: 		switch (oldstate)
0x0912	0x295E      	GOTO       L_main53
;Seminarska.c,209 :: 		case 49: oldState = 65; break; // A
L_main55:
0x0913	0x3041      	MOVLW      65
0x0914	0x00AE      	MOVWF      _oldState
0x0915	0x29BF      	GOTO       L_main54
;Seminarska.c,210 :: 		case 52: oldState = 68; break; // D
L_main56:
0x0916	0x3044      	MOVLW      68
0x0917	0x00AE      	MOVWF      _oldState
0x0918	0x29BF      	GOTO       L_main54
;Seminarska.c,211 :: 		case 55: oldState = 71; break; // G
L_main57:
0x0919	0x3047      	MOVLW      71
0x091A	0x00AE      	MOVWF      _oldState
0x091B	0x29BF      	GOTO       L_main54
;Seminarska.c,212 :: 		case 74: oldState = 86; break; // V
L_main58:
0x091C	0x3056      	MOVLW      86
0x091D	0x00AE      	MOVWF      _oldState
0x091E	0x29BF      	GOTO       L_main54
;Seminarska.c,213 :: 		case 50: oldState = 66; break; // B
L_main59:
0x091F	0x3042      	MOVLW      66
0x0920	0x00AE      	MOVWF      _oldState
0x0921	0x29BF      	GOTO       L_main54
;Seminarska.c,214 :: 		case 53: oldState = 69; break; // E
L_main60:
0x0922	0x3045      	MOVLW      69
0x0923	0x00AE      	MOVWF      _oldState
0x0924	0x29BF      	GOTO       L_main54
;Seminarska.c,215 :: 		case 56: oldState = 72; break; // H
L_main61:
0x0925	0x3048      	MOVLW      72
0x0926	0x00AE      	MOVWF      _oldState
0x0927	0x29BF      	GOTO       L_main54
;Seminarska.c,216 :: 		case 48: oldState = 75; break; // K
L_main62:
0x0928	0x304B      	MOVLW      75
0x0929	0x00AE      	MOVWF      _oldState
0x092A	0x29BF      	GOTO       L_main54
;Seminarska.c,217 :: 		case 51: oldState = 67; break; // C
L_main63:
0x092B	0x3043      	MOVLW      67
0x092C	0x00AE      	MOVWF      _oldState
0x092D	0x29BF      	GOTO       L_main54
;Seminarska.c,218 :: 		case 54: oldState = 70; break; // F
L_main64:
0x092E	0x3046      	MOVLW      70
0x092F	0x00AE      	MOVWF      _oldState
0x0930	0x29BF      	GOTO       L_main54
;Seminarska.c,219 :: 		case 57: oldState = 73; break; // I
L_main65:
0x0931	0x3049      	MOVLW      73
0x0932	0x00AE      	MOVWF      _oldState
0x0933	0x29BF      	GOTO       L_main54
;Seminarska.c,220 :: 		case 76: oldState = 89; break; // Y
L_main66:
0x0934	0x3059      	MOVLW      89
0x0935	0x00AE      	MOVWF      _oldState
0x0936	0x29BF      	GOTO       L_main54
;Seminarska.c,222 :: 		case 65: oldState = 77; break; // M
L_main67:
0x0937	0x304D      	MOVLW      77
0x0938	0x00AE      	MOVWF      _oldState
0x0939	0x29BF      	GOTO       L_main54
;Seminarska.c,223 :: 		case 68: oldState = 80; break; // P
L_main68:
0x093A	0x3050      	MOVLW      80
0x093B	0x00AE      	MOVWF      _oldState
0x093C	0x29BF      	GOTO       L_main54
;Seminarska.c,224 :: 		case 71: oldState = 83; break; // S
L_main69:
0x093D	0x3053      	MOVLW      83
0x093E	0x00AE      	MOVWF      _oldState
0x093F	0x29BF      	GOTO       L_main54
;Seminarska.c,225 :: 		case 86: oldState = 87; break; // W
L_main70:
0x0940	0x3057      	MOVLW      87
0x0941	0x00AE      	MOVWF      _oldState
0x0942	0x29BF      	GOTO       L_main54
;Seminarska.c,226 :: 		case 66: oldState = 78; break; // N
L_main71:
0x0943	0x304E      	MOVLW      78
0x0944	0x00AE      	MOVWF      _oldState
0x0945	0x29BF      	GOTO       L_main54
;Seminarska.c,227 :: 		case 69: oldState = 81; break; // Q
L_main72:
0x0946	0x3051      	MOVLW      81
0x0947	0x00AE      	MOVWF      _oldState
0x0948	0x29BF      	GOTO       L_main54
;Seminarska.c,228 :: 		case 72: oldState = 84; break; // T
L_main73:
0x0949	0x3054      	MOVLW      84
0x094A	0x00AE      	MOVWF      _oldState
0x094B	0x29BF      	GOTO       L_main54
;Seminarska.c,229 :: 		case 75: oldState = 88; break; // X
L_main74:
0x094C	0x3058      	MOVLW      88
0x094D	0x00AE      	MOVWF      _oldState
0x094E	0x29BF      	GOTO       L_main54
;Seminarska.c,230 :: 		case 67: oldState = 79; break; // O
L_main75:
0x094F	0x304F      	MOVLW      79
0x0950	0x00AE      	MOVWF      _oldState
0x0951	0x29BF      	GOTO       L_main54
;Seminarska.c,231 :: 		case 70: oldState = 82; break; // R
L_main76:
0x0952	0x3052      	MOVLW      82
0x0953	0x00AE      	MOVWF      _oldState
0x0954	0x29BF      	GOTO       L_main54
;Seminarska.c,232 :: 		case 73: oldState = 85; break; // U
L_main77:
0x0955	0x3055      	MOVLW      85
0x0956	0x00AE      	MOVWF      _oldState
0x0957	0x29BF      	GOTO       L_main54
;Seminarska.c,233 :: 		case 89: oldState = 90; break; // Z
L_main78:
0x0958	0x305A      	MOVLW      90
0x0959	0x00AE      	MOVWF      _oldState
0x095A	0x29BF      	GOTO       L_main54
;Seminarska.c,234 :: 		default: flag3 = 1;
L_main79:
0x095B	0x3001      	MOVLW      1
0x095C	0x00AC      	MOVWF      _flag3
;Seminarska.c,235 :: 		}
0x095D	0x29BF      	GOTO       L_main54
L_main53:
0x095E	0x082E      	MOVF       _oldState, 0
0x095F	0x3A31      	XORLW      49
0x0960	0x1903      	BTFSC      STATUS, 2
0x0961	0x2913      	GOTO       L_main55
0x0962	0x082E      	MOVF       _oldState, 0
0x0963	0x3A34      	XORLW      52
0x0964	0x1903      	BTFSC      STATUS, 2
0x0965	0x2916      	GOTO       L_main56
0x0966	0x082E      	MOVF       _oldState, 0
0x0967	0x3A37      	XORLW      55
0x0968	0x1903      	BTFSC      STATUS, 2
0x0969	0x2919      	GOTO       L_main57
0x096A	0x082E      	MOVF       _oldState, 0
0x096B	0x3A4A      	XORLW      74
0x096C	0x1903      	BTFSC      STATUS, 2
0x096D	0x291C      	GOTO       L_main58
0x096E	0x082E      	MOVF       _oldState, 0
0x096F	0x3A32      	XORLW      50
0x0970	0x1903      	BTFSC      STATUS, 2
0x0971	0x291F      	GOTO       L_main59
0x0972	0x082E      	MOVF       _oldState, 0
0x0973	0x3A35      	XORLW      53
0x0974	0x1903      	BTFSC      STATUS, 2
0x0975	0x2922      	GOTO       L_main60
0x0976	0x082E      	MOVF       _oldState, 0
0x0977	0x3A38      	XORLW      56
0x0978	0x1903      	BTFSC      STATUS, 2
0x0979	0x2925      	GOTO       L_main61
0x097A	0x082E      	MOVF       _oldState, 0
0x097B	0x3A30      	XORLW      48
0x097C	0x1903      	BTFSC      STATUS, 2
0x097D	0x2928      	GOTO       L_main62
0x097E	0x082E      	MOVF       _oldState, 0
0x097F	0x3A33      	XORLW      51
0x0980	0x1903      	BTFSC      STATUS, 2
0x0981	0x292B      	GOTO       L_main63
0x0982	0x082E      	MOVF       _oldState, 0
0x0983	0x3A36      	XORLW      54
0x0984	0x1903      	BTFSC      STATUS, 2
0x0985	0x292E      	GOTO       L_main64
0x0986	0x082E      	MOVF       _oldState, 0
0x0987	0x3A39      	XORLW      57
0x0988	0x1903      	BTFSC      STATUS, 2
0x0989	0x2931      	GOTO       L_main65
0x098A	0x082E      	MOVF       _oldState, 0
0x098B	0x3A4C      	XORLW      76
0x098C	0x1903      	BTFSC      STATUS, 2
0x098D	0x2934      	GOTO       L_main66
0x098E	0x082E      	MOVF       _oldState, 0
0x098F	0x3A41      	XORLW      65
0x0990	0x1903      	BTFSC      STATUS, 2
0x0991	0x2937      	GOTO       L_main67
0x0992	0x082E      	MOVF       _oldState, 0
0x0993	0x3A44      	XORLW      68
0x0994	0x1903      	BTFSC      STATUS, 2
0x0995	0x293A      	GOTO       L_main68
0x0996	0x082E      	MOVF       _oldState, 0
0x0997	0x3A47      	XORLW      71
0x0998	0x1903      	BTFSC      STATUS, 2
0x0999	0x293D      	GOTO       L_main69
0x099A	0x082E      	MOVF       _oldState, 0
0x099B	0x3A56      	XORLW      86
0x099C	0x1903      	BTFSC      STATUS, 2
0x099D	0x2940      	GOTO       L_main70
0x099E	0x082E      	MOVF       _oldState, 0
0x099F	0x3A42      	XORLW      66
0x09A0	0x1903      	BTFSC      STATUS, 2
0x09A1	0x2943      	GOTO       L_main71
0x09A2	0x082E      	MOVF       _oldState, 0
0x09A3	0x3A45      	XORLW      69
0x09A4	0x1903      	BTFSC      STATUS, 2
0x09A5	0x2946      	GOTO       L_main72
0x09A6	0x082E      	MOVF       _oldState, 0
0x09A7	0x3A48      	XORLW      72
0x09A8	0x1903      	BTFSC      STATUS, 2
0x09A9	0x2949      	GOTO       L_main73
0x09AA	0x082E      	MOVF       _oldState, 0
0x09AB	0x3A4B      	XORLW      75
0x09AC	0x1903      	BTFSC      STATUS, 2
0x09AD	0x294C      	GOTO       L_main74
0x09AE	0x082E      	MOVF       _oldState, 0
0x09AF	0x3A43      	XORLW      67
0x09B0	0x1903      	BTFSC      STATUS, 2
0x09B1	0x294F      	GOTO       L_main75
0x09B2	0x082E      	MOVF       _oldState, 0
0x09B3	0x3A46      	XORLW      70
0x09B4	0x1903      	BTFSC      STATUS, 2
0x09B5	0x2952      	GOTO       L_main76
0x09B6	0x082E      	MOVF       _oldState, 0
0x09B7	0x3A49      	XORLW      73
0x09B8	0x1903      	BTFSC      STATUS, 2
0x09B9	0x2955      	GOTO       L_main77
0x09BA	0x082E      	MOVF       _oldState, 0
0x09BB	0x3A59      	XORLW      89
0x09BC	0x1903      	BTFSC      STATUS, 2
0x09BD	0x2958      	GOTO       L_main78
0x09BE	0x295B      	GOTO       L_main79
L_main54:
;Seminarska.c,236 :: 		if(flag3){
0x09BF	0x082C      	MOVF       _flag3, 0
0x09C0	0x1903      	BTFSC      STATUS, 2
0x09C1	0x29C5      	GOTO       L_main80
;Seminarska.c,237 :: 		greska();
0x09C2	0x118A      	BCF        PCLATH, 3
0x09C3	0x2316      	CALL       _greska
0x09C4	0x158A      	BSF        PCLATH, 3
;Seminarska.c,238 :: 		}
L_main80:
;Seminarska.c,239 :: 		}else if(kp == 45){  //Time
0x09C5	0x2C4A      	GOTO       L_main81
L_main52:
0x09C6	0x1683      	BSF        STATUS, 5
0x09C7	0x082D      	MOVF       _kp, 0
0x09C8	0x3A2D      	XORLW      45
0x09C9	0x1D03      	BTFSS      STATUS, 2
0x09CA	0x29F3      	GOTO       L_main82
;Seminarska.c,240 :: 		flagTime = 1;
0x09CB	0x3001      	MOVLW      1
0x09CC	0x1283      	BCF        STATUS, 5
0x09CD	0x00BE      	MOVWF      _flagTime
;Seminarska.c,241 :: 		brStanici = brStanici * 10 + (oldState - 48);
0x09CE	0x086E      	MOVF       _brStanici, 0
0x09CF	0x00F0      	MOVWF      R0
0x09D0	0x086F      	MOVF       _brStanici+1, 0
0x09D1	0x00F1      	MOVWF      R0+1
0x09D2	0x300A      	MOVLW      10
0x09D3	0x00F4      	MOVWF      R4
0x09D4	0x3000      	MOVLW      0
0x09D5	0x00F5      	MOVWF      R4+1
0x09D6	0x118A      	BCF        PCLATH, 3
0x09D7	0x22B1      	CALL       _Mul_16x16_U
0x09D8	0x158A      	BSF        PCLATH, 3
0x09D9	0x3030      	MOVLW      48
0x09DA	0x1683      	BSF        STATUS, 5
0x09DB	0x022E      	SUBWF      _oldState, 0
0x09DC	0x00F2      	MOVWF      R2
0x09DD	0x01F3      	CLRF       R2+1
0x09DE	0x1C03      	BTFSS      STATUS, 0
0x09DF	0x03F3      	DECF       R2+1, 1
0x09E0	0x0872      	MOVF       R2, 0
0x09E1	0x07F0      	ADDWF      R0, 1
0x09E2	0x0873      	MOVF       R2+1, 0
0x09E3	0x1803      	BTFSC      STATUS, 0
0x09E4	0x3E01      	ADDLW      1
0x09E5	0x07F1      	ADDWF      R0+1, 1
0x09E6	0x0870      	MOVF       R0, 0
0x09E7	0x1283      	BCF        STATUS, 5
0x09E8	0x00EE      	MOVWF      _brStanici
0x09E9	0x0871      	MOVF       R0+1, 0
0x09EA	0x00EF      	MOVWF      _brStanici+1
;Seminarska.c,242 :: 		oldState = 0;
0x09EB	0x1683      	BSF        STATUS, 5
0x09EC	0x01AE      	CLRF       _oldState
;Seminarska.c,243 :: 		vreme = brStanici;
0x09ED	0x0870      	MOVF       R0, 0
0x09EE	0x1283      	BCF        STATUS, 5
0x09EF	0x00B1      	MOVWF      _vreme
;Seminarska.c,244 :: 		brStanici = 0;
0x09F0	0x01EE      	CLRF       _brStanici
0x09F1	0x01EF      	CLRF       _brStanici+1
;Seminarska.c,245 :: 		}else if(kp == 46){  //Add
0x09F2	0x2C4A      	GOTO       L_main83
L_main82:
0x09F3	0x1683      	BSF        STATUS, 5
0x09F4	0x082D      	MOVF       _kp, 0
0x09F5	0x3A2E      	XORLW      46
0x09F6	0x1D03      	BTFSS      STATUS, 2
0x09F7	0x2BA0      	GOTO       L_main84
;Seminarska.c,246 :: 		Lcd_Cmd(_LCD_CLEAR);
0x09F8	0x3001      	MOVLW      1
0x09F9	0x1283      	BCF        STATUS, 5
0x09FA	0x1703      	BSF        STATUS, 6
0x09FB	0x00D3      	MOVWF      FARG_Lcd_Cmd_out_char
0x09FC	0x118A      	BCF        PCLATH, 3
0x09FD	0x201A      	CALL       _Lcd_Cmd
0x09FE	0x158A      	BSF        PCLATH, 3
;Seminarska.c,247 :: 		Lcd_Out(2,1, "VIKAC");
0x09FF	0x3002      	MOVLW      2
0x0A00	0x1703      	BSF        STATUS, 6
0x0A01	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x0A02	0x3001      	MOVLW      1
0x0A03	0x00CE      	MOVWF      FARG_Lcd_Out_column
0x0A04	0x3023      	MOVLW      ?lstr3_Seminarska
0x0A05	0x00CF      	MOVWF      FARG_Lcd_Out_text
0x0A06	0x118A      	BCF        PCLATH, 3
0x0A07	0x20C9      	CALL       _Lcd_Out
0x0A08	0x158A      	BSF        PCLATH, 3
;Seminarska.c,248 :: 		Delay_ms(10);
0x0A09	0x301A      	MOVLW      26
0x0A0A	0x00FC      	MOVWF      R12
0x0A0B	0x30F8      	MOVLW      248
0x0A0C	0x00FD      	MOVWF      R13
L_main85:
0x0A0D	0x0BFD      	DECFSZ     R13, 1
0x0A0E	0x2A0D      	GOTO       L_main85
0x0A0F	0x0BFC      	DECFSZ     R12, 1
0x0A10	0x2A0D      	GOTO       L_main85
0x0A11	0x0000      	NOP
;Seminarska.c,249 :: 		if(flagTime){           //Ako sakame da vneseme vreme
0x0A12	0x1283      	BCF        STATUS, 5
0x0A13	0x083E      	MOVF       _flagTime, 0
0x0A14	0x1903      	BTFSC      STATUS, 2
0x0A15	0x2AB5      	GOTO       L_main86
;Seminarska.c,250 :: 		brStanici = brStanici * 10 + (oldState - 48);
0x0A16	0x086E      	MOVF       _brStanici, 0
0x0A17	0x00F0      	MOVWF      R0
0x0A18	0x086F      	MOVF       _brStanici+1, 0
0x0A19	0x00F1      	MOVWF      R0+1
0x0A1A	0x300A      	MOVLW      10
0x0A1B	0x00F4      	MOVWF      R4
0x0A1C	0x3000      	MOVLW      0
0x0A1D	0x00F5      	MOVWF      R4+1
0x0A1E	0x118A      	BCF        PCLATH, 3
0x0A1F	0x22B1      	CALL       _Mul_16x16_U
0x0A20	0x158A      	BSF        PCLATH, 3
0x0A21	0x3030      	MOVLW      48
0x0A22	0x1683      	BSF        STATUS, 5
0x0A23	0x022E      	SUBWF      _oldState, 0
0x0A24	0x00F2      	MOVWF      R2
0x0A25	0x01F3      	CLRF       R2+1
0x0A26	0x1C03      	BTFSS      STATUS, 0
0x0A27	0x03F3      	DECF       R2+1, 1
0x0A28	0x0872      	MOVF       R2, 0
0x0A29	0x0770      	ADDWF      R0, 0
0x0A2A	0x1283      	BCF        STATUS, 5
0x0A2B	0x00EE      	MOVWF      _brStanici
0x0A2C	0x0871      	MOVF       R0+1, 0
0x0A2D	0x1803      	BTFSC      STATUS, 0
0x0A2E	0x3E01      	ADDLW      1
0x0A2F	0x0773      	ADDWF      R2+1, 0
0x0A30	0x00EF      	MOVWF      _brStanici+1
;Seminarska.c,251 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0A31	0x3001      	MOVLW      1
0x0A32	0x1703      	BSF        STATUS, 6
0x0A33	0x00D3      	MOVWF      FARG_Lcd_Cmd_out_char
0x0A34	0x118A      	BCF        PCLATH, 3
0x0A35	0x201A      	CALL       _Lcd_Cmd
0x0A36	0x158A      	BSF        PCLATH, 3
;Seminarska.c,252 :: 		for(i = 0; i < 16; i++){
0x0A37	0x01A0      	CLRF       _i
0x0A38	0x01A1      	CLRF       _i+1
L_main87:
0x0A39	0x3080      	MOVLW      128
0x0A3A	0x0621      	XORWF      _i+1, 0
0x0A3B	0x00F0      	MOVWF      R0
0x0A3C	0x3080      	MOVLW      128
0x0A3D	0x0270      	SUBWF      R0, 0
0x0A3E	0x1D03      	BTFSS      STATUS, 2
0x0A3F	0x2A42      	GOTO       L__main166
0x0A40	0x3010      	MOVLW      16
0x0A41	0x0220      	SUBWF      _i, 0
L__main166:
0x0A42	0x1803      	BTFSC      STATUS, 0
0x0A43	0x2AB1      	GOTO       L_main88
;Seminarska.c,253 :: 		if(brStanici == EEPROM_Read(i * 16)){
0x0A44	0x3004      	MOVLW      4
0x0A45	0x00F0      	MOVWF      R0
0x0A46	0x0820      	MOVF       _i, 0
0x0A47	0x1703      	BSF        STATUS, 6
0x0A48	0x00CD      	MOVWF      FARG_EEPROM_Read_Address
0x0A49	0x0870      	MOVF       R0, 0
L__main167:
0x0A4A	0x1903      	BTFSC      STATUS, 2
0x0A4B	0x2A50      	GOTO       L__main168
0x0A4C	0x0DCD      	RLF        FARG_EEPROM_Read_Address, 1
0x0A4D	0x104D      	BCF        FARG_EEPROM_Read_Address, 0
0x0A4E	0x3EFF      	ADDLW      255
0x0A4F	0x2A4A      	GOTO       L__main167
L__main168:
0x0A50	0x118A      	BCF        PCLATH, 3
0x0A51	0x2110      	CALL       _EEPROM_Read
0x0A52	0x158A      	BSF        PCLATH, 3
0x0A53	0x3000      	MOVLW      0
0x0A54	0x1303      	BCF        STATUS, 6
0x0A55	0x066F      	XORWF      _brStanici+1, 0
0x0A56	0x1D03      	BTFSS      STATUS, 2
0x0A57	0x2A5A      	GOTO       L__main169
0x0A58	0x0870      	MOVF       R0, 0
0x0A59	0x066E      	XORWF      _brStanici, 0
L__main169:
0x0A5A	0x1D03      	BTFSS      STATUS, 2
0x0A5B	0x2AAB      	GOTO       L_main90
;Seminarska.c,254 :: 		tmp = i * 16 + 11;
0x0A5C	0x3004      	MOVLW      4
0x0A5D	0x00F2      	MOVWF      R2
0x0A5E	0x0820      	MOVF       _i, 0
0x0A5F	0x00F0      	MOVWF      R0
0x0A60	0x0821      	MOVF       _i+1, 0
0x0A61	0x00F1      	MOVWF      R0+1
0x0A62	0x0872      	MOVF       R2, 0
L__main170:
0x0A63	0x1903      	BTFSC      STATUS, 2
0x0A64	0x2A6A      	GOTO       L__main171
0x0A65	0x0DF0      	RLF        R0, 1
0x0A66	0x0DF1      	RLF        R0+1, 1
0x0A67	0x1070      	BCF        R0, 0
0x0A68	0x3EFF      	ADDLW      255
0x0A69	0x2A63      	GOTO       L__main170
L__main171:
0x0A6A	0x300B      	MOVLW      11
0x0A6B	0x07F0      	ADDWF      R0, 1
0x0A6C	0x1803      	BTFSC      STATUS, 0
0x0A6D	0x0AF1      	INCF       R0+1, 1
0x0A6E	0x0870      	MOVF       R0, 0
0x0A6F	0x00A9      	MOVWF      _tmp
0x0A70	0x0871      	MOVF       R0+1, 0
0x0A71	0x00AA      	MOVWF      _tmp+1
;Seminarska.c,255 :: 		EEPROM_Write(tmp, vreme);
0x0A72	0x0870      	MOVF       R0, 0
0x0A73	0x1703      	BSF        STATUS, 6
0x0A74	0x00C6      	MOVWF      FARG_EEPROM_Write_Address
0x0A75	0x1303      	BCF        STATUS, 6
0x0A76	0x0831      	MOVF       _vreme, 0
0x0A77	0x1703      	BSF        STATUS, 6
0x0A78	0x00C7      	MOVWF      FARG_EEPROM_Write_data_
0x0A79	0x118A      	BCF        PCLATH, 3
0x0A7A	0x2367      	CALL       _EEPROM_Write
0x0A7B	0x158A      	BSF        PCLATH, 3
;Seminarska.c,256 :: 		tmp += 2;
0x0A7C	0x3002      	MOVLW      2
0x0A7D	0x1283      	BCF        STATUS, 5
0x0A7E	0x1303      	BCF        STATUS, 6
0x0A7F	0x0729      	ADDWF      _tmp, 0
0x0A80	0x00F0      	MOVWF      R0
0x0A81	0x082A      	MOVF       _tmp+1, 0
0x0A82	0x1803      	BTFSC      STATUS, 0
0x0A83	0x3E01      	ADDLW      1
0x0A84	0x00F1      	MOVWF      R0+1
0x0A85	0x0870      	MOVF       R0, 0
0x0A86	0x00A9      	MOVWF      _tmp
0x0A87	0x0871      	MOVF       R0+1, 0
0x0A88	0x00AA      	MOVWF      _tmp+1
;Seminarska.c,257 :: 		EEPROM_Write(tmp, "M");
0x0A89	0x0870      	MOVF       R0, 0
0x0A8A	0x1703      	BSF        STATUS, 6
0x0A8B	0x00C6      	MOVWF      FARG_EEPROM_Write_Address
0x0A8C	0x30A6      	MOVLW      ?lstr_4_Seminarska
0x0A8D	0x00C7      	MOVWF      FARG_EEPROM_Write_data_
0x0A8E	0x118A      	BCF        PCLATH, 3
0x0A8F	0x2367      	CALL       _EEPROM_Write
0x0A90	0x158A      	BSF        PCLATH, 3
;Seminarska.c,258 :: 		tmp += 1;
0x0A91	0x1283      	BCF        STATUS, 5
0x0A92	0x1303      	BCF        STATUS, 6
0x0A93	0x0AA9      	INCF       _tmp, 1
0x0A94	0x1903      	BTFSC      STATUS, 2
0x0A95	0x0AAA      	INCF       _tmp+1, 1
;Seminarska.c,259 :: 		EEPROM_Write(tmp, "i");
0x0A96	0x0829      	MOVF       _tmp, 0
0x0A97	0x1703      	BSF        STATUS, 6
0x0A98	0x00C6      	MOVWF      FARG_EEPROM_Write_Address
0x0A99	0x30A4      	MOVLW      ?lstr_5_Seminarska
0x0A9A	0x00C7      	MOVWF      FARG_EEPROM_Write_data_
0x0A9B	0x118A      	BCF        PCLATH, 3
0x0A9C	0x2367      	CALL       _EEPROM_Write
0x0A9D	0x158A      	BSF        PCLATH, 3
;Seminarska.c,260 :: 		tmp += 1;
0x0A9E	0x1283      	BCF        STATUS, 5
0x0A9F	0x1303      	BCF        STATUS, 6
0x0AA0	0x0AA9      	INCF       _tmp, 1
0x0AA1	0x1903      	BTFSC      STATUS, 2
0x0AA2	0x0AAA      	INCF       _tmp+1, 1
;Seminarska.c,261 :: 		EEPROM_Write(tmp, "n");
0x0AA3	0x0829      	MOVF       _tmp, 0
0x0AA4	0x1703      	BSF        STATUS, 6
0x0AA5	0x00C6      	MOVWF      FARG_EEPROM_Write_Address
0x0AA6	0x30A8      	MOVLW      ?lstr_6_Seminarska
0x0AA7	0x00C7      	MOVWF      FARG_EEPROM_Write_data_
0x0AA8	0x118A      	BCF        PCLATH, 3
0x0AA9	0x2367      	CALL       _EEPROM_Write
0x0AAA	0x158A      	BSF        PCLATH, 3
;Seminarska.c,262 :: 		}
L_main90:
;Seminarska.c,252 :: 		for(i = 0; i < 16; i++){
0x0AAB	0x1283      	BCF        STATUS, 5
0x0AAC	0x1303      	BCF        STATUS, 6
0x0AAD	0x0AA0      	INCF       _i, 1
0x0AAE	0x1903      	BTFSC      STATUS, 2
0x0AAF	0x0AA1      	INCF       _i+1, 1
;Seminarska.c,263 :: 		}
0x0AB0	0x2A39      	GOTO       L_main87
L_main88:
;Seminarska.c,264 :: 		clear();
0x0AB1	0x118A      	BCF        PCLATH, 3
0x0AB2	0x233A      	CALL       _clear
0x0AB3	0x158A      	BSF        PCLATH, 3
;Seminarska.c,265 :: 		}else{ //Obicno vnesuvanje na avtobuska linija bez vreme
0x0AB4	0x2B9F      	GOTO       L_main91
L_main86:
;Seminarska.c,266 :: 		if(oldState >= 48 && oldState <= 57){
0x0AB5	0x3030      	MOVLW      48
0x0AB6	0x1683      	BSF        STATUS, 5
0x0AB7	0x022E      	SUBWF      _oldState, 0
0x0AB8	0x1C03      	BTFSS      STATUS, 0
0x0AB9	0x2B99      	GOTO       L_main94
0x0ABA	0x082E      	MOVF       _oldState, 0
0x0ABB	0x3C39      	SUBLW      57
0x0ABC	0x1C03      	BTFSS      STATUS, 0
0x0ABD	0x2B99      	GOTO       L_main94
L__main159:
;Seminarska.c,267 :: 		brStanici = brStanici * 10 + (oldState - 48);
0x0ABE	0x1283      	BCF        STATUS, 5
0x0ABF	0x086E      	MOVF       _brStanici, 0
0x0AC0	0x00F0      	MOVWF      R0
0x0AC1	0x086F      	MOVF       _brStanici+1, 0
0x0AC2	0x00F1      	MOVWF      R0+1
0x0AC3	0x300A      	MOVLW      10
0x0AC4	0x00F4      	MOVWF      R4
0x0AC5	0x3000      	MOVLW      0
0x0AC6	0x00F5      	MOVWF      R4+1
0x0AC7	0x118A      	BCF        PCLATH, 3
0x0AC8	0x22B1      	CALL       _Mul_16x16_U
0x0AC9	0x158A      	BSF        PCLATH, 3
0x0ACA	0x3030      	MOVLW      48
0x0ACB	0x1683      	BSF        STATUS, 5
0x0ACC	0x022E      	SUBWF      _oldState, 0
0x0ACD	0x00F2      	MOVWF      R2
0x0ACE	0x01F3      	CLRF       R2+1
0x0ACF	0x1C03      	BTFSS      STATUS, 0
0x0AD0	0x03F3      	DECF       R2+1, 1
0x0AD1	0x0872      	MOVF       R2, 0
0x0AD2	0x0770      	ADDWF      R0, 0
0x0AD3	0x1283      	BCF        STATUS, 5
0x0AD4	0x00EE      	MOVWF      _brStanici
0x0AD5	0x0871      	MOVF       R0+1, 0
0x0AD6	0x1803      	BTFSC      STATUS, 0
0x0AD7	0x3E01      	ADDLW      1
0x0AD8	0x0773      	ADDWF      R2+1, 0
0x0AD9	0x00EF      	MOVWF      _brStanici+1
;Seminarska.c,268 :: 		for(i = 0; i < 16; i++){
0x0ADA	0x01A0      	CLRF       _i
0x0ADB	0x01A1      	CLRF       _i+1
L_main95:
0x0ADC	0x3080      	MOVLW      128
0x0ADD	0x0621      	XORWF      _i+1, 0
0x0ADE	0x00F0      	MOVWF      R0
0x0ADF	0x3080      	MOVLW      128
0x0AE0	0x0270      	SUBWF      R0, 0
0x0AE1	0x1D03      	BTFSS      STATUS, 2
0x0AE2	0x2AE5      	GOTO       L__main172
0x0AE3	0x3010      	MOVLW      16
0x0AE4	0x0220      	SUBWF      _i, 0
L__main172:
0x0AE5	0x1803      	BTFSC      STATUS, 0
0x0AE6	0x2B13      	GOTO       L_main96
;Seminarska.c,269 :: 		if(brStanici == EEPROM_Read(i * 16)){
0x0AE7	0x3004      	MOVLW      4
0x0AE8	0x00F0      	MOVWF      R0
0x0AE9	0x0820      	MOVF       _i, 0
0x0AEA	0x1703      	BSF        STATUS, 6
0x0AEB	0x00CD      	MOVWF      FARG_EEPROM_Read_Address
0x0AEC	0x0870      	MOVF       R0, 0
L__main173:
0x0AED	0x1903      	BTFSC      STATUS, 2
0x0AEE	0x2AF3      	GOTO       L__main174
0x0AEF	0x0DCD      	RLF        FARG_EEPROM_Read_Address, 1
0x0AF0	0x104D      	BCF        FARG_EEPROM_Read_Address, 0
0x0AF1	0x3EFF      	ADDLW      255
0x0AF2	0x2AED      	GOTO       L__main173
L__main174:
0x0AF3	0x118A      	BCF        PCLATH, 3
0x0AF4	0x2110      	CALL       _EEPROM_Read
0x0AF5	0x158A      	BSF        PCLATH, 3
0x0AF6	0x3000      	MOVLW      0
0x0AF7	0x1303      	BCF        STATUS, 6
0x0AF8	0x066F      	XORWF      _brStanici+1, 0
0x0AF9	0x1D03      	BTFSS      STATUS, 2
0x0AFA	0x2AFD      	GOTO       L__main175
0x0AFB	0x0870      	MOVF       R0, 0
0x0AFC	0x066E      	XORWF      _brStanici, 0
L__main175:
0x0AFD	0x1D03      	BTFSS      STATUS, 2
0x0AFE	0x2B0F      	GOTO       L_main98
;Seminarska.c,270 :: 		temp = i * 16;
0x0AFF	0x3004      	MOVLW      4
0x0B00	0x00F0      	MOVWF      R0
0x0B01	0x0820      	MOVF       _i, 0
0x0B02	0x00B4      	MOVWF      _temp
0x0B03	0x0821      	MOVF       _i+1, 0
0x0B04	0x00B5      	MOVWF      _temp+1
0x0B05	0x0870      	MOVF       R0, 0
L__main176:
0x0B06	0x1903      	BTFSC      STATUS, 2
0x0B07	0x2B0D      	GOTO       L__main177
0x0B08	0x0DB4      	RLF        _temp, 1
0x0B09	0x0DB5      	RLF        _temp+1, 1
0x0B0A	0x1034      	BCF        _temp, 0
0x0B0B	0x3EFF      	ADDLW      255
0x0B0C	0x2B06      	GOTO       L__main176
L__main177:
;Seminarska.c,271 :: 		flagVneseno = 1;
0x0B0D	0x3001      	MOVLW      1
0x0B0E	0x00BF      	MOVWF      _flagVneseno
;Seminarska.c,272 :: 		}
L_main98:
;Seminarska.c,268 :: 		for(i = 0; i < 16; i++){
0x0B0F	0x0AA0      	INCF       _i, 1
0x0B10	0x1903      	BTFSC      STATUS, 2
0x0B11	0x0AA1      	INCF       _i+1, 1
;Seminarska.c,273 :: 		}
0x0B12	0x2ADC      	GOTO       L_main95
L_main96:
;Seminarska.c,274 :: 		if(flagVneseno == 0){
0x0B13	0x083F      	MOVF       _flagVneseno, 0
0x0B14	0x3A00      	XORLW      0
0x0B15	0x1D03      	BTFSS      STATUS, 2
0x0B16	0x2B95      	GOTO       L_main99
;Seminarska.c,275 :: 		EEPROM_Write(countStanici * 16, brStanici);
0x0B17	0x3004      	MOVLW      4
0x0B18	0x00F0      	MOVWF      R0
0x0B19	0x086C      	MOVF       _countStanici, 0
0x0B1A	0x1703      	BSF        STATUS, 6
0x0B1B	0x00C6      	MOVWF      FARG_EEPROM_Write_Address
0x0B1C	0x0870      	MOVF       R0, 0
L__main178:
0x0B1D	0x1903      	BTFSC      STATUS, 2
0x0B1E	0x2B23      	GOTO       L__main179
0x0B1F	0x0DC6      	RLF        FARG_EEPROM_Write_Address, 1
0x0B20	0x1046      	BCF        FARG_EEPROM_Write_Address, 0
0x0B21	0x3EFF      	ADDLW      255
0x0B22	0x2B1D      	GOTO       L__main178
L__main179:
0x0B23	0x1303      	BCF        STATUS, 6
0x0B24	0x086E      	MOVF       _brStanici, 0
0x0B25	0x1703      	BSF        STATUS, 6
0x0B26	0x00C7      	MOVWF      FARG_EEPROM_Write_data_
0x0B27	0x118A      	BCF        PCLATH, 3
0x0B28	0x2367      	CALL       _EEPROM_Write
0x0B29	0x158A      	BSF        PCLATH, 3
;Seminarska.c,276 :: 		tmp = countStanici * 16;
0x0B2A	0x3004      	MOVLW      4
0x0B2B	0x00F0      	MOVWF      R0
0x0B2C	0x1283      	BCF        STATUS, 5
0x0B2D	0x1303      	BCF        STATUS, 6
0x0B2E	0x086C      	MOVF       _countStanici, 0
0x0B2F	0x00A9      	MOVWF      _tmp
0x0B30	0x3000      	MOVLW      0
0x0B31	0x1BA9      	BTFSC      _tmp, 7
0x0B32	0x30FF      	MOVLW      255
0x0B33	0x00AA      	MOVWF      _tmp+1
0x0B34	0x0870      	MOVF       R0, 0
L__main180:
0x0B35	0x1903      	BTFSC      STATUS, 2
0x0B36	0x2B3C      	GOTO       L__main181
0x0B37	0x0DA9      	RLF        _tmp, 1
0x0B38	0x0DAA      	RLF        _tmp+1, 1
0x0B39	0x1029      	BCF        _tmp, 0
0x0B3A	0x3EFF      	ADDLW      255
0x0B3B	0x2B35      	GOTO       L__main180
L__main181:
;Seminarska.c,277 :: 		for(i = 0; i < pomestuvanje; i++){
0x0B3C	0x01A0      	CLRF       _i
0x0B3D	0x01A1      	CLRF       _i+1
L_main100:
0x0B3E	0x3080      	MOVLW      128
0x0B3F	0x0621      	XORWF      _i+1, 0
0x0B40	0x00F0      	MOVWF      R0
0x0B41	0x3080      	MOVLW      128
0x0B42	0x1683      	BSF        STATUS, 5
0x0B43	0x1BAB      	BTFSC      _pomestuvanje, 7
0x0B44	0x307F      	MOVLW      127
0x0B45	0x0270      	SUBWF      R0, 0
0x0B46	0x1D03      	BTFSS      STATUS, 2
0x0B47	0x2B4B      	GOTO       L__main182
0x0B48	0x082B      	MOVF       _pomestuvanje, 0
0x0B49	0x1283      	BCF        STATUS, 5
0x0B4A	0x0220      	SUBWF      _i, 0
L__main182:
0x0B4B	0x1803      	BTFSC      STATUS, 0
0x0B4C	0x2B6B      	GOTO       L_main101
;Seminarska.c,278 :: 		tmp += 1;
0x0B4D	0x1283      	BCF        STATUS, 5
0x0B4E	0x0AA9      	INCF       _tmp, 1
0x0B4F	0x1903      	BTFSC      STATUS, 2
0x0B50	0x0AAA      	INCF       _tmp+1, 1
;Seminarska.c,279 :: 		EEPROM_Write(tmp, linija[i]);
0x0B51	0x0829      	MOVF       _tmp, 0
0x0B52	0x1703      	BSF        STATUS, 6
0x0B53	0x00C6      	MOVWF      FARG_EEPROM_Write_Address
0x0B54	0x1303      	BCF        STATUS, 6
0x0B55	0x0820      	MOVF       _i, 0
0x0B56	0x00F0      	MOVWF      R0
0x0B57	0x0821      	MOVF       _i+1, 0
0x0B58	0x00F1      	MOVWF      R0+1
0x0B59	0x0DF0      	RLF        R0, 1
0x0B5A	0x0DF1      	RLF        R0+1, 1
0x0B5B	0x1070      	BCF        R0, 0
0x0B5C	0x0870      	MOVF       R0, 0
0x0B5D	0x3E10      	ADDLW      _linija
0x0B5E	0x0084      	MOVWF      FSR
0x0B5F	0x0800      	MOVF       INDF, 0
0x0B60	0x1703      	BSF        STATUS, 6
0x0B61	0x00C7      	MOVWF      FARG_EEPROM_Write_data_
0x0B62	0x118A      	BCF        PCLATH, 3
0x0B63	0x2367      	CALL       _EEPROM_Write
0x0B64	0x158A      	BSF        PCLATH, 3
;Seminarska.c,277 :: 		for(i = 0; i < pomestuvanje; i++){
0x0B65	0x1283      	BCF        STATUS, 5
0x0B66	0x1303      	BCF        STATUS, 6
0x0B67	0x0AA0      	INCF       _i, 1
0x0B68	0x1903      	BTFSC      STATUS, 2
0x0B69	0x0AA1      	INCF       _i+1, 1
;Seminarska.c,280 :: 		}
0x0B6A	0x2B3E      	GOTO       L_main100
L_main101:
;Seminarska.c,281 :: 		brCifri = 15 - pomestuvanje;
0x0B6B	0x1683      	BSF        STATUS, 5
0x0B6C	0x082B      	MOVF       _pomestuvanje, 0
0x0B6D	0x3C0F      	SUBLW      15
0x0B6E	0x00A9      	MOVWF      _brCifri
;Seminarska.c,282 :: 		for(i = 0; i < brCifri; i++){
0x0B6F	0x1283      	BCF        STATUS, 5
0x0B70	0x01A0      	CLRF       _i
0x0B71	0x01A1      	CLRF       _i+1
L_main103:
0x0B72	0x3080      	MOVLW      128
0x0B73	0x0621      	XORWF      _i+1, 0
0x0B74	0x00F0      	MOVWF      R0
0x0B75	0x3080      	MOVLW      128
0x0B76	0x1683      	BSF        STATUS, 5
0x0B77	0x1BA9      	BTFSC      _brCifri, 7
0x0B78	0x307F      	MOVLW      127
0x0B79	0x0270      	SUBWF      R0, 0
0x0B7A	0x1D03      	BTFSS      STATUS, 2
0x0B7B	0x2B7F      	GOTO       L__main183
0x0B7C	0x0829      	MOVF       _brCifri, 0
0x0B7D	0x1283      	BCF        STATUS, 5
0x0B7E	0x0220      	SUBWF      _i, 0
L__main183:
0x0B7F	0x1803      	BTFSC      STATUS, 0
0x0B80	0x2B92      	GOTO       L_main104
;Seminarska.c,283 :: 		tmp += 1;
0x0B81	0x1283      	BCF        STATUS, 5
0x0B82	0x0AA9      	INCF       _tmp, 1
0x0B83	0x1903      	BTFSC      STATUS, 2
0x0B84	0x0AAA      	INCF       _tmp+1, 1
;Seminarska.c,284 :: 		EEPROM_Write(tmp, 0);
0x0B85	0x0829      	MOVF       _tmp, 0
0x0B86	0x1703      	BSF        STATUS, 6
0x0B87	0x00C6      	MOVWF      FARG_EEPROM_Write_Address
0x0B88	0x01C7      	CLRF       FARG_EEPROM_Write_data_
0x0B89	0x118A      	BCF        PCLATH, 3
0x0B8A	0x2367      	CALL       _EEPROM_Write
0x0B8B	0x158A      	BSF        PCLATH, 3
;Seminarska.c,282 :: 		for(i = 0; i < brCifri; i++){
0x0B8C	0x1283      	BCF        STATUS, 5
0x0B8D	0x1303      	BCF        STATUS, 6
0x0B8E	0x0AA0      	INCF       _i, 1
0x0B8F	0x1903      	BTFSC      STATUS, 2
0x0B90	0x0AA1      	INCF       _i+1, 1
;Seminarska.c,285 :: 		}
0x0B91	0x2B72      	GOTO       L_main103
L_main104:
0x0B92	0x1283      	BCF        STATUS, 5
;Seminarska.c,286 :: 		countStanici++;
0x0B93	0x0AEC      	INCF       _countStanici, 1
;Seminarska.c,287 :: 		}else{
0x0B94	0x2B98      	GOTO       L_main106
L_main99:
;Seminarska.c,288 :: 		greska();
0x0B95	0x118A      	BCF        PCLATH, 3
0x0B96	0x2316      	CALL       _greska
0x0B97	0x158A      	BSF        PCLATH, 3
;Seminarska.c,289 :: 		}
L_main106:
;Seminarska.c,290 :: 		}else{
0x0B98	0x2B9C      	GOTO       L_main107
L_main94:
;Seminarska.c,291 :: 		greska();
0x0B99	0x118A      	BCF        PCLATH, 3
0x0B9A	0x2316      	CALL       _greska
0x0B9B	0x158A      	BSF        PCLATH, 3
;Seminarska.c,292 :: 		}
L_main107:
;Seminarska.c,293 :: 		clear();
0x0B9C	0x118A      	BCF        PCLATH, 3
0x0B9D	0x233A      	CALL       _clear
0x0B9E	0x158A      	BSF        PCLATH, 3
;Seminarska.c,294 :: 		}
L_main91:
;Seminarska.c,295 :: 		}else if(kp == 47){  //Erase
0x0B9F	0x2C4A      	GOTO       L_main108
L_main84:
0x0BA0	0x1683      	BSF        STATUS, 5
0x0BA1	0x082D      	MOVF       _kp, 0
0x0BA2	0x3A2F      	XORLW      47
0x0BA3	0x1D03      	BTFSS      STATUS, 2
0x0BA4	0x2BD8      	GOTO       L_main109
;Seminarska.c,296 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0BA5	0x3001      	MOVLW      1
0x0BA6	0x1283      	BCF        STATUS, 5
0x0BA7	0x1703      	BSF        STATUS, 6
0x0BA8	0x00D3      	MOVWF      FARG_Lcd_Cmd_out_char
0x0BA9	0x118A      	BCF        PCLATH, 3
0x0BAA	0x201A      	CALL       _Lcd_Cmd
0x0BAB	0x158A      	BSF        PCLATH, 3
;Seminarska.c,297 :: 		temp = brStanici * 16;
0x0BAC	0x3004      	MOVLW      4
0x0BAD	0x00F0      	MOVWF      R0
0x0BAE	0x086E      	MOVF       _brStanici, 0
0x0BAF	0x00B4      	MOVWF      _temp
0x0BB0	0x086F      	MOVF       _brStanici+1, 0
0x0BB1	0x00B5      	MOVWF      _temp+1
0x0BB2	0x0870      	MOVF       R0, 0
L__main184:
0x0BB3	0x1903      	BTFSC      STATUS, 2
0x0BB4	0x2BBA      	GOTO       L__main185
0x0BB5	0x0DB4      	RLF        _temp, 1
0x0BB6	0x0DB5      	RLF        _temp+1, 1
0x0BB7	0x1034      	BCF        _temp, 0
0x0BB8	0x3EFF      	ADDLW      255
0x0BB9	0x2BB3      	GOTO       L__main184
L__main185:
;Seminarska.c,298 :: 		for(i = 0; i < 15; i++){
0x0BBA	0x01A0      	CLRF       _i
0x0BBB	0x01A1      	CLRF       _i+1
L_main110:
0x0BBC	0x3080      	MOVLW      128
0x0BBD	0x0621      	XORWF      _i+1, 0
0x0BBE	0x00F0      	MOVWF      R0
0x0BBF	0x3080      	MOVLW      128
0x0BC0	0x0270      	SUBWF      R0, 0
0x0BC1	0x1D03      	BTFSS      STATUS, 2
0x0BC2	0x2BC5      	GOTO       L__main186
0x0BC3	0x300F      	MOVLW      15
0x0BC4	0x0220      	SUBWF      _i, 0
L__main186:
0x0BC5	0x1803      	BTFSC      STATUS, 0
0x0BC6	0x2BD7      	GOTO       L_main111
;Seminarska.c,299 :: 		EEPROM_Write(temp, 0);
0x0BC7	0x0834      	MOVF       _temp, 0
0x0BC8	0x1703      	BSF        STATUS, 6
0x0BC9	0x00C6      	MOVWF      FARG_EEPROM_Write_Address
0x0BCA	0x01C7      	CLRF       FARG_EEPROM_Write_data_
0x0BCB	0x118A      	BCF        PCLATH, 3
0x0BCC	0x2367      	CALL       _EEPROM_Write
0x0BCD	0x158A      	BSF        PCLATH, 3
;Seminarska.c,300 :: 		temp +=1;
0x0BCE	0x1283      	BCF        STATUS, 5
0x0BCF	0x1303      	BCF        STATUS, 6
0x0BD0	0x0AB4      	INCF       _temp, 1
0x0BD1	0x1903      	BTFSC      STATUS, 2
0x0BD2	0x0AB5      	INCF       _temp+1, 1
;Seminarska.c,298 :: 		for(i = 0; i < 15; i++){
0x0BD3	0x0AA0      	INCF       _i, 1
0x0BD4	0x1903      	BTFSC      STATUS, 2
0x0BD5	0x0AA1      	INCF       _i+1, 1
;Seminarska.c,301 :: 		}
0x0BD6	0x2BBC      	GOTO       L_main110
L_main111:
;Seminarska.c,302 :: 		}else{
0x0BD7	0x2C4A      	GOTO       L_main113
L_main109:
;Seminarska.c,303 :: 		if(flagPlus){  //Ako stisneme +
0x0BD8	0x1683      	BSF        STATUS, 5
0x0BD9	0x082A      	MOVF       _flagPlus, 0
0x0BDA	0x1903      	BTFSC      STATUS, 2
0x0BDB	0x2BEB      	GOTO       L_main114
;Seminarska.c,304 :: 		linija[pomestuvanje] = oldState;
0x0BDC	0x082B      	MOVF       _pomestuvanje, 0
0x0BDD	0x00F0      	MOVWF      R0
0x0BDE	0x0DF0      	RLF        R0, 1
0x0BDF	0x1070      	BCF        R0, 0
0x0BE0	0x0870      	MOVF       R0, 0
0x0BE1	0x3E10      	ADDLW      _linija
0x0BE2	0x0084      	MOVWF      FSR
0x0BE3	0x082E      	MOVF       _oldState, 0
0x0BE4	0x0080      	MOVWF      INDF
0x0BE5	0x0A84      	INCF       FSR, 1
0x0BE6	0x0180      	CLRF       INDF
;Seminarska.c,305 :: 		oldState = 0;
0x0BE7	0x01AE      	CLRF       _oldState
;Seminarska.c,306 :: 		pomestuvanje++;
0x0BE8	0x0AAB      	INCF       _pomestuvanje, 1
;Seminarska.c,307 :: 		flagPlus = 0;
0x0BE9	0x01AA      	CLRF       _flagPlus
;Seminarska.c,308 :: 		}else if(oldState == 76 || oldState == 74){ // J ili L
0x0BEA	0x2C4A      	GOTO       L_main115
L_main114:
0x0BEB	0x082E      	MOVF       _oldState, 0
0x0BEC	0x3A4C      	XORLW      76
0x0BED	0x1903      	BTFSC      STATUS, 2
0x0BEE	0x2BF4      	GOTO       L__main158
0x0BEF	0x082E      	MOVF       _oldState, 0
0x0BF0	0x3A4A      	XORLW      74
0x0BF1	0x1903      	BTFSC      STATUS, 2
0x0BF2	0x2BF4      	GOTO       L__main158
0x0BF3	0x2C13      	GOTO       L_main118
L__main158:
;Seminarska.c,309 :: 		linija[pomestuvanje] = oldState;
0x0BF4	0x082B      	MOVF       _pomestuvanje, 0
0x0BF5	0x00F0      	MOVWF      R0
0x0BF6	0x0DF0      	RLF        R0, 1
0x0BF7	0x1070      	BCF        R0, 0
0x0BF8	0x0870      	MOVF       R0, 0
0x0BF9	0x3E10      	ADDLW      _linija
0x0BFA	0x0084      	MOVWF      FSR
0x0BFB	0x082E      	MOVF       _oldState, 0
0x0BFC	0x0080      	MOVWF      INDF
0x0BFD	0x0A84      	INCF       FSR, 1
0x0BFE	0x0180      	CLRF       INDF
;Seminarska.c,310 :: 		oldState = 0;
0x0BFF	0x01AE      	CLRF       _oldState
;Seminarska.c,311 :: 		pomestuvanje++;
0x0C00	0x0AAB      	INCF       _pomestuvanje, 1
;Seminarska.c,312 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0C01	0x3001      	MOVLW      1
0x0C02	0x1283      	BCF        STATUS, 5
0x0C03	0x1703      	BSF        STATUS, 6
0x0C04	0x00D3      	MOVWF      FARG_Lcd_Cmd_out_char
0x0C05	0x118A      	BCF        PCLATH, 3
0x0C06	0x201A      	CALL       _Lcd_Cmd
0x0C07	0x158A      	BSF        PCLATH, 3
;Seminarska.c,313 :: 		Lcd_Out(1,1, "J ili L");
0x0C08	0x3001      	MOVLW      1
0x0C09	0x1703      	BSF        STATUS, 6
0x0C0A	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x0C0B	0x3001      	MOVLW      1
0x0C0C	0x00CE      	MOVWF      FARG_Lcd_Out_column
0x0C0D	0x3055      	MOVLW      ?lstr7_Seminarska
0x0C0E	0x00CF      	MOVWF      FARG_Lcd_Out_text
0x0C0F	0x118A      	BCF        PCLATH, 3
0x0C10	0x20C9      	CALL       _Lcd_Out
0x0C11	0x158A      	BSF        PCLATH, 3
;Seminarska.c,314 :: 		}else{
0x0C12	0x2C4A      	GOTO       L_main119
L_main118:
;Seminarska.c,315 :: 		if(oldState >= 48 && oldState <= 57){   // Ako e vnesena brojka
0x0C13	0x3030      	MOVLW      48
0x0C14	0x022E      	SUBWF      _oldState, 0
0x0C15	0x1C03      	BTFSS      STATUS, 0
0x0C16	0x2C4A      	GOTO       L_main122
0x0C17	0x082E      	MOVF       _oldState, 0
0x0C18	0x3C39      	SUBLW      57
0x0C19	0x1C03      	BTFSS      STATUS, 0
0x0C1A	0x2C4A      	GOTO       L_main122
L__main157:
;Seminarska.c,316 :: 		brStanici = brStanici * 10 + (oldState - 48);
0x0C1B	0x1283      	BCF        STATUS, 5
0x0C1C	0x086E      	MOVF       _brStanici, 0
0x0C1D	0x00F0      	MOVWF      R0
0x0C1E	0x086F      	MOVF       _brStanici+1, 0
0x0C1F	0x00F1      	MOVWF      R0+1
0x0C20	0x300A      	MOVLW      10
0x0C21	0x00F4      	MOVWF      R4
0x0C22	0x3000      	MOVLW      0
0x0C23	0x00F5      	MOVWF      R4+1
0x0C24	0x118A      	BCF        PCLATH, 3
0x0C25	0x22B1      	CALL       _Mul_16x16_U
0x0C26	0x158A      	BSF        PCLATH, 3
0x0C27	0x3030      	MOVLW      48
0x0C28	0x1683      	BSF        STATUS, 5
0x0C29	0x022E      	SUBWF      _oldState, 0
0x0C2A	0x00F2      	MOVWF      R2
0x0C2B	0x01F3      	CLRF       R2+1
0x0C2C	0x1C03      	BTFSS      STATUS, 0
0x0C2D	0x03F3      	DECF       R2+1, 1
0x0C2E	0x0872      	MOVF       R2, 0
0x0C2F	0x0770      	ADDWF      R0, 0
0x0C30	0x1283      	BCF        STATUS, 5
0x0C31	0x00EE      	MOVWF      _brStanici
0x0C32	0x0871      	MOVF       R0+1, 0
0x0C33	0x1803      	BTFSC      STATUS, 0
0x0C34	0x3E01      	ADDLW      1
0x0C35	0x0773      	ADDWF      R2+1, 0
0x0C36	0x00EF      	MOVWF      _brStanici+1
;Seminarska.c,317 :: 		Lcd_Out(1,1, "Vnesena Brojka");
0x0C37	0x3001      	MOVLW      1
0x0C38	0x1703      	BSF        STATUS, 6
0x0C39	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x0C3A	0x3001      	MOVLW      1
0x0C3B	0x00CE      	MOVWF      FARG_Lcd_Out_column
0x0C3C	0x305D      	MOVLW      ?lstr8_Seminarska
0x0C3D	0x00CF      	MOVWF      FARG_Lcd_Out_text
0x0C3E	0x118A      	BCF        PCLATH, 3
0x0C3F	0x20C9      	CALL       _Lcd_Out
0x0C40	0x158A      	BSF        PCLATH, 3
;Seminarska.c,318 :: 		Delay_ms(10);
0x0C41	0x301A      	MOVLW      26
0x0C42	0x00FC      	MOVWF      R12
0x0C43	0x30F8      	MOVLW      248
0x0C44	0x00FD      	MOVWF      R13
L_main123:
0x0C45	0x0BFD      	DECFSZ     R13, 1
0x0C46	0x2C45      	GOTO       L_main123
0x0C47	0x0BFC      	DECFSZ     R12, 1
0x0C48	0x2C45      	GOTO       L_main123
0x0C49	0x0000      	NOP
;Seminarska.c,319 :: 		}
L_main122:
;Seminarska.c,320 :: 		}
L_main119:
L_main115:
;Seminarska.c,321 :: 		}
L_main113:
L_main108:
L_main83:
L_main81:
;Seminarska.c,322 :: 		}while(1);
0x0C4A	0x2840      	GOTO       L_main19
L_main20:
;Seminarska.c,323 :: 		}else{
0x0C4B	0x2DCA      	GOTO       L_main124
L_main18:
;Seminarska.c,324 :: 		i = 0;
0x0C4C	0x1283      	BCF        STATUS, 5
0x0C4D	0x01A0      	CLRF       _i
0x0C4E	0x01A1      	CLRF       _i+1
;Seminarska.c,325 :: 		flagUart=0;
0x0C4F	0x01ED      	CLRF       _flagUart
;Seminarska.c,326 :: 		brCifri = 0;
0x0C50	0x1683      	BSF        STATUS, 5
0x0C51	0x01A9      	CLRF       _brCifri
;Seminarska.c,327 :: 		strcpy(getTime, "GET TIME");
0x0C52	0x3030      	MOVLW      _getTime
0x0C53	0x1283      	BCF        STATUS, 5
0x0C54	0x1703      	BSF        STATUS, 6
0x0C55	0x00C6      	MOVWF      FARG_strcpy_to
0x0C56	0x30A0      	MOVLW      ?lstr9_Seminarska
0x0C57	0x00C7      	MOVWF      FARG_strcpy_from
0x0C58	0x118A      	BCF        PCLATH, 3
0x0C59	0x234C      	CALL       _strcpy
0x0C5A	0x158A      	BSF        PCLATH, 3
;Seminarska.c,328 :: 		while(1){
L_main125:
;Seminarska.c,329 :: 		typeUser = ADC_Read(7);
0x0C5B	0x3007      	MOVLW      7
0x0C5C	0x1683      	BSF        STATUS, 5
0x0C5D	0x1303      	BCF        STATUS, 6
0x0C5E	0x00EF      	MOVWF      FARG_ADC_Read_channel
0x0C5F	0x118A      	BCF        PCLATH, 3
0x0C60	0x2423      	CALL       _ADC_Read
0x0C61	0x158A      	BSF        PCLATH, 3
0x0C62	0x0870      	MOVF       R0, 0
0x0C63	0x1283      	BCF        STATUS, 5
0x0C64	0x00A2      	MOVWF      _typeUser
;Seminarska.c,330 :: 		if(typeUser == 0)
0x0C65	0x0870      	MOVF       R0, 0
0x0C66	0x3A00      	XORLW      0
0x0C67	0x1D03      	BTFSS      STATUS, 2
0x0C68	0x2C6A      	GOTO       L_main127
;Seminarska.c,331 :: 		break;
0x0C69	0x2C92      	GOTO       L_main126
L_main127:
;Seminarska.c,332 :: 		if (UART1_Data_Ready()) {
0x0C6A	0x118A      	BCF        PCLATH, 3
0x0C6B	0x240E      	CALL       _UART1_Data_Ready
0x0C6C	0x158A      	BSF        PCLATH, 3
0x0C6D	0x0870      	MOVF       R0, 0
0x0C6E	0x1903      	BTFSC      STATUS, 2
0x0C6F	0x2C91      	GOTO       L_main128
;Seminarska.c,333 :: 		uart_rd = UART1_Read();
0x0C70	0x118A      	BCF        PCLATH, 3
0x0C71	0x2415      	CALL       _UART1_Read
0x0C72	0x158A      	BSF        PCLATH, 3
0x0C73	0x0870      	MOVF       R0, 0
0x0C74	0x00DA      	MOVWF      _uart_rd
;Seminarska.c,334 :: 		porakaOdEsurat[i] = uart_rd;
0x0C75	0x1283      	BCF        STATUS, 5
0x0C76	0x0820      	MOVF       _i, 0
0x0C77	0x3EDB      	ADDLW      _porakaOdEsurat
0x0C78	0x0084      	MOVWF      FSR
0x0C79	0x0870      	MOVF       R0, 0
0x0C7A	0x0080      	MOVWF      INDF
;Seminarska.c,335 :: 		i++;
0x0C7B	0x0AA0      	INCF       _i, 1
0x0C7C	0x1903      	BTFSC      STATUS, 2
0x0C7D	0x0AA1      	INCF       _i+1, 1
;Seminarska.c,336 :: 		sporedba = strcmp(getTime,porakaOdEsurat);
0x0C7E	0x3030      	MOVLW      _getTime
0x0C7F	0x1703      	BSF        STATUS, 6
0x0C80	0x00C6      	MOVWF      FARG_strcmp_s1
0x0C81	0x30DB      	MOVLW      _porakaOdEsurat
0x0C82	0x00C7      	MOVWF      FARG_strcmp_s2
0x0C83	0x118A      	BCF        PCLATH, 3
0x0C84	0x2291      	CALL       _strcmp
0x0C85	0x158A      	BSF        PCLATH, 3
0x0C86	0x0870      	MOVF       R0, 0
0x0C87	0x1303      	BCF        STATUS, 6
0x0C88	0x00D4      	MOVWF      _sporedba
;Seminarska.c,337 :: 		if(sporedba == 0){
0x0C89	0x0870      	MOVF       R0, 0
0x0C8A	0x3A00      	XORLW      0
0x0C8B	0x1D03      	BTFSS      STATUS, 2
0x0C8C	0x2C90      	GOTO       L_main129
;Seminarska.c,338 :: 		flagUart=1;
0x0C8D	0x3001      	MOVLW      1
0x0C8E	0x00ED      	MOVWF      _flagUart
;Seminarska.c,339 :: 		break;
0x0C8F	0x2C92      	GOTO       L_main126
;Seminarska.c,340 :: 		}
L_main129:
;Seminarska.c,342 :: 		flagUart=0;
0x0C90	0x01ED      	CLRF       _flagUart
;Seminarska.c,344 :: 		}
L_main128:
;Seminarska.c,345 :: 		}
0x0C91	0x2C5B      	GOTO       L_main125
L_main126:
;Seminarska.c,346 :: 		for(j = 0; j < 20; j++){
0x0C92	0x01CB      	CLRF       _j
L_main131:
0x0C93	0x3080      	MOVLW      128
0x0C94	0x064B      	XORWF      _j, 0
0x0C95	0x00F0      	MOVWF      R0
0x0C96	0x3080      	MOVLW      128
0x0C97	0x3A14      	XORLW      20
0x0C98	0x0270      	SUBWF      R0, 0
0x0C99	0x1803      	BTFSC      STATUS, 0
0x0C9A	0x2CA1      	GOTO       L_main132
;Seminarska.c,347 :: 		porakaOdEsurat[j] = 0;
0x0C9B	0x084B      	MOVF       _j, 0
0x0C9C	0x3EDB      	ADDLW      _porakaOdEsurat
0x0C9D	0x0084      	MOVWF      FSR
0x0C9E	0x0180      	CLRF       INDF
;Seminarska.c,346 :: 		for(j = 0; j < 20; j++){
0x0C9F	0x0ACB      	INCF       _j, 1
;Seminarska.c,348 :: 		}
0x0CA0	0x2C93      	GOTO       L_main131
L_main132:
;Seminarska.c,349 :: 		if(flagUart==1) {
0x0CA1	0x086D      	MOVF       _flagUart, 0
0x0CA2	0x3A01      	XORLW      1
0x0CA3	0x1D03      	BTFSS      STATUS, 2
0x0CA4	0x2DCA      	GOTO       L_main134
;Seminarska.c,350 :: 		while(1){
L_main135:
;Seminarska.c,351 :: 		if(UART1_Data_Ready()){
0x0CA5	0x118A      	BCF        PCLATH, 3
0x0CA6	0x240E      	CALL       _UART1_Data_Ready
0x0CA7	0x158A      	BSF        PCLATH, 3
0x0CA8	0x0870      	MOVF       R0, 0
0x0CA9	0x1903      	BTFSC      STATUS, 2
0x0CAA	0x2CF9      	GOTO       L_main137
;Seminarska.c,352 :: 		uart_rd = UART1_Read();
0x0CAB	0x118A      	BCF        PCLATH, 3
0x0CAC	0x2415      	CALL       _UART1_Read
0x0CAD	0x158A      	BSF        PCLATH, 3
0x0CAE	0x0870      	MOVF       R0, 0
0x0CAF	0x00DA      	MOVWF      _uart_rd
;Seminarska.c,354 :: 		if(uart_rd == 58){
0x0CB0	0x0870      	MOVF       R0, 0
0x0CB1	0x3A3A      	XORLW      58
0x0CB2	0x1D03      	BTFSS      STATUS, 2
0x0CB3	0x2CC2      	GOTO       L_main138
;Seminarska.c,355 :: 		flagDveTocki = 1;
0x0CB4	0x3001      	MOVLW      1
0x0CB5	0x1283      	BCF        STATUS, 5
0x0CB6	0x00CC      	MOVWF      _flagDveTocki
;Seminarska.c,357 :: 		Lcd_Out(2,1, "vIKAC");
0x0CB7	0x3002      	MOVLW      2
0x0CB8	0x1703      	BSF        STATUS, 6
0x0CB9	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x0CBA	0x3001      	MOVLW      1
0x0CBB	0x00CE      	MOVWF      FARG_Lcd_Out_column
0x0CBC	0x3044      	MOVLW      ?lstr10_Seminarska
0x0CBD	0x00CF      	MOVWF      FARG_Lcd_Out_text
0x0CBE	0x118A      	BCF        PCLATH, 3
0x0CBF	0x20C9      	CALL       _Lcd_Out
0x0CC0	0x158A      	BSF        PCLATH, 3
;Seminarska.c,358 :: 		}else if(flagDveTocki == 0){
0x0CC1	0x2CF9      	GOTO       L_main139
L_main138:
0x0CC2	0x1283      	BCF        STATUS, 5
0x0CC3	0x084C      	MOVF       _flagDveTocki, 0
0x0CC4	0x3A00      	XORLW      0
0x0CC5	0x1D03      	BTFSS      STATUS, 2
0x0CC6	0x2CD7      	GOTO       L_main140
;Seminarska.c,359 :: 		saati = saati * 10 + (uart_rd - 48);
0x0CC7	0x084A      	MOVF       _saati, 0
0x0CC8	0x00F0      	MOVWF      R0
0x0CC9	0x300A      	MOVLW      10
0x0CCA	0x00F4      	MOVWF      R4
0x0CCB	0x118A      	BCF        PCLATH, 3
0x0CCC	0x239A      	CALL       _Mul_8x8_U
0x0CCD	0x158A      	BSF        PCLATH, 3
0x0CCE	0x3030      	MOVLW      48
0x0CCF	0x1683      	BSF        STATUS, 5
0x0CD0	0x025A      	SUBWF      _uart_rd, 0
0x0CD1	0x00F1      	MOVWF      R1
0x0CD2	0x0871      	MOVF       R1, 0
0x0CD3	0x0770      	ADDWF      R0, 0
0x0CD4	0x1283      	BCF        STATUS, 5
0x0CD5	0x00CA      	MOVWF      _saati
;Seminarska.c,360 :: 		}else{
0x0CD6	0x2CF9      	GOTO       L_main141
L_main140:
;Seminarska.c,361 :: 		minuti = minuti * 10 + (uart_rd - 48);
0x0CD7	0x084D      	MOVF       _minuti, 0
0x0CD8	0x00F0      	MOVWF      R0
0x0CD9	0x300A      	MOVLW      10
0x0CDA	0x00F4      	MOVWF      R4
0x0CDB	0x118A      	BCF        PCLATH, 3
0x0CDC	0x239A      	CALL       _Mul_8x8_U
0x0CDD	0x158A      	BSF        PCLATH, 3
0x0CDE	0x3030      	MOVLW      48
0x0CDF	0x1683      	BSF        STATUS, 5
0x0CE0	0x025A      	SUBWF      _uart_rd, 0
0x0CE1	0x00F1      	MOVWF      R1
0x0CE2	0x0871      	MOVF       R1, 0
0x0CE3	0x0770      	ADDWF      R0, 0
0x0CE4	0x1283      	BCF        STATUS, 5
0x0CE5	0x00CD      	MOVWF      _minuti
;Seminarska.c,362 :: 		brCifri++;
0x0CE6	0x1683      	BSF        STATUS, 5
0x0CE7	0x0AA9      	INCF       _brCifri, 1
;Seminarska.c,363 :: 		if(brCifri == 2){
0x0CE8	0x0829      	MOVF       _brCifri, 0
0x0CE9	0x3A02      	XORLW      2
0x0CEA	0x1D03      	BTFSS      STATUS, 2
0x0CEB	0x2CF9      	GOTO       L_main142
;Seminarska.c,364 :: 		saati *= 60;
0x0CEC	0x1283      	BCF        STATUS, 5
0x0CED	0x084A      	MOVF       _saati, 0
0x0CEE	0x00F0      	MOVWF      R0
0x0CEF	0x303C      	MOVLW      60
0x0CF0	0x00F4      	MOVWF      R4
0x0CF1	0x118A      	BCF        PCLATH, 3
0x0CF2	0x239A      	CALL       _Mul_8x8_U
0x0CF3	0x158A      	BSF        PCLATH, 3
0x0CF4	0x0870      	MOVF       R0, 0
0x0CF5	0x00CA      	MOVWF      _saati
;Seminarska.c,365 :: 		minuti += saati;
0x0CF6	0x0870      	MOVF       R0, 0
0x0CF7	0x07CD      	ADDWF      _minuti, 1
;Seminarska.c,366 :: 		break;
0x0CF8	0x2CFA      	GOTO       L_main136
;Seminarska.c,367 :: 		}
L_main142:
;Seminarska.c,368 :: 		}
L_main141:
L_main139:
;Seminarska.c,369 :: 		}
L_main137:
;Seminarska.c,370 :: 		}
0x0CF9	0x2CA5      	GOTO       L_main135
L_main136:
0x0CFA	0x1283      	BCF        STATUS, 5
;Seminarska.c,373 :: 		i=0;
0x0CFB	0x01A0      	CLRF       _i
0x0CFC	0x01A1      	CLRF       _i+1
;Seminarska.c,374 :: 		for(i=0;i<16;i++) {
0x0CFD	0x01A0      	CLRF       _i
0x0CFE	0x01A1      	CLRF       _i+1
L_main143:
0x0CFF	0x3080      	MOVLW      128
0x0D00	0x0621      	XORWF      _i+1, 0
0x0D01	0x00F0      	MOVWF      R0
0x0D02	0x3080      	MOVLW      128
0x0D03	0x0270      	SUBWF      R0, 0
0x0D04	0x1D03      	BTFSS      STATUS, 2
0x0D05	0x2D08      	GOTO       L__main187
0x0D06	0x3010      	MOVLW      16
0x0D07	0x0220      	SUBWF      _i, 0
L__main187:
0x0D08	0x1803      	BTFSC      STATUS, 0
0x0D09	0x2DA5      	GOTO       L_main144
;Seminarska.c,375 :: 		tmp = i*16;
0x0D0A	0x3004      	MOVLW      4
0x0D0B	0x00F2      	MOVWF      R2
0x0D0C	0x0820      	MOVF       _i, 0
0x0D0D	0x00F0      	MOVWF      R0
0x0D0E	0x0821      	MOVF       _i+1, 0
0x0D0F	0x00F1      	MOVWF      R0+1
0x0D10	0x0872      	MOVF       R2, 0
L__main188:
0x0D11	0x1903      	BTFSC      STATUS, 2
0x0D12	0x2D18      	GOTO       L__main189
0x0D13	0x0DF0      	RLF        R0, 1
0x0D14	0x0DF1      	RLF        R0+1, 1
0x0D15	0x1070      	BCF        R0, 0
0x0D16	0x3EFF      	ADDLW      255
0x0D17	0x2D11      	GOTO       L__main188
L__main189:
0x0D18	0x0870      	MOVF       R0, 0
0x0D19	0x00A9      	MOVWF      _tmp
0x0D1A	0x0871      	MOVF       R0+1, 0
0x0D1B	0x00AA      	MOVWF      _tmp+1
;Seminarska.c,376 :: 		tmp += 11;
0x0D1C	0x300B      	MOVLW      11
0x0D1D	0x07F0      	ADDWF      R0, 1
0x0D1E	0x1803      	BTFSC      STATUS, 0
0x0D1F	0x0AF1      	INCF       R0+1, 1
0x0D20	0x0870      	MOVF       R0, 0
0x0D21	0x00A9      	MOVWF      _tmp
0x0D22	0x0871      	MOVF       R0+1, 0
0x0D23	0x00AA      	MOVWF      _tmp+1
;Seminarska.c,377 :: 		vreme=EEPROM_Read(tmp);
0x0D24	0x0870      	MOVF       R0, 0
0x0D25	0x1703      	BSF        STATUS, 6
0x0D26	0x00CD      	MOVWF      FARG_EEPROM_Read_Address
0x0D27	0x118A      	BCF        PCLATH, 3
0x0D28	0x2110      	CALL       _EEPROM_Read
0x0D29	0x158A      	BSF        PCLATH, 3
0x0D2A	0x0870      	MOVF       R0, 0
0x0D2B	0x1303      	BCF        STATUS, 6
0x0D2C	0x00B1      	MOVWF      _vreme
;Seminarska.c,378 :: 		if(vreme == 65535){
0x0D2D	0x3000      	MOVLW      0
0x0D2E	0x1BF0      	BTFSC      R0, 7
0x0D2F	0x30FF      	MOVLW      255
0x0D30	0x3AFF      	XORLW      255
0x0D31	0x1D03      	BTFSS      STATUS, 2
0x0D32	0x2D35      	GOTO       L__main190
0x0D33	0x30FF      	MOVLW      255
0x0D34	0x0670      	XORWF      R0, 0
L__main190:
0x0D35	0x1D03      	BTFSS      STATUS, 2
0x0D36	0x2D38      	GOTO       L_main146
;Seminarska.c,379 :: 		continue;
0x0D37	0x2DA0      	GOTO       L_main145
;Seminarska.c,380 :: 		}
L_main146:
;Seminarska.c,381 :: 		if(vreme > minuti) {
0x0D38	0x3080      	MOVLW      128
0x0D39	0x064D      	XORWF      _minuti, 0
0x0D3A	0x00F0      	MOVWF      R0
0x0D3B	0x3080      	MOVLW      128
0x0D3C	0x0631      	XORWF      _vreme, 0
0x0D3D	0x0270      	SUBWF      R0, 0
0x0D3E	0x1803      	BTFSC      STATUS, 0
0x0D3F	0x2DA0      	GOTO       L_main147
;Seminarska.c,382 :: 		razlika = vreme-minuti;
0x0D40	0x084D      	MOVF       _minuti, 0
0x0D41	0x0231      	SUBWF      _vreme, 0
0x0D42	0x00D3      	MOVWF      _razlika
;Seminarska.c,383 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0D43	0x3001      	MOVLW      1
0x0D44	0x1703      	BSF        STATUS, 6
0x0D45	0x00D3      	MOVWF      FARG_Lcd_Cmd_out_char
0x0D46	0x118A      	BCF        PCLATH, 3
0x0D47	0x201A      	CALL       _Lcd_Cmd
0x0D48	0x158A      	BSF        PCLATH, 3
;Seminarska.c,384 :: 		kp = razlika;
0x0D49	0x0853      	MOVF       _razlika, 0
0x0D4A	0x1683      	BSF        STATUS, 5
0x0D4B	0x00AD      	MOVWF      _kp
;Seminarska.c,385 :: 		if(razlika < min1Time) {
0x0D4C	0x3080      	MOVLW      128
0x0D4D	0x1283      	BCF        STATUS, 5
0x0D4E	0x1BD3      	BTFSC      _razlika, 7
0x0D4F	0x307F      	MOVLW      127
0x0D50	0x00F0      	MOVWF      R0
0x0D51	0x3080      	MOVLW      128
0x0D52	0x0641      	XORWF      _min1Time+1, 0
0x0D53	0x0270      	SUBWF      R0, 0
0x0D54	0x1D03      	BTFSS      STATUS, 2
0x0D55	0x2D58      	GOTO       L__main191
0x0D56	0x0840      	MOVF       _min1Time, 0
0x0D57	0x0253      	SUBWF      _razlika, 0
L__main191:
0x0D58	0x1803      	BTFSC      STATUS, 0
0x0D59	0x2D80      	GOTO       L_main148
;Seminarska.c,386 :: 		min2Time=min1Time;
0x0D5A	0x0840      	MOVF       _min1Time, 0
0x0D5B	0x00B2      	MOVWF      _min2Time
0x0D5C	0x0841      	MOVF       _min1Time+1, 0
0x0D5D	0x00B3      	MOVWF      _min2Time+1
;Seminarska.c,387 :: 		min1Time=razlika;
0x0D5E	0x0853      	MOVF       _razlika, 0
0x0D5F	0x00C0      	MOVWF      _min1Time
0x0D60	0x3000      	MOVLW      0
0x0D61	0x1BC0      	BTFSC      _min1Time, 7
0x0D62	0x30FF      	MOVLW      255
0x0D63	0x00C1      	MOVWF      _min1Time+1
;Seminarska.c,388 :: 		min2Stanica=min1Stanica;
0x0D64	0x0843      	MOVF       _min1Stanica, 0
0x0D65	0x00C2      	MOVWF      _min2Stanica
;Seminarska.c,389 :: 		min1Stanica= i;
0x0D66	0x0820      	MOVF       _i, 0
0x0D67	0x00C3      	MOVWF      _min1Stanica
;Seminarska.c,390 :: 		WordToStr(min1Stanica, textTest);
0x0D68	0x0820      	MOVF       _i, 0
0x0D69	0x1703      	BSF        STATUS, 6
0x0D6A	0x00CD      	MOVWF      FARG_WordToStr_input
0x0D6B	0x3000      	MOVLW      0
0x0D6C	0x1BCD      	BTFSC      FARG_WordToStr_input, 7
0x0D6D	0x30FF      	MOVLW      255
0x0D6E	0x00CE      	MOVWF      FARG_WordToStr_input+1
0x0D6F	0x30C6      	MOVLW      _textTest
0x0D70	0x00CF      	MOVWF      FARG_WordToStr_output
0x0D71	0x118A      	BCF        PCLATH, 3
0x0D72	0x213D      	CALL       _WordToStr
0x0D73	0x158A      	BSF        PCLATH, 3
;Seminarska.c,391 :: 		Lcd_Out(1,1,min1Stanica);
0x0D74	0x3001      	MOVLW      1
0x0D75	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x0D76	0x3001      	MOVLW      1
0x0D77	0x00CE      	MOVWF      FARG_Lcd_Out_column
0x0D78	0x1303      	BCF        STATUS, 6
0x0D79	0x0843      	MOVF       _min1Stanica, 0
0x0D7A	0x1703      	BSF        STATUS, 6
0x0D7B	0x00CF      	MOVWF      FARG_Lcd_Out_text
0x0D7C	0x118A      	BCF        PCLATH, 3
0x0D7D	0x20C9      	CALL       _Lcd_Out
0x0D7E	0x158A      	BSF        PCLATH, 3
;Seminarska.c,392 :: 		}
0x0D7F	0x2DA0      	GOTO       L_main149
L_main148:
;Seminarska.c,393 :: 		else if(razlika<min2Time && razlika!=min1Time) {
0x0D80	0x3080      	MOVLW      128
0x0D81	0x1283      	BCF        STATUS, 5
0x0D82	0x1BD3      	BTFSC      _razlika, 7
0x0D83	0x307F      	MOVLW      127
0x0D84	0x00F0      	MOVWF      R0
0x0D85	0x3080      	MOVLW      128
0x0D86	0x0633      	XORWF      _min2Time+1, 0
0x0D87	0x0270      	SUBWF      R0, 0
0x0D88	0x1D03      	BTFSS      STATUS, 2
0x0D89	0x2D8C      	GOTO       L__main192
0x0D8A	0x0832      	MOVF       _min2Time, 0
0x0D8B	0x0253      	SUBWF      _razlika, 0
L__main192:
0x0D8C	0x1803      	BTFSC      STATUS, 0
0x0D8D	0x2DA0      	GOTO       L_main152
0x0D8E	0x3000      	MOVLW      0
0x0D8F	0x1BD3      	BTFSC      _razlika, 7
0x0D90	0x30FF      	MOVLW      255
0x0D91	0x0641      	XORWF      _min1Time+1, 0
0x0D92	0x1D03      	BTFSS      STATUS, 2
0x0D93	0x2D96      	GOTO       L__main193
0x0D94	0x0840      	MOVF       _min1Time, 0
0x0D95	0x0653      	XORWF      _razlika, 0
L__main193:
0x0D96	0x1903      	BTFSC      STATUS, 2
0x0D97	0x2DA0      	GOTO       L_main152
L__main156:
;Seminarska.c,394 :: 		min2Time=razlika;
0x0D98	0x0853      	MOVF       _razlika, 0
0x0D99	0x00B2      	MOVWF      _min2Time
0x0D9A	0x3000      	MOVLW      0
0x0D9B	0x1BB2      	BTFSC      _min2Time, 7
0x0D9C	0x30FF      	MOVLW      255
0x0D9D	0x00B3      	MOVWF      _min2Time+1
;Seminarska.c,395 :: 		min2Stanica= i;
0x0D9E	0x0820      	MOVF       _i, 0
0x0D9F	0x00C2      	MOVWF      _min2Stanica
;Seminarska.c,396 :: 		}
L_main152:
L_main149:
;Seminarska.c,397 :: 		}
L_main147:
;Seminarska.c,398 :: 		}
L_main145:
0x0DA0	0x1283      	BCF        STATUS, 5
;Seminarska.c,374 :: 		for(i=0;i<16;i++) {
0x0DA1	0x0AA0      	INCF       _i, 1
0x0DA2	0x1903      	BTFSC      STATUS, 2
0x0DA3	0x0AA1      	INCF       _i+1, 1
;Seminarska.c,398 :: 		}
0x0DA4	0x2CFF      	GOTO       L_main143
L_main144:
;Seminarska.c,400 :: 		i=0;
0x0DA5	0x01A0      	CLRF       _i
0x0DA6	0x01A1      	CLRF       _i+1
;Seminarska.c,401 :: 		pomestuvanje = 0;
0x0DA7	0x1683      	BSF        STATUS, 5
0x0DA8	0x01AB      	CLRF       _pomestuvanje
;Seminarska.c,402 :: 		pecati();
0x0DA9	0x118A      	BCF        PCLATH, 3
0x0DAA	0x22EC      	CALL       _pecati
0x0DAB	0x158A      	BSF        PCLATH, 3
;Seminarska.c,404 :: 		Delay_ms(20);
0x0DAC	0x3034      	MOVLW      52
0x0DAD	0x00FC      	MOVWF      R12
0x0DAE	0x30F1      	MOVLW      241
0x0DAF	0x00FD      	MOVWF      R13
L_main153:
0x0DB0	0x0BFD      	DECFSZ     R13, 1
0x0DB1	0x2DB0      	GOTO       L_main153
0x0DB2	0x0BFC      	DECFSZ     R12, 1
0x0DB3	0x2DB0      	GOTO       L_main153
0x0DB4	0x0000      	NOP
0x0DB5	0x0000      	NOP
;Seminarska.c,405 :: 		Lcd_Out(2,1, "KRAJ");
0x0DB6	0x3002      	MOVLW      2
0x0DB7	0x1703      	BSF        STATUS, 6
0x0DB8	0x00CD      	MOVWF      FARG_Lcd_Out_row
0x0DB9	0x3001      	MOVLW      1
0x0DBA	0x00CE      	MOVWF      FARG_Lcd_Out_column
0x0DBB	0x304E      	MOVLW      ?lstr11_Seminarska
0x0DBC	0x00CF      	MOVWF      FARG_Lcd_Out_text
0x0DBD	0x118A      	BCF        PCLATH, 3
0x0DBE	0x20C9      	CALL       _Lcd_Out
0x0DBF	0x158A      	BSF        PCLATH, 3
;Seminarska.c,406 :: 		Delay_ms(5);
0x0DC0	0x300D      	MOVLW      13
0x0DC1	0x00FC      	MOVWF      R12
0x0DC2	0x30FB      	MOVLW      251
0x0DC3	0x00FD      	MOVWF      R13
L_main154:
0x0DC4	0x0BFD      	DECFSZ     R13, 1
0x0DC5	0x2DC4      	GOTO       L_main154
0x0DC6	0x0BFC      	DECFSZ     R12, 1
0x0DC7	0x2DC4      	GOTO       L_main154
0x0DC8	0x0000      	NOP
0x0DC9	0x0000      	NOP
;Seminarska.c,407 :: 		}
L_main134:
;Seminarska.c,408 :: 		}
L_main124:
;Seminarska.c,409 :: 		}
0x0DCA	0x283B      	GOTO       L_main16
;Seminarska.c,410 :: 		}
0x0DCB	0x2DCB      	GOTO       $+0
; end of _main
;Seminarska.c,0 :: ?ICS_i
0x0447	0x3400 ;?ICS_i+0
0x0448	0x3400 ;?ICS_i+1
; end of ?ICS_i
;Seminarska.c,0 :: ?ICS_typeUser
0x0449	0x3400 ;?ICS_typeUser+0
; end of ?ICS_typeUser
;Seminarska.c,0 :: ?ICS?lstr3_Seminarska
0x044A	0x3456 ;?ICS?lstr3_Seminarska+0
0x044B	0x3449 ;?ICS?lstr3_Seminarska+1
0x044C	0x344B ;?ICS?lstr3_Seminarska+2
0x044D	0x3441 ;?ICS?lstr3_Seminarska+3
0x044E	0x3443 ;?ICS?lstr3_Seminarska+4
0x044F	0x3400 ;?ICS?lstr3_Seminarska+5
; end of ?ICS?lstr3_Seminarska
;Seminarska.c,0 :: ?ICS_tmp
0x0450	0x3400 ;?ICS_tmp+0
0x0451	0x3400 ;?ICS_tmp+1
; end of ?ICS_tmp
;Seminarska.c,0 :: ?ICS?lstr2_Seminarska
0x0452	0x3456 ;?ICS?lstr2_Seminarska+0
0x0453	0x346E ;?ICS?lstr2_Seminarska+1
0x0454	0x3465 ;?ICS?lstr2_Seminarska+2
0x0455	0x3473 ;?ICS?lstr2_Seminarska+3
0x0456	0x3469 ;?ICS?lstr2_Seminarska+4
0x0457	0x3400 ;?ICS?lstr2_Seminarska+5
; end of ?ICS?lstr2_Seminarska
;Seminarska.c,0 :: ?ICS_vreme
0x0458	0x3400 ;?ICS_vreme+0
; end of ?ICS_vreme
;Seminarska.c,0 :: ?ICS_min2Time
0x0459	0x34A0 ;?ICS_min2Time+0
0x045A	0x3405 ;?ICS_min2Time+1
; end of ?ICS_min2Time
;Seminarska.c,0 :: ?ICS_temp
0x045B	0x3400 ;?ICS_temp+0
0x045C	0x3400 ;?ICS_temp+1
; end of ?ICS_temp
;Seminarska.c,0 :: ?ICS?lstr1_Seminarska
0x045D	0x3447 ;?ICS?lstr1_Seminarska+0
0x045E	0x3472 ;?ICS?lstr1_Seminarska+1
0x045F	0x3465 ;?ICS?lstr1_Seminarska+2
0x0460	0x3473 ;?ICS?lstr1_Seminarska+3
0x0461	0x3468 ;?ICS?lstr1_Seminarska+4
0x0462	0x346B ;?ICS?lstr1_Seminarska+5
0x0463	0x3461 ;?ICS?lstr1_Seminarska+6
0x0464	0x3400 ;?ICS?lstr1_Seminarska+7
; end of ?ICS?lstr1_Seminarska
;Seminarska.c,0 :: ?ICS_flagTime
0x0465	0x3400 ;?ICS_flagTime+0
; end of ?ICS_flagTime
;Seminarska.c,0 :: ?ICS_flagVneseno
0x0466	0x3400 ;?ICS_flagVneseno+0
; end of ?ICS_flagVneseno
;Seminarska.c,0 :: ?ICS_min1Time
0x0467	0x34A0 ;?ICS_min1Time+0
0x0468	0x3405 ;?ICS_min1Time+1
; end of ?ICS_min1Time
;Seminarska.c,0 :: ?ICS_min2Stanica
0x0469	0x3464 ;?ICS_min2Stanica+0
; end of ?ICS_min2Stanica
;Seminarska.c,0 :: ?ICS_min1Stanica
0x046A	0x3464 ;?ICS_min1Stanica+0
; end of ?ICS_min1Stanica
;Seminarska.c,0 :: ?ICS?lstr10_Seminarska
0x046B	0x3476 ;?ICS?lstr10_Seminarska+0
0x046C	0x3449 ;?ICS?lstr10_Seminarska+1
0x046D	0x344B ;?ICS?lstr10_Seminarska+2
0x046E	0x3441 ;?ICS?lstr10_Seminarska+3
0x046F	0x3443 ;?ICS?lstr10_Seminarska+4
0x0470	0x3400 ;?ICS?lstr10_Seminarska+5
; end of ?ICS?lstr10_Seminarska
;Seminarska.c,0 :: ?ICS_saati
0x0471	0x3400 ;?ICS_saati+0
; end of ?ICS_saati
;Seminarska.c,0 :: ?ICS_j
0x0472	0x3400 ;?ICS_j+0
; end of ?ICS_j
;Seminarska.c,0 :: ?ICS_flagDveTocki
0x0473	0x3400 ;?ICS_flagDveTocki+0
; end of ?ICS_flagDveTocki
;Seminarska.c,0 :: ?ICS_minuti
0x0474	0x3400 ;?ICS_minuti+0
; end of ?ICS_minuti
;Seminarska.c,0 :: ?ICS?lstr11_Seminarska
0x0475	0x344B ;?ICS?lstr11_Seminarska+0
0x0476	0x3452 ;?ICS?lstr11_Seminarska+1
0x0477	0x3441 ;?ICS?lstr11_Seminarska+2
0x0478	0x344A ;?ICS?lstr11_Seminarska+3
0x0479	0x3400 ;?ICS?lstr11_Seminarska+4
; end of ?ICS?lstr11_Seminarska
;Seminarska.c,0 :: ?ICS_razlika
0x047A	0x3400 ;?ICS_razlika+0
; end of ?ICS_razlika
;Seminarska.c,0 :: ?ICS_sporedba
0x047B	0x3464 ;?ICS_sporedba+0
; end of ?ICS_sporedba
;Seminarska.c,0 :: ?ICS?lstr7_Seminarska
0x047C	0x344A ;?ICS?lstr7_Seminarska+0
0x047D	0x3420 ;?ICS?lstr7_Seminarska+1
0x047E	0x3469 ;?ICS?lstr7_Seminarska+2
0x047F	0x346C ;?ICS?lstr7_Seminarska+3
0x0480	0x3469 ;?ICS?lstr7_Seminarska+4
0x0481	0x3420 ;?ICS?lstr7_Seminarska+5
0x0482	0x344C ;?ICS?lstr7_Seminarska+6
0x0483	0x3400 ;?ICS?lstr7_Seminarska+7
; end of ?ICS?lstr7_Seminarska
;Seminarska.c,0 :: ?ICS?lstr8_Seminarska
0x0484	0x3456 ;?ICS?lstr8_Seminarska+0
0x0485	0x346E ;?ICS?lstr8_Seminarska+1
0x0486	0x3465 ;?ICS?lstr8_Seminarska+2
0x0487	0x3473 ;?ICS?lstr8_Seminarska+3
0x0488	0x3465 ;?ICS?lstr8_Seminarska+4
0x0489	0x346E ;?ICS?lstr8_Seminarska+5
0x048A	0x3461 ;?ICS?lstr8_Seminarska+6
0x048B	0x3420 ;?ICS?lstr8_Seminarska+7
0x048C	0x3442 ;?ICS?lstr8_Seminarska+8
0x048D	0x3472 ;?ICS?lstr8_Seminarska+9
0x048E	0x346F ;?ICS?lstr8_Seminarska+10
0x048F	0x346A ;?ICS?lstr8_Seminarska+11
0x0490	0x346B ;?ICS?lstr8_Seminarska+12
0x0491	0x3461 ;?ICS?lstr8_Seminarska+13
0x0492	0x3400 ;?ICS?lstr8_Seminarska+14
; end of ?ICS?lstr8_Seminarska
;Seminarska.c,0 :: ?ICS_countStanici
0x0493	0x3400 ;?ICS_countStanici+0
; end of ?ICS_countStanici
;Seminarska.c,0 :: ?ICS_flagUart
0x0494	0x3400 ;?ICS_flagUart+0
; end of ?ICS_flagUart
;Seminarska.c,0 :: ?ICS?lstr9_Seminarska
0x0495	0x3447 ;?ICS?lstr9_Seminarska+0
0x0496	0x3445 ;?ICS?lstr9_Seminarska+1
0x0497	0x3454 ;?ICS?lstr9_Seminarska+2
0x0498	0x3420 ;?ICS?lstr9_Seminarska+3
0x0499	0x3454 ;?ICS?lstr9_Seminarska+4
0x049A	0x3449 ;?ICS?lstr9_Seminarska+5
0x049B	0x344D ;?ICS?lstr9_Seminarska+6
0x049C	0x3445 ;?ICS?lstr9_Seminarska+7
0x049D	0x3400 ;?ICS?lstr9_Seminarska+8
; end of ?ICS?lstr9_Seminarska
;Seminarska.c,0 :: ?ICS_brCifri
0x049E	0x3400 ;?ICS_brCifri+0
; end of ?ICS_brCifri
;Seminarska.c,0 :: ?ICS_flagPlus
0x049F	0x3400 ;?ICS_flagPlus+0
; end of ?ICS_flagPlus
;Seminarska.c,0 :: ?ICS_pomestuvanje
0x04A0	0x3400 ;?ICS_pomestuvanje+0
; end of ?ICS_pomestuvanje
;Seminarska.c,0 :: ?ICS_flag3
0x04A1	0x3400 ;?ICS_flag3+0
; end of ?ICS_flag3
;Seminarska.c,0 :: ?ICS_kp
0x04A2	0x3400 ;?ICS_kp+0
; end of ?ICS_kp
;Seminarska.c,0 :: ?ICS_oldState
0x04A3	0x3400 ;?ICS_oldState+0
; end of ?ICS_oldState
;Seminarska.c,0 :: ?lstr_5_Seminarska
0x04A4	0x3469 ;?lstr_5_Seminarska+0
0x04A5	0x3400 ;?lstr_5_Seminarska+1
; end of ?lstr_5_Seminarska
;Seminarska.c,0 :: ?lstr_4_Seminarska
0x04A6	0x344D ;?lstr_4_Seminarska+0
0x04A7	0x3400 ;?lstr_4_Seminarska+1
; end of ?lstr_4_Seminarska
;Seminarska.c,0 :: ?lstr_6_Seminarska
0x04A8	0x346E ;?lstr_6_Seminarska+0
0x04A9	0x3400 ;?lstr_6_Seminarska+1
; end of ?lstr_6_Seminarska
;Seminarska.c,0 :: ?ICS_brStanici
0x04AA	0x3400 ;?ICS_brStanici+0
0x04AB	0x3400 ;?ICS_brStanici+1
; end of ?ICS_brStanici
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [7]    _Delay_50us
0x000A       [3]    _Delay_1us
0x000D      [13]    _Delay_5500us
0x001A      [74]    _Lcd_Cmd
0x0064      [29]    _Div_16x16_U
0x0081      [11]    _Lcd_Chr_CP
0x008C      [61]    _Lcd_Chr
0x00C9      [71]    _Lcd_Out
0x0110      [11]    _EEPROM_Read
0x011B      [34]    _TrimLeft
0x013D      [66]    _WordToStr
0x017F       [7]    _____DoICP
0x0186     [200]    _pecatiMin
0x024E       [8]    _Delay_10us
0x0256       [8]    _Delay_22us
0x025E      [51]    _Keypad_Key_Press
0x0291      [32]    _strcmp
0x02B1      [43]    _Mul_16x16_U
0x02DC      [16]    _UART1_Init
0x02EC      [42]    _pecati
0x0316      [36]    _greska
0x033A      [18]    _clear
0x034C      [27]    _strcpy
0x0367      [29]    _EEPROM_Write
0x0384      [17]    _Keypad_Key_Click
0x0395       [5]    _Keypad_Init
0x039A      [25]    _Mul_8x8_U
0x03B3      [12]    ___CC2DW
0x03BF      [79]    _Lcd_Init
0x040E       [7]    _UART1_Data_Ready
0x0415      [14]    _UART1_Read
0x0423      [36]    _ADC_Read
0x0800    [1481]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [0]    NOT_PD_bit
0x0003       [0]    C_bit
0x0003       [0]    DC_bit
0x0003       [0]    Z_bit
0x0003       [0]    NOT_TO_bit
0x0003       [1]    STATUS
0x0003       [0]    IRP_bit
0x0003       [0]    RP0_bit
0x0003       [0]    RP1_bit
0x0004       [1]    FSR
0x0004       [1]    FSRPTR
0x0005       [0]    RA2_bit
0x0005       [0]    RA3_bit
0x0005       [0]    RA0_bit
0x0005       [0]    RA1_bit
0x0005       [0]    RA6_bit
0x0005       [0]    RA7_bit
0x0005       [0]    RA4_bit
0x0005       [0]    RA5_bit
0x0005       [1]    PORTA
0x0006       [0]    LCD_D4
0x0006       [0]    LCD_EN
0x0006       [0]    LCD_D6
0x0006       [0]    RB1_bit
0x0006       [0]    RB3_bit
0x0006       [0]    LCD_D5
0x0006       [1]    PORTB
0x0006       [0]    RB4_bit
0x0006       [0]    RB2_bit
0x0006       [0]    RB7_bit
0x0006       [0]    RB5_bit
0x0006       [0]    RB6_bit
0x0006       [0]    RB0_bit
0x0006       [0]    LCD_D7
0x0006       [0]    LCD_RS
0x0007       [0]    RC3_bit
0x0007       [0]    RC4_bit
0x0007       [0]    RC6_bit
0x0007       [0]    RC7_bit
0x0007       [1]    PORTC
0x0007       [0]    RC5_bit
0x0007       [0]    RC2_bit
0x0007       [0]    RC0_bit
0x0007       [0]    RC1_bit
0x0008       [1]    keypadPort
0x0008       [0]    RD1_bit
0x0008       [0]    RD3_bit
0x0008       [0]    RD2_bit
0x0008       [0]    RD7_bit
0x0008       [0]    RD6_bit
0x0008       [0]    RD5_bit
0x0008       [0]    RD4_bit
0x0008       [0]    RD0_bit
0x0008       [1]    PORTD
0x0009       [0]    RE1_bit
0x0009       [0]    RE2_bit
0x0009       [1]    PORTE
0x0009       [0]    RE0_bit
0x0009       [0]    RE3_bit
0x000A       [1]    PCLATH
0x000B       [0]    INTE_bit
0x000B       [0]    RBIE_bit
0x000B       [0]    T0IF_bit
0x000B       [1]    INTCON
0x000B       [0]    RBIF_bit
0x000B       [0]    INTF_bit
0x000B       [0]    TMR0IE_bit
0x000B       [0]    T0IE_bit
0x000B       [0]    TMR0IF_bit
0x000B       [0]    GIE_bit
0x000B       [0]    PEIE_bit
0x000C       [0]    RCIF_bit
0x000C       [0]    CCP1IF_bit
0x000C       [0]    ADIF_bit
0x000C       [0]    TMR2IF_bit
0x000C       [1]    PIR1
0x000C       [0]    SSPIF_bit
0x000C       [0]    TMR1IF_bit
0x000C       [0]    TXIF_bit
0x000D       [1]    PIR2
0x000D       [0]    EEIF_bit
0x000D       [0]    BCLIF_bit
0x000D       [0]    C1IF_bit
0x000D       [0]    OSFIF_bit
0x000D       [0]    C2IF_bit
0x000D       [0]    CCP2IF_bit
0x000D       [0]    ULPWUIF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    TMR1CS_bit
0x0010       [0]    TMR1ON_bit
0x0010       [0]    T1INSYNC_bit
0x0010       [0]    T1SYNC_bit
0x0010       [0]    TMR1GE_bit
0x0010       [0]    T1CKPS1_bit
0x0010       [1]    T1CON
0x0010       [0]    T1GINV_bit
0x0010       [0]    T1OSCEN_bit
0x0010       [0]    NOT_T1SYNC_bit
0x0010       [0]    T1CKPS0_bit
0x0011       [1]    TMR2
0x0012       [0]    TMR2ON_bit
0x0012       [0]    TOUTPS1_bit
0x0012       [0]    TOUTPS0_bit
0x0012       [0]    T2CKPS0_bit
0x0012       [1]    T2CON
0x0012       [0]    T2CKPS1_bit
0x0012       [0]    TOUTPS2_bit
0x0012       [0]    TOUTPS3_bit
0x0013       [1]    SSPBUF
0x0014       [0]    SSPEN_bit
0x0014       [0]    CKP_bit
0x0014       [0]    SSPM3_bit
0x0014       [0]    SSPM0_bit
0x0014       [0]    SSPM2_bit
0x0014       [0]    SSPM1_bit
0x0014       [0]    SSPOV_bit
0x0014       [0]    WCOL_bit
0x0014       [1]    SSPCON
0x0015       [1]    CCPR1L
0x0015       [2]    CCPR1
0x0016       [1]    CCPR1H
0x0017       [0]    CCP1M2_bit
0x0017       [0]    CCP1M3_bit
0x0017       [0]    CCP1M1_bit
0x0017       [0]    CCP1M0_bit
0x0017       [1]    CCP1CON
0x0017       [0]    CCP1Y_bit
0x0017       [0]    DC1B1_bit
0x0017       [0]    P1M0_bit
0x0017       [0]    P1M1_bit
0x0017       [0]    DC1B0_bit
0x0017       [0]    CCP1X_bit
0x0018       [0]    RCD8_bit
0x0018       [0]    RX9D_bit
0x0018       [0]    CREN_bit
0x0018       [0]    SREN_bit
0x0018       [1]    RCSTA
0x0018       [0]    FERR_bit
0x0018       [0]    ADDEN_bit
0x0018       [0]    RC8_9_bit
0x0018       [0]    RX9_bit
0x0018       [0]    OERR_bit
0x0018       [0]    SPEN_bit
0x0018       [0]    NOT_RC8_bit
0x0018       [0]    RC9_bit
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001B       [2]    CCPR2
0x001B       [1]    CCPR2L
0x001C       [1]    CCPR2H
0x001D       [0]    CCP2M3_bit
0x001D       [0]    CCP2M0_bit
0x001D       [0]    CCP2M1_bit
0x001D       [0]    CCP2M2_bit
0x001D       [0]    CCP2X_bit
0x001D       [1]    CCP2CON
0x001D       [0]    DC2B1_bit
0x001D       [0]    DC2B0_bit
0x001D       [0]    CCP2Y_bit
0x001E       [1]    ADRESH
0x001F       [0]    CHS1_bit
0x001F       [0]    ADON_bit
0x001F       [0]    GO_bit
0x001F       [0]    CHS0_bit
0x001F       [0]    GO_DONE_bit
0x001F       [0]    CHS2_bit
0x001F       [1]    ADCON0
0x001F       [0]    ADCS0_bit
0x001F       [0]    ADCS1_bit
0x001F       [0]    NOT_DONE_bit
0x001F       [0]    CHS3_bit
0x0020       [2]    _i
0x0022       [1]    _typeUser
0x0023       [6]    ?lstr3_Seminarska
0x0029       [2]    _tmp
0x002B       [6]    ?lstr2_Seminarska
0x0031       [1]    _vreme
0x0032       [2]    _min2Time
0x0034       [2]    _temp
0x0036       [8]    ?lstr1_Seminarska
0x003E       [1]    _flagTime
0x003F       [1]    _flagVneseno
0x0040       [2]    _min1Time
0x0042       [1]    _min2Stanica
0x0043       [1]    _min1Stanica
0x0044       [6]    ?lstr10_Seminarska
0x004A       [1]    _saati
0x004B       [1]    _j
0x004C       [1]    _flagDveTocki
0x004D       [1]    _minuti
0x004E       [5]    ?lstr11_Seminarska
0x0053       [1]    _razlika
0x0054       [1]    _sporedba
0x0055       [8]    ?lstr7_Seminarska
0x005D      [15]    ?lstr8_Seminarska
0x006C       [1]    _countStanici
0x006D       [1]    _flagUart
0x006E       [2]    _brStanici
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    PSA_bit
0x0081       [0]    T0SE_bit
0x0081       [0]    PS2_bit
0x0081       [0]    NOT_RBPU_bit
0x0081       [0]    T0CS_bit
0x0081       [0]    INTEDG_bit
0x0081       [0]    PS1_bit
0x0081       [1]    OPTION_REG
0x0081       [0]    PS0_bit
0x0085       [0]    TRISA6_bit
0x0085       [0]    TRISA1_bit
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA7_bit
0x0085       [0]    TRISA5_bit
0x0085       [1]    TRISA
0x0085       [0]    TRISA4_bit
0x0085       [0]    TRISA2_bit
0x0085       [0]    TRISA3_bit
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB6_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    LCD_D7_Direction
0x0086       [0]    LCD_D6_Direction
0x0086       [0]    TRISB2_bit
0x0086       [0]    LCD_EN_Direction
0x0086       [0]    LCD_D4_Direction
0x0086       [1]    TRISB
0x0086       [0]    LCD_RS_Direction
0x0086       [0]    LCD_D5_Direction
0x0086       [0]    TRISB7_bit
0x0087       [0]    TRISC3_bit
0x0087       [0]    TRISC2_bit
0x0087       [1]    TRISC
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC7_bit
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC5_bit
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC0_bit
0x0088       [0]    TRISD1_bit
0x0088       [0]    TRISD7_bit
0x0088       [0]    TRISD0_bit
0x0088       [0]    TRISD4_bit
0x0088       [0]    TRISD6_bit
0x0088       [0]    TRISD3_bit
0x0088       [0]    TRISD2_bit
0x0088       [0]    TRISD5_bit
0x0088       [1]    TRISD
0x0089       [0]    TRISE3_bit
0x0089       [0]    TRISE2_bit
0x0089       [1]    TRISE
0x0089       [0]    TRISE0_bit
0x0089       [0]    TRISE1_bit
0x008C       [0]    CCP1IE_bit
0x008C       [0]    TMR1IE_bit
0x008C       [0]    TMR2IE_bit
0x008C       [0]    TXIE_bit
0x008C       [0]    RCIE_bit
0x008C       [0]    ADIE_bit
0x008C       [1]    PIE1
0x008C       [0]    SSPIE_bit
0x008D       [0]    OSFIE_bit
0x008D       [1]    PIE2
0x008D       [0]    BCLIE_bit
0x008D       [0]    EEIE_bit
0x008D       [0]    CCP2IE_bit
0x008D       [0]    ULPWUIE_bit
0x008D       [0]    C1IE_bit
0x008D       [0]    C2IE_bit
0x008E       [0]    ULPWUE_bit
0x008E       [1]    PCON
0x008E       [0]    NOT_BO_bit
0x008E       [0]    NOT_BOR_bit
0x008E       [0]    NOT_POR_bit
0x008E       [0]    SBOREN_bit
0x008F       [0]    IRCF0_bit
0x008F       [0]    IRCF2_bit
0x008F       [0]    IRCF1_bit
0x008F       [0]    LTS_bit
0x008F       [0]    HTS_bit
0x008F       [1]    OSCCON
0x008F       [0]    OSTS_bit
0x008F       [0]    SCS_bit
0x0090       [0]    TUN2_bit
0x0090       [0]    TUN1_bit
0x0090       [0]    TUN0_bit
0x0090       [0]    TUN4_bit
0x0090       [0]    TUN3_bit
0x0090       [1]    OSCTUNE
0x0091       [0]    PEN_bit
0x0091       [0]    RCEN_bit
0x0091       [0]    SEN_bit
0x0091       [0]    RSEN_bit
0x0091       [0]    ACKSTAT_bit
0x0091       [0]    GCEN_bit
0x0091       [0]    ACKEN_bit
0x0091       [0]    ACKDT_bit
0x0091       [1]    SSPCON2
0x0092       [1]    PR2
0x0093       [1]    MSK
0x0093       [1]    SSPADD
0x0093       [1]    SSPMSK
0x0094       [0]    NOT_A_bit
0x0094       [0]    NOT_ADDRESS_bit
0x0094       [0]    D_A_bit
0x0094       [0]    I2C_DATA_bit
0x0094       [0]    SMP_bit
0x0094       [0]    CKE_bit
0x0094       [0]    D_bit
0x0094       [0]    DATA_ADDRESS_bit
0x0094       [0]    R_W_bit
0x0094       [0]    NOT_WRITE_bit
0x0094       [0]    NOT_W_bit
0x0094       [0]    BF_bit
0x0094       [0]    UA_bit
0x0094       [0]    READ_WRITE_bit
0x0094       [0]    S_bit
0x0094       [0]    I2C_STOP__bit
0x0094       [0]    P_bit
0x0094       [0]    I2C_READ_bit
0x0094       [0]    R_bit
0x0094       [0]    I2C_START__bit
0x0094       [1]    SSPSTAT
0x0095       [0]    WPUB5_bit
0x0095       [0]    WPUB6_bit
0x0095       [1]    WPUB
0x0095       [0]    WPUB7_bit
0x0095       [0]    WPUB1_bit
0x0095       [0]    WPUB0_bit
0x0095       [0]    WPUB2_bit
0x0095       [0]    WPUB4_bit
0x0095       [0]    WPUB3_bit
0x0096       [0]    IOCB4_bit
0x0096       [0]    IOCB3_bit
0x0096       [0]    IOCB5_bit
0x0096       [0]    IOCB7_bit
0x0096       [0]    IOCB6_bit
0x0096       [0]    IOCB0_bit
0x0096       [1]    IOCB
0x0096       [0]    IOCB2_bit
0x0096       [0]    IOCB1_bit
0x0097       [0]    VR2_bit
0x0097       [0]    VR3_bit
0x0097       [0]    VR0_bit
0x0097       [0]    VR1_bit
0x0097       [0]    VROE_bit
0x0097       [0]    VREN_bit
0x0097       [0]    VRSS_bit
0x0097       [0]    VRR_bit
0x0097       [1]    VRCON
0x0098       [0]    SYNC_bit
0x0098       [0]    TXD8_bit
0x0098       [0]    TXEN_bit
0x0098       [0]    SENDB_bit
0x0098       [0]    BRGH_bit
0x0098       [1]    TXSTA
0x0098       [0]    NOT_TX8_bit
0x0098       [0]    TX8_9_bit
0x0098       [0]    TRMT_bit
0x0098       [0]    TX9D_bit
0x0098       [0]    CSRC_bit
0x0098       [0]    TX9_bit
0x0099       [0]    BRG3_bit
0x0099       [0]    BRG4_bit
0x0099       [0]    BRG5_bit
0x0099       [1]    SPBRG
0x0099       [0]    BRG0_bit
0x0099       [0]    BRG1_bit
0x0099       [0]    BRG6_bit
0x0099       [0]    BRG2_bit
0x0099       [0]    BRG7_bit
0x009A       [0]    BRG9_bit
0x009A       [0]    BRG10_bit
0x009A       [1]    SPBRGH
0x009A       [0]    BRG8_bit
0x009A       [0]    BRG11_bit
0x009A       [0]    BRG15_bit
0x009A       [0]    BRG14_bit
0x009A       [0]    BRG12_bit
0x009A       [0]    BRG13_bit
0x009B       [0]    PDC6_bit
0x009B       [0]    PRSEN_bit
0x009B       [0]    PDC5_bit
0x009B       [0]    PDC4_bit
0x009B       [0]    PDC3_bit
0x009B       [0]    PDC2_bit
0x009B       [1]    PWM1CON
0x009B       [0]    PDC0_bit
0x009B       [0]    PDC1_bit
0x009C       [0]    ECCPAS1_bit
0x009C       [0]    ECCPAS0_bit
0x009C       [0]    ECCPASE_bit
0x009C       [0]    ECCPAS2_bit
0x009C       [0]    PSSBD1_bit
0x009C       [0]    PSSBD0_bit
0x009C       [0]    PSSAC1_bit
0x009C       [0]    PSSAC0_bit
0x009C       [1]    ECCPAS
0x009D       [0]    STRA_bit
0x009D       [0]    STRSYNC_bit
0x009D       [0]    STRD_bit
0x009D       [0]    STRC_bit
0x009D       [0]    STRB_bit
0x009D       [1]    PSTRCON
0x009E       [1]    ADRESL
0x009F       [0]    VCFG1_bit
0x009F       [0]    ADFM_bit
0x009F       [1]    ADCON1
0x009F       [0]    VCFG0_bit
0x00A0       [9]    ?lstr9_Seminarska
0x00A9       [1]    _brCifri
0x00AA       [1]    _flagPlus
0x00AB       [1]    _pomestuvanje
0x00AC       [1]    _flag3
0x00AD       [1]    _kp
0x00AE       [1]    _oldState
0x00AF       [1]    ___tmp_UART1_Read
0x00B0       [1]    _k
0x00B1      [20]    _print
0x00C5       [0]    __Lib_Lcd_cmd_status
0x00C6      [20]    _textTest
0x00DA       [1]    _uart_rd
0x00DB      [20]    _porakaOdEsurat
0x00EF       [1]    FARG_ADC_Read_channel
0x00EF       [1]    Keypad_Key_Click_rslt_L0
0x0105       [0]    SWDTEN_bit
0x0105       [1]    WDTCON
0x0105       [0]    WDTPS0_bit
0x0105       [0]    WDTPS3_bit
0x0105       [0]    WDTPS2_bit
0x0105       [0]    WDTPS1_bit
0x0107       [0]    C1R_bit
0x0107       [0]    C1POL_bit
0x0107       [0]    C1CH0_bit
0x0107       [0]    C1CH1_bit
0x0107       [1]    CM1CON0
0x0107       [0]    C1OUT_bit
0x0107       [0]    C1ON_bit
0x0107       [0]    C1OE_bit
0x0108       [0]    C2OUT_bit
0x0108       [0]    C2ON_bit
0x0108       [1]    CM2CON0
0x0108       [0]    C2CH1_bit
0x0108       [0]    C2CH0_bit
0x0108       [0]    C2R_bit
0x0108       [0]    C2OE_bit
0x0108       [0]    C2POL_bit
0x0109       [0]    C2RSEL_bit
0x0109       [0]    T1GSS_bit
0x0109       [0]    C2SYNC_bit
0x0109       [1]    CM2CON1
0x0109       [0]    MC2OUT_bit
0x0109       [0]    MC1OUT_bit
0x0109       [0]    C1RSEL_bit
0x010C       [1]    EEDATA
0x010C       [1]    EEDAT
0x010D       [1]    EEADR
0x010E       [1]    EEDATH
0x010F       [1]    EEADRH
0x0110      [32]    _linija
0x0130      [20]    _getTime
0x0144       [2]    ___DoICPAddr
0x0146       [1]    FARG_EEPROM_Write_Address
0x0146       [1]    FARG_strcmp_s1
0x0146       [1]    FARG_strcpy_to
0x0147       [1]    FARG_strcmp_s2
0x0147       [1]    FARG_strcpy_from
0x0147       [1]    FARG_EEPROM_Write_data_
0x0148       [1]    Keypad_Key_Press_rslt_L0
0x0148       [1]    FARG_pecatiMin_q
0x0149       [2]    FARG_pecatiMin_p
0x0149       [1]    Keypad_Key_Press_kdata_L0
0x014A       [1]    Keypad_Key_Press_loc_L0
0x014B       [1]    Keypad_Key_Press_rowcnt_L0
0x014B       [1]    FARG_pecatiMin_red
0x014C       [1]    Keypad_Key_Press_shifter_L0
0x014D       [1]    FARG_Lcd_Out_row
0x014D       [1]    FARG_EEPROM_Read_Address
0x014D       [1]    FARG_TrimLeft_str
0x014D       [2]    FARG_WordToStr_input
0x014D       [1]    FARG_Lcd_Chr_row
0x014E       [1]    FARG_Lcd_Chr_column
0x014E       [1]    FARG_Lcd_Out_column
0x014E       [1]    TrimLeft_count_L0
0x014F       [1]    FARG_Lcd_Chr_out_char
0x014F       [1]    FARG_Lcd_Out_text
0x014F       [1]    FARG_WordToStr_output
0x0150       [1]    Lcd_Out_i_L0
0x0150       [1]    WordToStr_len_L0
0x0151       [1]    FLOC__WordToStr
0x0152       [1]    FARG_Lcd_Chr_CP_out_char
0x0153       [1]    FARG_Lcd_Cmd_out_char
0x0185       [1]    SRCON
0x0185       [0]    SR1_bit
0x0185       [0]    C2REN_bit
0x0185       [0]    C1SEN_bit
0x0185       [0]    PULSS_bit
0x0185       [0]    SR0_bit
0x0185       [0]    FVREN_bit
0x0185       [0]    PULSR_bit
0x0187       [0]    BRG16_bit
0x0187       [0]    SCKP_bit
0x0187       [0]    ABDOVF_bit
0x0187       [0]    ABDEN_bit
0x0187       [0]    WUE_bit
0x0187       [0]    RCIDL_bit
0x0187       [1]    BAUDCTL
0x0188       [0]    ANS0_bit
0x0188       [0]    ANS1_bit
0x0188       [1]    ANSEL
0x0188       [0]    ANS7_bit
0x0188       [0]    ANS4_bit
0x0188       [0]    ANS3_bit
0x0188       [0]    ANS5_bit
0x0188       [0]    ANS2_bit
0x0188       [0]    ANS6_bit
0x0189       [0]    ANS10_bit
0x0189       [0]    ANS9_bit
0x0189       [0]    ANS11_bit
0x0189       [0]    ANS13_bit
0x0189       [0]    ANS12_bit
0x0189       [0]    ANS8_bit
0x0189       [1]    ANSELH
0x018C       [0]    WREN_bit
0x018C       [0]    RD_bit
0x018C       [0]    WRERR_bit
0x018C       [0]    EEPGD_bit
0x018C       [1]    EECON1
0x018C       [0]    WR_bit
0x018D       [1]    EECON2
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0447       [2]    ?ICS_i
0x0449       [1]    ?ICS_typeUser
0x044A       [6]    ?ICS?lstr3_Seminarska
0x0450       [2]    ?ICS_tmp
0x0452       [6]    ?ICS?lstr2_Seminarska
0x0458       [1]    ?ICS_vreme
0x0459       [2]    ?ICS_min2Time
0x045B       [2]    ?ICS_temp
0x045D       [8]    ?ICS?lstr1_Seminarska
0x0465       [1]    ?ICS_flagTime
0x0466       [1]    ?ICS_flagVneseno
0x0467       [2]    ?ICS_min1Time
0x0469       [1]    ?ICS_min2Stanica
0x046A       [1]    ?ICS_min1Stanica
0x046B       [6]    ?ICS?lstr10_Seminarska
0x0471       [1]    ?ICS_saati
0x0472       [1]    ?ICS_j
0x0473       [1]    ?ICS_flagDveTocki
0x0474       [1]    ?ICS_minuti
0x0475       [5]    ?ICS?lstr11_Seminarska
0x047A       [1]    ?ICS_razlika
0x047B       [1]    ?ICS_sporedba
0x047C       [8]    ?ICS?lstr7_Seminarska
0x0484      [15]    ?ICS?lstr8_Seminarska
0x0493       [1]    ?ICS_countStanici
0x0494       [1]    ?ICS_flagUart
0x0495       [9]    ?ICS?lstr9_Seminarska
0x049E       [1]    ?ICS_brCifri
0x049F       [1]    ?ICS_flagPlus
0x04A0       [1]    ?ICS_pomestuvanje
0x04A1       [1]    ?ICS_flag3
0x04A2       [1]    ?ICS_kp
0x04A3       [1]    ?ICS_oldState
0x04A4       [2]    ?lstr_5_Seminarska
0x04A6       [2]    ?lstr_4_Seminarska
0x04A8       [2]    ?lstr_6_Seminarska
0x04AA       [2]    ?ICS_brStanici
//** Label List: ** 
//----------------------------------------------
  L_TrimLeft0
  L_TrimLeft1
  L_TrimLeft2
  L_pecatiMin3
  L_pecatiMin4
  L_pecatiMin5
  L_pecatiMin6
  L_pecatiMin7
  L_pecatiMin8
  L_pecatiMin9
  L_pecatiMin10
  L_pecatiMin11
  L_pecati12
  L_pecati13
  L_greska14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_main61
  L_main62
  L_main63
  L_main64
  L_main65
  L_main66
  L_main67
  L_main68
  L_main69
  L_main70
  L_main71
  L_main72
  L_main73
  L_main74
  L_main75
  L_main76
  L_main77
  L_main78
  L_main79
  L_main80
  L_main81
  L_main82
  L_main83
  L_main84
  L_main85
  L_main86
  L_main87
  L_main88
  L_main89
  L_main90
  L_main91
  L_main92
  L_main93
  L_main94
  L_main95
  L_main96
  L_main97
  L_main98
  L_main99
  L_main100
  L_main101
  L_main102
  L_main103
  L_main104
  L_main105
  L_main106
  L_main107
  L_main108
  L_main109
  L_main110
  L_main111
  L_main112
  L_main113
  L_main114
  L_main115
  L_main116
  L_main117
  L_main118
  L_main119
  L_main120
  L_main121
  L_main122
  L_main123
  L_main124
  L_main125
  L_main126
  L_main127
  L_main128
  L_main129
  L_main130
  L_main131
  L_main132
  L_main133
  L_main134
  L_main135
  L_main136
  L_main137
  L_main138
  L_main139
  L_main140
  L_main141
  L_main142
  L_main143
  L_main144
  L_main145
  L_main146
  L_main147
  L_main148
  L_main149
  L_main150
  L_main151
  L_main152
  L_main153
  L_main154
  L__pecatiMin155
  L__main156
  L__main157
  L__main158
  L__main159
  L__main160
  L__main161
  _TrimLeft
  _stavi
  _pecatiMin
  L__pecatiMin162
  L__pecatiMin163
  L__pecatiMin164
  L__pecatiMin165
  _pecati
  _greska
  _clear
  _main
  L__main166
  L__main167
  L__main168
  L__main169
  L__main170
  L__main171
  L__main172
  L__main173
  L__main174
  L__main175
  L__main176
  L__main177
  L__main178
  L__main179
  L__main180
  L__main181
  L__main182
  L__main183
  L__main184
  L__main185
  L__main186
  L__main187
  L__main188
  L__main189
  L__main190
  L__main191
  L__main192
  L__main193
  L_ADC_Read0
  L_ADC_Read1
  _ADC_Read
  L_ByteToStr0
  L_ByteToStr1
  L_ByteToStr2
  L_ByteToStr3
  L_ByteToStr4
  L_ByteToStr5
  L_WordToStr6
  L_WordToStr7
  L_WordToStr8
  L_WordToStr9
  L_WordToStr10
  L_WordToStr11
  L_ShortToStr12
  L_ShortToStr13
  L_ShortToStr14
  L_ShortToStr15
  L_ShortToStr16
  L_ShortToStr17
  L_IntToStr18
  L_IntToStr19
  L_IntToStr20
  L_IntToStr21
  L_IntToStr22
  L_IntToStr23
  L_LongWordToStr24
  L_LongWordToStr25
  L_LongWordToStr26
  L_LongWordToStr27
  L_LongWordToStr28
  L_LongWordToStr29
  L_LongToStr30
  L_LongToStr31
  L_LongToStr32
  L_LongToStr33
  L_LongToStr34
  L_LongToStr35
  L_Dec2Bcd36
  L_Dec2Bcd37
  L_rtrim38
  L_rtrim39
  L_FloatToStr40
  L_FloatToStr41
  L_FloatToStr42
  L_FloatToStr43
  L_FloatToStr44
  L_FloatToStr45
  L_FloatToStr46
  L_FloatToStr47
  L_FloatToStr48
  L_FloatToStr49
  L_FloatToStr50
  L_FloatToStr51
  L_FloatToStr52
  L_FloatToStr53
  L_FloatToStr54
  L_FloatToStr55
  L_FloatToStr56
  L_FloatToStr57
  L_FloatToStr58
  L_FloatToStr59
  L_FloatToStr60
  L_FloatToStr61
  L__FloatToStr62
  _ByteToStr
  _WordToStr
  L__WordToStr63
  _ShortToStr
  L__ShortToStr64
  _IntToStr
  L__IntToStr65
  L__IntToStr66
  _LongWordToStr
  L__LongWordToStr67
  L__LongWordToStr68
  _LongToStr
  L__LongToStr69
  L__LongToStr70
  _Dec2Bcd
  _Bcd2Dec16
  L__Bcd2Dec1671
  L__Bcd2Dec1672
  _Dec2Bcd16
  L__Dec2Bcd1673
  L__Dec2Bcd1674
  _rtrim
  _FloatToStr
  L__FloatToStr75
  L__FloatToStr76
  L__FloatToStr77
  L__FloatToStr78
  L__FloatToStr79
  L_memchr0
  L_memchr1
  L_memchr2
  L_memchr3
  L_memcmp4
  L_memcmp5
  L_memcmp6
  L_memcpy7
  L_memcpy8
  L_memmove9
  L_memmove10
  L_memmove11
  L_memmove12
  L_memmove13
  L_memmove14
  L_memmove15
  L_memmove16
  L_memmove17
  L_memmove18
  L_memmove19
  L_memset20
  L_memset21
  L_strcat22
  L_strcat23
  L_strcat24
  L_strcat25
  L_strchr26
  L_strchr27
  L_strchr28
  L_strchr29
  L_strcmp30
  L_strcmp31
  L_strcmp32
  L_strcmp33
  L_strcpy34
  L_strcpy35
  L_strlen36
  L_strlen37
  L_strncat38
  L_strncat39
  L_strncat40
  L_strncat41
  L_strncat42
  L_strncat43
  L_strncat44
  L_strncpy45
  L_strncpy46
  L_strncpy47
  L_strncpy48
  L_strncpy49
  L_strspn50
  L_strspn51
  L_strspn52
  L_strspn53
  L_strcspn54
  L_strcspn55
  L_strcspn56
  L_strcspn57
  L_strncmp58
  L_strncmp59
  L_strncmp60
  L_strncmp61
  L_strncmp62
  L_strpbrk63
  L_strpbrk64
  L_strpbrk65
  L_strrchr66
  L_strrchr67
  L_strrchr68
  L_strrchr69
  L_strstr70
  L_strstr71
  L_strstr72
  L_strstr73
  L_strstr74
  L_strtok75
  L_strtok76
  L_strtok77
  L_strtok78
  L_strtok79
  L__memmove80
  L__strcmp81
  L__strncat82
  L__strspn83
  L__strcspn84
  L__strncmp85
  L__strstr86
  _memchr
  _memcmp
  L__memcmp87
  _memcpy
  _memmove
  _memset
  _strcat
  _strchr
  _strcmp
  _strcpy
  _strlen
  _strncat
  L__strncat88
  _strncpy
  _strspn
  _strcspn
  _strncmp
  _strpbrk
  _strrchr
  _strstr
  L__strstr89
  _strtok
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_8ms6
  L_Delay_5ms7
  L_Delay_100ms8
  L_Delay_1sec9
  L_boot16_Delay_5ms10
  L_Delay_Cyc11
  L_Delay_Cyc12
  L_VDelay_ms13
  L_VDelay_ms14
  L_VDelay_ms15
  L_VDelay_Advanced_ms16
  L_VDelay_Advanced_ms17
  L_VDelay_Advanced_ms18
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_8ms
  _Delay_5ms
  _Delay_100ms
  _Delay_1sec
  _boot16_Delay_5ms
  _Delay_Cyc
  _VDelay_ms
  L__VDelay_ms19
  L__VDelay_ms20
  L__VDelay_ms21
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms22
  L__VDelay_Advanced_ms23
  L__VDelay_Advanced_ms24
  L_EEPROM_Write0
  L_EEPROM_Write1
  _EEPROM_Read
  _EEPROM_Write
  L__EEPROM_Write2
  L__EEPROM_Write3
  L_Keypad_Key_Press0
  L_Keypad_Key_Press1
  L_Keypad_Key_Press2
  L_Keypad_Key_Press3
  L_Keypad_Key_Press4
  L_Keypad_Key_Click5
  L_Keypad_Key_Click6
  _Keypad_Init
  _Keypad_Key_Press
  _Keypad_Key_Click
  L_Lcd_Cmd0
  L_Lcd_Cmd1
  L_Lcd_Out_CP2
  L_Lcd_Out_CP3
  L_Lcd_Chr4
  L_Lcd_Chr5
  L_Lcd_Chr6
  L_Lcd_Chr7
  L_Lcd_Chr8
  L_Lcd_Chr9
  L_Lcd_Chr10
  L_Lcd_Out11
  L_Lcd_Out12
  L_Lcd_Out13
  L_Lcd_Out14
  L_Lcd_Out15
  L_Lcd_Out16
  L_Lcd_Out17
  L_Lcd_Out18
  L_Lcd_Out19
  _Lcd_Cmd
  L__Lcd_Cmd20
  L__Lcd_Cmd21
  L__Lcd_Cmd22
  L__Lcd_Cmd23
  L__Lcd_Cmd24
  L__Lcd_Cmd25
  L__Lcd_Cmd26
  L__Lcd_Cmd27
  L__Lcd_Cmd28
  L__Lcd_Cmd29
  L__Lcd_Cmd30
  L__Lcd_Cmd31
  L__Lcd_Cmd32
  L__Lcd_Cmd33
  L__Lcd_Cmd34
  L__Lcd_Cmd35
  L__Lcd_Cmd36
  L__Lcd_Cmd37
  L__Lcd_Cmd38
  L__Lcd_Cmd39
  _Lcd_Chr_CP
  _Lcd_Out_CP
  _Lcd_Chr
  _Lcd_Init
  _Lcd_Out
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  _Mul_8x8_U
  _Mul_16x16_U
  _Div_8x8_U
  _Div_16x16_U
  _Mul_8x8_S
  _Mul_16x16_S
  _Div_16x16_S_L
  _Div_16x16_S
  _Div_8x8_S
  _SDIV3232L
  _COMFREM
  _Div_32x32_S
  _Div_32x32_U
  _Mul_32x32_U
  _Mul_32x32_S
  _CC2D_Loop1
  _____DoICP
  _____DoIFC
  ___CC2DW
  _Swap
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  _UART1_Init
  _UART1_Data_Ready
  _UART1_Read
  _UART1_Tx_Idle
  _UART1_Write
  _UART1_Write_Text
  _UART1_Read_Text
