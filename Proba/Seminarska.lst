;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 25-Feb-17 1:19:13 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2AF3      	GOTO       755
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0003	0x0000      	NOP
0x0004	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0005	0x0008      	RETURN
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0006	0x300F      	MOVLW      15
0x0007	0x1283      	BCF        STATUS, 5
0x0008	0x1303      	BCF        STATUS, 6
0x0009	0x00FC      	MOVWF      R12
0x000A	0x3047      	MOVLW      71
0x000B	0x00FD      	MOVWF      R13
L_Delay_5500us5:
0x000C	0x0BFD      	DECFSZ     R13, 1
0x000D	0x280C      	GOTO       L_Delay_5500us5
0x000E	0x0BFC      	DECFSZ     R12, 1
0x000F	0x280C      	GOTO       L_Delay_5500us5
0x0010	0x0000      	NOP
0x0011	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0012	0x0008      	RETURN
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0013	0x3021      	MOVLW      33
0x0014	0x1283      	BCF        STATUS, 5
0x0015	0x1303      	BCF        STATUS, 6
0x0016	0x00FD      	MOVWF      R13
L_Delay_50us2:
0x0017	0x0BFD      	DECFSZ     R13, 1
0x0018	0x2817      	GOTO       L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0019	0x0008      	RETURN
; end of _Delay_50us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x001A	0x1683      	BSF        STATUS, 5
0x001B	0x1303      	BCF        STATUS, 6
0x001C	0x1BE4      	BTFSC      FARG_Lcd_Cmd_out_char, 7
0x001D	0x2821      	GOTO       L__Lcd_Cmd21
0x001E	0x1283      	BCF        STATUS, 5
0x001F	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x0020	0x2823      	GOTO       L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0021	0x1283      	BCF        STATUS, 5
0x0022	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0023	0x1683      	BSF        STATUS, 5
0x0024	0x1B64      	BTFSC      FARG_Lcd_Cmd_out_char, 6
0x0025	0x2829      	GOTO       L__Lcd_Cmd23
0x0026	0x1283      	BCF        STATUS, 5
0x0027	0x1106      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x0028	0x282B      	GOTO       L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0029	0x1283      	BCF        STATUS, 5
0x002A	0x1506      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x002B	0x1683      	BSF        STATUS, 5
0x002C	0x1AE4      	BTFSC      FARG_Lcd_Cmd_out_char, 5
0x002D	0x2831      	GOTO       L__Lcd_Cmd25
0x002E	0x1283      	BCF        STATUS, 5
0x002F	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x0030	0x2833      	GOTO       L__Lcd_Cmd26
L__Lcd_Cmd25:
0x0031	0x1283      	BCF        STATUS, 5
0x0032	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x0033	0x1683      	BSF        STATUS, 5
0x0034	0x1A64      	BTFSC      FARG_Lcd_Cmd_out_char, 4
0x0035	0x2839      	GOTO       L__Lcd_Cmd27
0x0036	0x1283      	BCF        STATUS, 5
0x0037	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x0038	0x283B      	GOTO       L__Lcd_Cmd28
L__Lcd_Cmd27:
0x0039	0x1283      	BCF        STATUS, 5
0x003A	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x003B	0x1683      	BSF        STATUS, 5
0x003C	0x1858      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x003D	0x2841      	GOTO       L__Lcd_Cmd29
0x003E	0x1283      	BCF        STATUS, 5
0x003F	0x1606      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x0040	0x2843      	GOTO       L__Lcd_Cmd30
L__Lcd_Cmd29:
0x0041	0x1283      	BCF        STATUS, 5
0x0042	0x1206      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x0043	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,29 :: 		
0x0044	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x0045	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,33 :: 		
0x0046	0x1683      	BSF        STATUS, 5
0x0047	0x19E4      	BTFSC      FARG_Lcd_Cmd_out_char, 3
0x0048	0x284C      	GOTO       L__Lcd_Cmd31
0x0049	0x1283      	BCF        STATUS, 5
0x004A	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x004B	0x284E      	GOTO       L__Lcd_Cmd32
L__Lcd_Cmd31:
0x004C	0x1283      	BCF        STATUS, 5
0x004D	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x004E	0x1683      	BSF        STATUS, 5
0x004F	0x1964      	BTFSC      FARG_Lcd_Cmd_out_char, 2
0x0050	0x2854      	GOTO       L__Lcd_Cmd33
0x0051	0x1283      	BCF        STATUS, 5
0x0052	0x1106      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x0053	0x2856      	GOTO       L__Lcd_Cmd34
L__Lcd_Cmd33:
0x0054	0x1283      	BCF        STATUS, 5
0x0055	0x1506      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x0056	0x1683      	BSF        STATUS, 5
0x0057	0x18E4      	BTFSC      FARG_Lcd_Cmd_out_char, 1
0x0058	0x285C      	GOTO       L__Lcd_Cmd35
0x0059	0x1283      	BCF        STATUS, 5
0x005A	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x005B	0x285E      	GOTO       L__Lcd_Cmd36
L__Lcd_Cmd35:
0x005C	0x1283      	BCF        STATUS, 5
0x005D	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x005E	0x1683      	BSF        STATUS, 5
0x005F	0x1864      	BTFSC      FARG_Lcd_Cmd_out_char, 0
0x0060	0x2864      	GOTO       L__Lcd_Cmd37
0x0061	0x1283      	BCF        STATUS, 5
0x0062	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x0063	0x2866      	GOTO       L__Lcd_Cmd38
L__Lcd_Cmd37:
0x0064	0x1283      	BCF        STATUS, 5
0x0065	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x0066	0x1683      	BSF        STATUS, 5
0x0067	0x1858      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x0068	0x286C      	GOTO       L__Lcd_Cmd39
0x0069	0x1283      	BCF        STATUS, 5
0x006A	0x1606      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x006B	0x286E      	GOTO       L__Lcd_Cmd40
L__Lcd_Cmd39:
0x006C	0x1283      	BCF        STATUS, 5
0x006D	0x1206      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x006E	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,41 :: 		
0x006F	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x0070	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,44 :: 		
0x0071	0x1683      	BSF        STATUS, 5
0x0072	0x1C58      	BTFSS      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x0073	0x2876      	GOTO       L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x0074	0x2006      	CALL       _Delay_5500us
0x0075	0x2877      	GOTO       L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x0076	0x2013      	CALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x0077	0x0008      	RETURN
; end of _Lcd_Cmd
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x0078	0x1683      	BSF        STATUS, 5
0x0079	0x1303      	BCF        STATUS, 6
0x007A	0x1058      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,53 :: 		
0x007B	0x0863      	MOVF       FARG_Lcd_Chr_CP_out_char, 0
0x007C	0x00E4      	MOVWF      FARG_Lcd_Cmd_out_char
0x007D	0x201A      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x007E	0x1683      	BSF        STATUS, 5
0x007F	0x1458      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0080	0x0008      	RETURN
; end of _Lcd_Chr_CP
_Delay_10us:
;__Lib_Delays.c,11 :: 		void Delay_10us() {
;__Lib_Delays.c,12 :: 		Delay_us(10);
0x0081	0x3006      	MOVLW      6
0x0082	0x1283      	BCF        STATUS, 5
0x0083	0x1303      	BCF        STATUS, 6
0x0084	0x00FD      	MOVWF      R13
L_Delay_10us0:
0x0085	0x0BFD      	DECFSZ     R13, 1
0x0086	0x2885      	GOTO       L_Delay_10us0
0x0087	0x0000      	NOP
;__Lib_Delays.c,13 :: 		}
L_end_Delay_10us:
0x0088	0x0008      	RETURN
; end of _Delay_10us
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x0089	0x300E      	MOVLW      14
0x008A	0x1283      	BCF        STATUS, 5
0x008B	0x1303      	BCF        STATUS, 6
0x008C	0x00FD      	MOVWF      R13
L_Delay_22us1:
0x008D	0x0BFD      	DECFSZ     R13, 1
0x008E	0x288D      	GOTO       L_Delay_22us1
0x008F	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x0090	0x0008      	RETURN
; end of _Delay_22us
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x0091	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x0092	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x0093	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x0094	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x0095	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x0096	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x0097	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x0098	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x0099	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x009A	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x009B	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x009C	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x009D	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x009E	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x009F	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x00A0	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x00A1	0x28A9      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x00A2	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x00A3	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x00A4	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x00A5	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x00A6	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x00A7	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x00A8	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x00A9	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x00AA	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x00AB	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x00AC	0x2897      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x00AD	0x0008      	RETURN
; end of _Div_16X16_U
_Keypad_Key_Press:
;__Lib_Keypad4x4.c,38 :: 		
;__Lib_Keypad4x4.c,42 :: 		
0x00AE	0x1683      	BSF        STATUS, 5
0x00AF	0x1303      	BCF        STATUS, 6
0x00B0	0x01DE      	CLRF       Keypad_Key_Press_rslt_L0
;__Lib_Keypad4x4.c,43 :: 		
0x00B1	0x01E0      	CLRF       Keypad_Key_Press_loc_L0
;__Lib_Keypad4x4.c,44 :: 		
0x00B2	0x01E1      	CLRF       Keypad_Key_Press_rowcnt_L0
;__Lib_Keypad4x4.c,45 :: 		
0x00B3	0x3010      	MOVLW      16
0x00B4	0x00E2      	MOVWF      Keypad_Key_Press_shifter_L0
;__Lib_Keypad4x4.c,47 :: 		
L_Keypad_Key_Press0:
0x00B5	0x3004      	MOVLW      4
0x00B6	0x0261      	SUBWF      Keypad_Key_Press_rowcnt_L0, 0
0x00B7	0x1803      	BTFSC      STATUS, 0
0x00B8	0x28DC      	GOTO       L_Keypad_Key_Press1
;__Lib_Keypad4x4.c,49 :: 		
0x00B9	0x30F0      	MOVLW      240
0x00BA	0x1283      	BCF        STATUS, 5
0x00BB	0x0088      	MOVWF      keypadPort
;__Lib_Keypad4x4.c,50 :: 		
0x00BC	0x1683      	BSF        STATUS, 5
0x00BD	0x0962      	COMF       Keypad_Key_Press_shifter_L0, 0
0x00BE	0x0088      	MOVWF      keypadPort+128
;__Lib_Keypad4x4.c,54 :: 		
0x00BF	0x2003      	CALL       _Delay_1us
;__Lib_Keypad4x4.c,55 :: 		
0x00C0	0x2003      	CALL       _Delay_1us
;__Lib_Keypad4x4.c,56 :: 		
0x00C1	0x300F      	MOVLW      15
0x00C2	0x1283      	BCF        STATUS, 5
0x00C3	0x0508      	ANDWF      keypadPort, 0
0x00C4	0x00F0      	MOVWF      R0
0x00C5	0x0870      	MOVF       R0, 0
0x00C6	0x1683      	BSF        STATUS, 5
0x00C7	0x00DF      	MOVWF      Keypad_Key_Press_kdata_L0
;__Lib_Keypad4x4.c,57 :: 		
0x00C8	0x0870      	MOVF       R0, 0
0x00C9	0x1903      	BTFSC      STATUS, 2
0x00CA	0x28D6      	GOTO       L_Keypad_Key_Press2
;__Lib_Keypad4x4.c,59 :: 		
0x00CB	0x0860      	MOVF       Keypad_Key_Press_loc_L0, 0
0x00CC	0x00DE      	MOVWF      Keypad_Key_Press_rslt_L0
;__Lib_Keypad4x4.c,60 :: 		
L_Keypad_Key_Press3:
0x00CD	0x085F      	MOVF       Keypad_Key_Press_kdata_L0, 0
0x00CE	0x1903      	BTFSC      STATUS, 2
0x00CF	0x28D4      	GOTO       L_Keypad_Key_Press4
;__Lib_Keypad4x4.c,61 :: 		
0x00D0	0x0CDF      	RRF        Keypad_Key_Press_kdata_L0, 1
0x00D1	0x13DF      	BCF        Keypad_Key_Press_kdata_L0, 7
;__Lib_Keypad4x4.c,62 :: 		
0x00D2	0x0ADE      	INCF       Keypad_Key_Press_rslt_L0, 1
;__Lib_Keypad4x4.c,63 :: 		
0x00D3	0x28CD      	GOTO       L_Keypad_Key_Press3
L_Keypad_Key_Press4:
;__Lib_Keypad4x4.c,65 :: 		
0x00D4	0x3004      	MOVLW      4
0x00D5	0x00E1      	MOVWF      Keypad_Key_Press_rowcnt_L0
;__Lib_Keypad4x4.c,66 :: 		
L_Keypad_Key_Press2:
;__Lib_Keypad4x4.c,67 :: 		
0x00D6	0x0DE2      	RLF        Keypad_Key_Press_shifter_L0, 1
0x00D7	0x1062      	BCF        Keypad_Key_Press_shifter_L0, 0
;__Lib_Keypad4x4.c,68 :: 		
0x00D8	0x3004      	MOVLW      4
0x00D9	0x07E0      	ADDWF      Keypad_Key_Press_loc_L0, 1
;__Lib_Keypad4x4.c,69 :: 		
0x00DA	0x0AE1      	INCF       Keypad_Key_Press_rowcnt_L0, 1
;__Lib_Keypad4x4.c,70 :: 		
0x00DB	0x28B5      	GOTO       L_Keypad_Key_Press0
L_Keypad_Key_Press1:
;__Lib_Keypad4x4.c,72 :: 		
0x00DC	0x085E      	MOVF       Keypad_Key_Press_rslt_L0, 0
0x00DD	0x00F0      	MOVWF      R0
;__Lib_Keypad4x4.c,73 :: 		
L_end_Keypad_Key_Press:
0x00DE	0x0008      	RETURN
; end of _Keypad_Key_Press
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x00DF	0x1283      	BCF        STATUS, 5
0x00E0	0x1303      	BCF        STATUS, 6
0x00E1	0x086F      	MOVF       ___DoICPAddr+1, 0
0x00E2	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00E3	0x086E      	MOVF       ___DoICPAddr, 0
0x00E4	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x00E5	0x0008      	RETURN
; end of _____DoICP
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x00E6	0x28F8      	GOTO       L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x00E7	0x3080      	MOVLW      128
0x00E8	0x1683      	BSF        STATUS, 5
0x00E9	0x1303      	BCF        STATUS, 6
0x00EA	0x00DE      	MOVWF      FARG_Lcd_Out_row
0x00EB	0x290B      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x00EC	0x30C0      	MOVLW      192
0x00ED	0x00DE      	MOVWF      FARG_Lcd_Out_row
0x00EE	0x290B      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x00EF	0x3094      	MOVLW      148
0x00F0	0x00DE      	MOVWF      FARG_Lcd_Out_row
0x00F1	0x290B      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x00F2	0x30D4      	MOVLW      212
0x00F3	0x00DE      	MOVWF      FARG_Lcd_Out_row
0x00F4	0x290B      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x00F5	0x3080      	MOVLW      128
0x00F6	0x00DE      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,193 :: 		
0x00F7	0x290B      	GOTO       L_Lcd_Out12
L_Lcd_Out11:
0x00F8	0x1683      	BSF        STATUS, 5
0x00F9	0x1303      	BCF        STATUS, 6
0x00FA	0x085E      	MOVF       FARG_Lcd_Out_row, 0
0x00FB	0x3A01      	XORLW      1
0x00FC	0x1903      	BTFSC      STATUS, 2
0x00FD	0x28E7      	GOTO       L_Lcd_Out13
0x00FE	0x085E      	MOVF       FARG_Lcd_Out_row, 0
0x00FF	0x3A02      	XORLW      2
0x0100	0x1903      	BTFSC      STATUS, 2
0x0101	0x28EC      	GOTO       L_Lcd_Out14
0x0102	0x085E      	MOVF       FARG_Lcd_Out_row, 0
0x0103	0x3A03      	XORLW      3
0x0104	0x1903      	BTFSC      STATUS, 2
0x0105	0x28EF      	GOTO       L_Lcd_Out15
0x0106	0x085E      	MOVF       FARG_Lcd_Out_row, 0
0x0107	0x3A04      	XORLW      4
0x0108	0x1903      	BTFSC      STATUS, 2
0x0109	0x28F2      	GOTO       L_Lcd_Out16
0x010A	0x28F5      	GOTO       L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x010B	0x035F      	DECF       FARG_Lcd_Out_column, 0
0x010C	0x00F0      	MOVWF      R0
0x010D	0x085E      	MOVF       FARG_Lcd_Out_row, 0
0x010E	0x07F0      	ADDWF      R0, 1
0x010F	0x0870      	MOVF       R0, 0
0x0110	0x00DE      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x0111	0x0870      	MOVF       R0, 0
0x0112	0x00E4      	MOVWF      FARG_Lcd_Cmd_out_char
0x0113	0x201A      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x0114	0x1683      	BSF        STATUS, 5
0x0115	0x1058      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,198 :: 		
0x0116	0x01E1      	CLRF       Lcd_Out_i_L0
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x0117	0x0861      	MOVF       Lcd_Out_i_L0, 0
0x0118	0x0760      	ADDWF      FARG_Lcd_Out_text, 0
0x0119	0x0084      	MOVWF      FSR
0x011A	0x0800      	MOVF       INDF, 0
0x011B	0x1903      	BTFSC      STATUS, 2
0x011C	0x2925      	GOTO       L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x011D	0x0861      	MOVF       Lcd_Out_i_L0, 0
0x011E	0x0760      	ADDWF      FARG_Lcd_Out_text, 0
0x011F	0x0084      	MOVWF      FSR
0x0120	0x0800      	MOVF       INDF, 0
0x0121	0x00E3      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0122	0x2078      	CALL       _Lcd_Chr_CP
0x0123	0x0AE1      	INCF       Lcd_Out_i_L0, 1
0x0124	0x2917      	GOTO       L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x0125	0x1458      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x0126	0x0008      	RETURN
; end of _Lcd_Out
_clear:
;Seminarska.c,44 :: 		void clear(){
;Seminarska.c,45 :: 		oldState=kp=0;
0x0127	0x1283      	BCF        STATUS, 5
0x0128	0x1303      	BCF        STATUS, 6
0x0129	0x01AE      	CLRF       _kp
0x012A	0x01AF      	CLRF       _oldState
;Seminarska.c,46 :: 		brCifri = 0;
0x012B	0x01AD      	CLRF       _brCifri
;Seminarska.c,47 :: 		brStanici = 0;
0x012C	0x01A3      	CLRF       _brStanici
0x012D	0x01A4      	CLRF       _brStanici+1
;Seminarska.c,48 :: 		flagPlus = 0;
0x012E	0x01A2      	CLRF       _flagPlus
;Seminarska.c,49 :: 		flag3 = 0;
0x012F	0x01A1      	CLRF       _flag3
;Seminarska.c,50 :: 		}
L_end_clear:
0x0130	0x0008      	RETURN
; end of _clear
_strcpy:
;__Lib_CString.c,126 :: 		
;__Lib_CString.c,129 :: 		
0x0131	0x1683      	BSF        STATUS, 5
0x0132	0x1303      	BCF        STATUS, 6
0x0133	0x0859      	MOVF       FARG_strcpy_to, 0
0x0134	0x00F2      	MOVWF      R2
;__Lib_CString.c,130 :: 		
L_strcpy34:
0x0135	0x0872      	MOVF       R2, 0
0x0136	0x00F1      	MOVWF      R1
0x0137	0x0AF2      	INCF       R2, 1
0x0138	0x085A      	MOVF       FARG_strcpy_from, 0
0x0139	0x00F0      	MOVWF      R0
0x013A	0x0ADA      	INCF       FARG_strcpy_from, 1
0x013B	0x0870      	MOVF       R0, 0
0x013C	0x0084      	MOVWF      FSR
0x013D	0x0800      	MOVF       INDF, 0
0x013E	0x00F0      	MOVWF      R0
0x013F	0x0871      	MOVF       R1, 0
0x0140	0x0084      	MOVWF      FSR
0x0141	0x0870      	MOVF       R0, 0
0x0142	0x0080      	MOVWF      INDF
0x0143	0x0871      	MOVF       R1, 0
0x0144	0x0084      	MOVWF      FSR
0x0145	0x0800      	MOVF       INDF, 0
0x0146	0x1903      	BTFSC      STATUS, 2
0x0147	0x2949      	GOTO       L_strcpy35
;__Lib_CString.c,131 :: 		
0x0148	0x2935      	GOTO       L_strcpy34
L_strcpy35:
;__Lib_CString.c,132 :: 		
0x0149	0x0859      	MOVF       FARG_strcpy_to, 0
0x014A	0x00F0      	MOVWF      R0
;__Lib_CString.c,133 :: 		
L_end_strcpy:
0x014B	0x0008      	RETURN
; end of _strcpy
_WordToStr:
;__Lib_Conversions.c,84 :: 		
;__Lib_Conversions.c,89 :: 		
0x014C	0x1683      	BSF        STATUS, 5
0x014D	0x1303      	BCF        STATUS, 6
0x014E	0x01DC      	CLRF       WordToStr_len_L0
L_WordToStr6:
0x014F	0x3005      	MOVLW      5
0x0150	0x025C      	SUBWF      WordToStr_len_L0, 0
0x0151	0x1803      	BTFSC      STATUS, 0
0x0152	0x295A      	GOTO       L_WordToStr7
;__Lib_Conversions.c,90 :: 		
0x0153	0x085C      	MOVF       WordToStr_len_L0, 0
0x0154	0x075B      	ADDWF      FARG_WordToStr_output, 0
0x0155	0x0084      	MOVWF      FSR
0x0156	0x3020      	MOVLW      32
0x0157	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,89 :: 		
0x0158	0x0ADC      	INCF       WordToStr_len_L0, 1
;__Lib_Conversions.c,90 :: 		
0x0159	0x294F      	GOTO       L_WordToStr6
L_WordToStr7:
;__Lib_Conversions.c,91 :: 		
0x015A	0x085C      	MOVF       WordToStr_len_L0, 0
0x015B	0x075B      	ADDWF      FARG_WordToStr_output, 0
0x015C	0x0084      	MOVWF      FSR
0x015D	0x0180      	CLRF       INDF
0x015E	0x03DC      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,93 :: 		
L_WordToStr9:
;__Lib_Conversions.c,94 :: 		
0x015F	0x085C      	MOVF       WordToStr_len_L0, 0
0x0160	0x075B      	ADDWF      FARG_WordToStr_output, 0
0x0161	0x00DD      	MOVWF      FLOC__WordToStr
0x0162	0x300A      	MOVLW      10
0x0163	0x00F4      	MOVWF      R4
0x0164	0x01F5      	CLRF       R4+1
0x0165	0x0859      	MOVF       FARG_WordToStr_input, 0
0x0166	0x00F0      	MOVWF      R0
0x0167	0x085A      	MOVF       FARG_WordToStr_input+1, 0
0x0168	0x00F1      	MOVWF      R0+1
0x0169	0x2091      	CALL       _Div_16X16_U
0x016A	0x0878      	MOVF       R8, 0
0x016B	0x00F0      	MOVWF      R0
0x016C	0x0879      	MOVF       R8+1, 0
0x016D	0x00F1      	MOVWF      R0+1
0x016E	0x3030      	MOVLW      48
0x016F	0x07F0      	ADDWF      R0, 1
0x0170	0x1683      	BSF        STATUS, 5
0x0171	0x085D      	MOVF       FLOC__WordToStr, 0
0x0172	0x0084      	MOVWF      FSR
0x0173	0x0870      	MOVF       R0, 0
0x0174	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,95 :: 		
0x0175	0x300A      	MOVLW      10
0x0176	0x00F4      	MOVWF      R4
0x0177	0x01F5      	CLRF       R4+1
0x0178	0x0859      	MOVF       FARG_WordToStr_input, 0
0x0179	0x00F0      	MOVWF      R0
0x017A	0x085A      	MOVF       FARG_WordToStr_input+1, 0
0x017B	0x00F1      	MOVWF      R0+1
0x017C	0x2091      	CALL       _Div_16X16_U
0x017D	0x0870      	MOVF       R0, 0
0x017E	0x1683      	BSF        STATUS, 5
0x017F	0x00D9      	MOVWF      FARG_WordToStr_input
0x0180	0x0871      	MOVF       R0+1, 0
0x0181	0x00DA      	MOVWF      FARG_WordToStr_input+1
;__Lib_Conversions.c,96 :: 		
0x0182	0x3000      	MOVLW      0
0x0183	0x0671      	XORWF      R0+1, 0
0x0184	0x1D03      	BTFSS      STATUS, 2
0x0185	0x2988      	GOTO       L__WordToStr109
0x0186	0x3000      	MOVLW      0
0x0187	0x0670      	XORWF      R0, 0
L__WordToStr109:
0x0188	0x1D03      	BTFSS      STATUS, 2
0x0189	0x298B      	GOTO       L_WordToStr11
;__Lib_Conversions.c,97 :: 		
0x018A	0x298D      	GOTO       L_WordToStr10
L_WordToStr11:
;__Lib_Conversions.c,98 :: 		
0x018B	0x03DC      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,99 :: 		
0x018C	0x295F      	GOTO       L_WordToStr9
L_WordToStr10:
;__Lib_Conversions.c,100 :: 		
L_end_WordToStr:
0x018D	0x0008      	RETURN
; end of _WordToStr
_UART1_Read:
;__Lib_UART_c67.c,21 :: 		
;__Lib_UART_c67.c,24 :: 		
0x018E	0x1283      	BCF        STATUS, 5
0x018F	0x1303      	BCF        STATUS, 6
0x0190	0x081A      	MOVF       RCREG, 0
0x0191	0x00F1      	MOVWF      R1
;__Lib_UART_c67.c,25 :: 		
0x0192	0x1C98      	BTFSS      RCSTA, 1
0x0193	0x2996      	GOTO       L_UART1_Read2
;__Lib_UART_c67.c,26 :: 		
0x0194	0x1218      	BCF        RCSTA, 4
;__Lib_UART_c67.c,27 :: 		
0x0195	0x1618      	BSF        RCSTA, 4
;__Lib_UART_c67.c,28 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,29 :: 		
0x0196	0x0871      	MOVF       R1, 0
0x0197	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Read:
0x0198	0x0008      	RETURN
; end of _UART1_Read
_Mul_16X16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x0199	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x019A	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x019B	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x019C	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x019D	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x019E	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x019F	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x01A0	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x01A1	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x01A2	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x01A3	0x29AD      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x01A4	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x01A5	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x01A6	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x01A7	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x01A8	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x01A9	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x01AA	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x01AB	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x01AC	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x01AD	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x01AE	0x29B5      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x01AF	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x01B0	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x01B1	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x01B2	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x01B3	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x01B4	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x01B5	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x01B6	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x01B7	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x01B8	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x01B9	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x01BA	0x29A0      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x01BB	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x01BC	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x01BD	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x01BE	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x01BF	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x01C0	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x01C1	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x01C2	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
L_end_Mul_16X16_U:
0x01C3	0x0008      	RETURN
; end of _Mul_16X16_U
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x01C4	0x1683      	BSF        STATUS, 5
0x01C5	0x1303      	BCF        STATUS, 6
0x01C6	0x1286      	BCF        LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,87 :: 		
0x01C7	0x1206      	BCF        LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,88 :: 		
0x01C8	0x1006      	BCF        LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,89 :: 		
0x01C9	0x1086      	BCF        LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,90 :: 		
0x01CA	0x1106      	BCF        LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,91 :: 		
0x01CB	0x1186      	BCF        LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,93 :: 		
0x01CC	0x1283      	BCF        STATUS, 5
0x01CD	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,94 :: 		
0x01CE	0x1206      	BCF        LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,95 :: 		
0x01CF	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,96 :: 		
0x01D0	0x1106      	BCF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,97 :: 		
0x01D1	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,98 :: 		
0x01D2	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,100 :: 		
0x01D3	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x01D4	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x01D5	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x01D6	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,106 :: 		
0x01D7	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,107 :: 		
0x01D8	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,108 :: 		
0x01D9	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x01DA	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,110 :: 		
0x01DB	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x01DC	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,113 :: 		
0x01DD	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x01DE	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,115 :: 		
0x01DF	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x01E0	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,118 :: 		
0x01E1	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x01E2	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,120 :: 		
0x01E3	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x01E4	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,124 :: 		
0x01E5	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,125 :: 		
0x01E6	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x01E7	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,127 :: 		
0x01E8	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x01E9	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,131 :: 		
0x01EA	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x01EB	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,134 :: 		
0x01EC	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,135 :: 		
0x01ED	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,136 :: 		
0x01EE	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,137 :: 		
0x01EF	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x01F0	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,139 :: 		
0x01F1	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x01F2	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,143 :: 		
0x01F3	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,144 :: 		
0x01F4	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,145 :: 		
0x01F5	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x01F6	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,148 :: 		
0x01F7	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,149 :: 		
0x01F8	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,150 :: 		
0x01F9	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x01FA	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,152 :: 		
0x01FB	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x01FC	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,156 :: 		
0x01FD	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x01FE	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,159 :: 		
0x01FF	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,160 :: 		
0x0200	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,161 :: 		
0x0201	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x0202	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,163 :: 		
0x0203	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x0204	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,167 :: 		
0x0205	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,168 :: 		
0x0206	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x0207	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,171 :: 		
0x0208	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,172 :: 		
0x0209	0x1506      	BSF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,173 :: 		
0x020A	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,174 :: 		
0x020B	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,175 :: 		
0x020C	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,176 :: 		
0x020D	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x020E	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,179 :: 		
0x020F	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x0210	0x1683      	BSF        STATUS, 5
0x0211	0x1458      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x0212	0x0008      	RETURN
; end of _Lcd_Init
_EEPROM_Write:
;__Lib_EEPROM.c,16 :: 		
;__Lib_EEPROM.c,20 :: 		
L_EEPROM_Write0:
0x0213	0x1683      	BSF        STATUS, 5
0x0214	0x1703      	BSF        STATUS, 6
0x0215	0x1C8C      	BTFSS      EECON1, 1
0x0216	0x2A19      	GOTO       L_EEPROM_Write1
0x0217	0x0000      	NOP
0x0218	0x2A13      	GOTO       L_EEPROM_Write0
L_EEPROM_Write1:
;__Lib_EEPROM.c,21 :: 		
0x0219	0x1303      	BCF        STATUS, 6
0x021A	0x0859      	MOVF       FARG_EEPROM_Write_Address, 0
0x021B	0x1283      	BCF        STATUS, 5
0x021C	0x1703      	BSF        STATUS, 6
0x021D	0x008D      	MOVWF      EEADR
;__Lib_EEPROM.c,22 :: 		
0x021E	0x1683      	BSF        STATUS, 5
0x021F	0x1303      	BCF        STATUS, 6
0x0220	0x085A      	MOVF       FARG_EEPROM_Write_data_, 0
0x0221	0x1283      	BCF        STATUS, 5
0x0222	0x1703      	BSF        STATUS, 6
0x0223	0x008C      	MOVWF      EEDATA
;__Lib_EEPROM.c,23 :: 		
0x0224	0x1683      	BSF        STATUS, 5
0x0225	0x138C      	BCF        EECON1, 7
;__Lib_EEPROM.c,24 :: 		
0x0226	0x150C      	BSF        EECON1, 2
;__Lib_EEPROM.c,26 :: 		
0x0227	0x080B      	MOVF       INTCON, 0
0x0228	0x00F0      	MOVWF      R0
;__Lib_EEPROM.c,29 :: 		
0x0229	0x138B      	BCF        INTCON, 7
;__Lib_EEPROM.c,30 :: 		
0x022A	0x3055      	MOVLW      85
0x022B	0x008D      	MOVWF      EECON2
;__Lib_EEPROM.c,31 :: 		
0x022C	0x30AA      	MOVLW      170
0x022D	0x008D      	MOVWF      EECON2
;__Lib_EEPROM.c,32 :: 		
0x022E	0x148C      	BSF        EECON1, 1
;__Lib_EEPROM.c,36 :: 		
0x022F	0x1BF0      	BTFSC      R0, 7
0x0230	0x2A33      	GOTO       L__EEPROM_Write4
0x0231	0x138B      	BCF        INTCON, 7
0x0232	0x2A34      	GOTO       L__EEPROM_Write5
L__EEPROM_Write4:
0x0233	0x178B      	BSF        INTCON, 7
L__EEPROM_Write5:
;__Lib_EEPROM.c,37 :: 		
0x0234	0x110C      	BCF        EECON1, 2
;__Lib_EEPROM.c,38 :: 		
L_end_EEPROM_Write:
0x0235	0x0008      	RETURN
; end of _EEPROM_Write
_greska:
;Seminarska.c,33 :: 		void greska(){
;Seminarska.c,34 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0236	0x3001      	MOVLW      1
0x0237	0x1683      	BSF        STATUS, 5
0x0238	0x1303      	BCF        STATUS, 6
0x0239	0x00E4      	MOVWF      FARG_Lcd_Cmd_out_char
0x023A	0x201A      	CALL       _Lcd_Cmd
;Seminarska.c,35 :: 		Lcd_Out(1,1, "Greshka");
0x023B	0x3001      	MOVLW      1
0x023C	0x1683      	BSF        STATUS, 5
0x023D	0x00DE      	MOVWF      FARG_Lcd_Out_row
0x023E	0x3001      	MOVLW      1
0x023F	0x00DF      	MOVWF      FARG_Lcd_Out_column
0x0240	0x3025      	MOVLW      ?lstr1_Seminarska
0x0241	0x00E0      	MOVWF      FARG_Lcd_Out_text
0x0242	0x20E6      	CALL       _Lcd_Out
;Seminarska.c,36 :: 		Delay_ms(10);
0x0243	0x301A      	MOVLW      26
0x0244	0x00FC      	MOVWF      R12
0x0245	0x30F8      	MOVLW      248
0x0246	0x00FD      	MOVWF      R13
L_greska0:
0x0247	0x0BFD      	DECFSZ     R13, 1
0x0248	0x2A47      	GOTO       L_greska0
0x0249	0x0BFC      	DECFSZ     R12, 1
0x024A	0x2A47      	GOTO       L_greska0
0x024B	0x0000      	NOP
;Seminarska.c,37 :: 		oldState=kp=0;
0x024C	0x1283      	BCF        STATUS, 5
0x024D	0x01AE      	CLRF       _kp
0x024E	0x01AF      	CLRF       _oldState
;Seminarska.c,38 :: 		brCifri = 0;
0x024F	0x01AD      	CLRF       _brCifri
;Seminarska.c,39 :: 		brStanici = 0;
0x0250	0x01A3      	CLRF       _brStanici
0x0251	0x01A4      	CLRF       _brStanici+1
;Seminarska.c,40 :: 		flagPlus = 0;
0x0252	0x01A2      	CLRF       _flagPlus
;Seminarska.c,41 :: 		flag3 = 0;
0x0253	0x01A1      	CLRF       _flag3
;Seminarska.c,42 :: 		}
L_end_greska:
0x0254	0x0008      	RETURN
; end of _greska
_ADC_Read:
;__Lib_ADC_88X.c,55 :: 		
;__Lib_ADC_88X.c,57 :: 		
0x0255	0x30C3      	MOVLW      195
0x0256	0x1283      	BCF        STATUS, 5
0x0257	0x1303      	BCF        STATUS, 6
0x0258	0x059F      	ANDWF      ADCON0, 1
;__Lib_ADC_88X.c,61 :: 		
0x0259	0x30C0      	MOVLW      192
0x025A	0x009F      	MOVWF      ADCON0
;__Lib_ADC_88X.c,62 :: 		
0x025B	0x1683      	BSF        STATUS, 5
0x025C	0x0859      	MOVF       FARG_ADC_Read_channel, 0
0x025D	0x00F0      	MOVWF      R0
0x025E	0x0DF0      	RLF        R0, 1
0x025F	0x1070      	BCF        R0, 0
0x0260	0x0DF0      	RLF        R0, 1
0x0261	0x1070      	BCF        R0, 0
0x0262	0x0870      	MOVF       R0, 0
0x0263	0x1283      	BCF        STATUS, 5
0x0264	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_88X.c,63 :: 		
0x0265	0x1683      	BSF        STATUS, 5
0x0266	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_88X.c,66 :: 		
0x0267	0x1283      	BCF        STATUS, 5
0x0268	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_88X.c,69 :: 		
0x0269	0x2089      	CALL       _Delay_22us
;__Lib_ADC_88X.c,72 :: 		
0x026A	0x149F      	BSF        ADCON0, 1
;__Lib_ADC_88X.c,75 :: 		
L_ADC_Read2:
0x026B	0x1C9F      	BTFSS      ADCON0, 1
0x026C	0x2A6F      	GOTO       L_ADC_Read3
;__Lib_ADC_88X.c,76 :: 		
0x026D	0x0000      	NOP
0x026E	0x2A6B      	GOTO       L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_88X.c,79 :: 		
0x026F	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_88X.c,82 :: 		
0x0270	0x081E      	MOVF       ADRESH, 0
0x0271	0x00F1      	MOVWF      R0+1
0x0272	0x01F0      	CLRF       R0
0x0273	0x1683      	BSF        STATUS, 5
0x0274	0x081E      	MOVF       ADRESL, 0
0x0275	0x04F0      	IORWF      R0, 1
0x0276	0x3000      	MOVLW      0
0x0277	0x04F1      	IORWF      R0+1, 1
;__Lib_ADC_88X.c,83 :: 		
L_end_ADC_Read:
0x0278	0x0008      	RETURN
; end of _ADC_Read
_UART1_Write:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,40 :: 		
L_UART1_Write3:
0x0279	0x1683      	BSF        STATUS, 5
0x027A	0x1303      	BCF        STATUS, 6
0x027B	0x1898      	BTFSC      TXSTA, 1
0x027C	0x2A7F      	GOTO       L_UART1_Write4
;__Lib_UART_c67.c,41 :: 		
0x027D	0x0000      	NOP
0x027E	0x2A79      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,42 :: 		
0x027F	0x0859      	MOVF       FARG_UART1_Write_data_, 0
0x0280	0x1283      	BCF        STATUS, 5
0x0281	0x0099      	MOVWF      TXREG
;__Lib_UART_c67.c,43 :: 		
L_end_UART1_Write:
0x0282	0x0008      	RETURN
; end of _UART1_Write
_EEPROM_Read:
;__Lib_EEPROM.c,4 :: 		
;__Lib_EEPROM.c,5 :: 		
0x0283	0x1683      	BSF        STATUS, 5
0x0284	0x1303      	BCF        STATUS, 6
0x0285	0x0859      	MOVF       FARG_EEPROM_Read_Address, 0
0x0286	0x1283      	BCF        STATUS, 5
0x0287	0x1703      	BSF        STATUS, 6
0x0288	0x008D      	MOVWF      EEADR
;__Lib_EEPROM.c,6 :: 		
0x0289	0x1683      	BSF        STATUS, 5
0x028A	0x138C      	BCF        EECON1, 7
;__Lib_EEPROM.c,12 :: 		
0x028B	0x140C      	BSF        EECON1, 0
;__Lib_EEPROM.c,13 :: 		
0x028C	0x1283      	BCF        STATUS, 5
0x028D	0x080C      	MOVF       EEDATA, 0
0x028E	0x00F0      	MOVWF      R0
;__Lib_EEPROM.c,14 :: 		
L_end_EEPROM_Read:
0x028F	0x0008      	RETURN
; end of _EEPROM_Read
_UART1_Data_Ready:
;__Lib_UART_c67.c,16 :: 		
;__Lib_UART_c67.c,17 :: 		
0x0290	0x3000      	MOVLW      0
0x0291	0x1283      	BCF        STATUS, 5
0x0292	0x1303      	BCF        STATUS, 6
0x0293	0x1A8C      	BTFSC      PIR1, 5
0x0294	0x3001      	MOVLW      1
0x0295	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,18 :: 		
L_end_UART1_Data_Ready:
0x0296	0x0008      	RETURN
; end of _UART1_Data_Ready
_Mul_8X8_U:
;__Lib_Math.c,103 :: 		
;__Lib_Math.c,108 :: 		
0x0297	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,109 :: 		
0x0298	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,110 :: 		
0x0299	0x0870      	MOVF       R0, 0
;__Lib_Math.c,111 :: 		
0x029A	0x00F1      	MOVWF      R1
;__Lib_Math.c,112 :: 		
0x029B	0x01F0      	CLRF       R0
;__Lib_Math.c,113 :: 		
0x029C	0x3008      	MOVLW      8
;__Lib_Math.c,114 :: 		
0x029D	0x00FC      	MOVWF      R12
;__Lib_Math.c,115 :: 		
0x029E	0x0871      	MOVF       R1, 0
;__Lib_Math.c,116 :: 		
0x029F	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,117 :: 		
0x02A0	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,118 :: 		
0x02A1	0x2AA6      	GOTO       $+5
;__Lib_Math.c,119 :: 		
0x02A2	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,120 :: 		
0x02A3	0x2A9F      	GOTO       $-4
;__Lib_Math.c,121 :: 		
0x02A4	0x01F1      	CLRF       R1
;__Lib_Math.c,122 :: 		
0x02A5	0x3400      	RETLW      0
;__Lib_Math.c,123 :: 		
0x02A6	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,124 :: 		
0x02A7	0x2AAB      	GOTO       $+4
;__Lib_Math.c,125 :: 		
0x02A8	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,126 :: 		
0x02A9	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,127 :: 		
0x02AA	0x07F1      	ADDWF      R1, 1
;__Lib_Math.c,128 :: 		
0x02AB	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,129 :: 		
0x02AC	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,130 :: 		
0x02AD	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,131 :: 		
0x02AE	0x2AA8      	GOTO       $-6
;__Lib_Math.c,133 :: 		
;__Lib_Math.c,134 :: 		
L_end_Mul_8X8_U:
0x02AF	0x0008      	RETURN
; end of _Mul_8X8_U
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x02B0	0x20DF      	CALL       _____DoICP
0x02B1	0x118A      	BCF        PCLATH, 3
0x02B2	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x02B3	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x02B4	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x02B5	0x0AEE      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x02B6	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x02B7	0x0AEF      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x02B8	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x02B9	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x02BA	0x2AB0      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x02BB	0x0008      	RETURN
; end of ___CC2DW
_Keypad_Key_Click:
;__Lib_Keypad4x4.c,76 :: 		
;__Lib_Keypad4x4.c,80 :: 		
0x02BC	0x20AE      	CALL       _Keypad_Key_Press
0x02BD	0x0870      	MOVF       R0, 0
0x02BE	0x00D9      	MOVWF      Keypad_Key_Click_rslt_L0
;__Lib_Keypad4x4.c,82 :: 		
L_Keypad_Key_Click5:
0x02BF	0x300F      	MOVLW      15
0x02C0	0x1283      	BCF        STATUS, 5
0x02C1	0x0508      	ANDWF      keypadPort, 0
0x02C2	0x00F0      	MOVWF      R0
0x02C3	0x1903      	BTFSC      STATUS, 2
0x02C4	0x2AC7      	GOTO       L_Keypad_Key_Click6
;__Lib_Keypad4x4.c,83 :: 		
0x02C5	0x2081      	CALL       _Delay_10us
0x02C6	0x2ABF      	GOTO       L_Keypad_Key_Click5
L_Keypad_Key_Click6:
;__Lib_Keypad4x4.c,85 :: 		
0x02C7	0x1683      	BSF        STATUS, 5
0x02C8	0x0859      	MOVF       Keypad_Key_Click_rslt_L0, 0
0x02C9	0x00F0      	MOVWF      R0
;__Lib_Keypad4x4.c,86 :: 		
L_end_Keypad_Key_Click:
0x02CA	0x0008      	RETURN
; end of _Keypad_Key_Click
_Keypad_Init:
;__Lib_Keypad4x4.c,33 :: 		
;__Lib_Keypad4x4.c,34 :: 		
0x02CB	0x30FF      	MOVLW      255
0x02CC	0x1683      	BSF        STATUS, 5
0x02CD	0x1303      	BCF        STATUS, 6
0x02CE	0x0088      	MOVWF      keypadPort+128
;__Lib_Keypad4x4.c,35 :: 		
L_end_Keypad_Init:
0x02CF	0x0008      	RETURN
; end of _Keypad_Init
_ADC_Init:
;__Lib_ADC_88X.c,11 :: 		
;__Lib_ADC_88X.c,12 :: 		
0x02D0	0x30FF      	MOVLW      _ADC_Get_Sample
0x02D1	0x1683      	BSF        STATUS, 5
0x02D2	0x1303      	BCF        STATUS, 6
0x02D3	0x00B4      	MOVWF      _ADC_Get_Sample_Ptr
0x02D4	0x30FF      	MOVLW      hi_addr(_ADC_Get_Sample)
0x02D5	0x00B5      	MOVWF      _ADC_Get_Sample_Ptr+1
0x02D6	0x30FF      	MOVLW      FARG_ADC_Get_Sample_channel
0x02D7	0x00B6      	MOVWF      _ADC_Get_Sample_Ptr+2
0x02D8	0x30FF      	MOVLW      hi_addr(FARG_ADC_Get_Sample_channel)
;__Lib_ADC_88X.c,14 :: 		
0x02D9	0x30C3      	MOVLW      195
0x02DA	0x1283      	BCF        STATUS, 5
0x02DB	0x059F      	ANDWF      ADCON0, 1
;__Lib_ADC_88X.c,18 :: 		
0x02DC	0x30C0      	MOVLW      192
0x02DD	0x009F      	MOVWF      ADCON0
;__Lib_ADC_88X.c,19 :: 		
0x02DE	0x1683      	BSF        STATUS, 5
0x02DF	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_88X.c,22 :: 		
0x02E0	0x1283      	BCF        STATUS, 5
0x02E1	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_88X.c,23 :: 		
L_end_ADC_Init:
0x02E2	0x0008      	RETURN
; end of _ADC_Init
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x02E3	0x1683      	BSF        STATUS, 5
0x02E4	0x1303      	BCF        STATUS, 6
0x02E5	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x02E6	0x3090      	MOVLW      144
0x02E7	0x1283      	BCF        STATUS, 5
0x02E8	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x02E9	0x1683      	BSF        STATUS, 5
0x02EA	0x1787      	BSF        TRISC7_bit, BitPos(TRISC7_bit+0)
;__Lib_UART_c67.c,8 :: 		
0x02EB	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x02EC	0x1283      	BCF        STATUS, 5
0x02ED	0x1E8C      	BTFSS      PIR1, 5
0x02EE	0x2AF2      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x02EF	0x081A      	MOVF       RCREG, 0
0x02F0	0x00F0      	MOVWF      R0
0x02F1	0x2AEC      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x02F2	0x0008      	RETURN
; end of _UART1_Init
_main:
0x02F3	0x274A      	CALL       1866
;Seminarska.c,52 :: 		void main() {
;Seminarska.c,53 :: 		Keypad_Init();
0x02F4	0x22CB      	CALL       _Keypad_Init
;Seminarska.c,54 :: 		ANSEL = 0x80;
0x02F5	0x3080      	MOVLW      128
0x02F6	0x1703      	BSF        STATUS, 6
0x02F7	0x0088      	MOVWF      ANSEL
;Seminarska.c,55 :: 		ANSELH = 0;
0x02F8	0x0189      	CLRF       ANSELH
;Seminarska.c,56 :: 		TRISA = 0xFF;
0x02F9	0x30FF      	MOVLW      255
0x02FA	0x1303      	BCF        STATUS, 6
0x02FB	0x0085      	MOVWF      TRISA
;Seminarska.c,57 :: 		Lcd_Init();
0x02FC	0x21C4      	CALL       _Lcd_Init
;Seminarska.c,58 :: 		Lcd_Cmd(_LCD_Clear);
0x02FD	0x3001      	MOVLW      1
0x02FE	0x00E4      	MOVWF      FARG_Lcd_Cmd_out_char
0x02FF	0x201A      	CALL       _Lcd_Cmd
;Seminarska.c,59 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);
0x0300	0x300C      	MOVLW      12
0x0301	0x1683      	BSF        STATUS, 5
0x0302	0x00E4      	MOVWF      FARG_Lcd_Cmd_out_char
0x0303	0x201A      	CALL       _Lcd_Cmd
;Seminarska.c,60 :: 		ADC_Init();
0x0304	0x22D0      	CALL       _ADC_Init
;Seminarska.c,61 :: 		typeUser = ADC_Read(7);
0x0305	0x3007      	MOVLW      7
0x0306	0x1683      	BSF        STATUS, 5
0x0307	0x00D9      	MOVWF      FARG_ADC_Read_channel
0x0308	0x2255      	CALL       _ADC_Read
0x0309	0x0870      	MOVF       R0, 0
0x030A	0x1283      	BCF        STATUS, 5
0x030B	0x00A0      	MOVWF      _typeUser
;Seminarska.c,62 :: 		WordToStr(typeUser, txt);
0x030C	0x0870      	MOVF       R0, 0
0x030D	0x1683      	BSF        STATUS, 5
0x030E	0x00D9      	MOVWF      FARG_WordToStr_input
0x030F	0x3000      	MOVLW      0
0x0310	0x1BD9      	BTFSC      FARG_WordToStr_input, 7
0x0311	0x30FF      	MOVLW      255
0x0312	0x00DA      	MOVWF      FARG_WordToStr_input+1
0x0313	0x30A0      	MOVLW      _txt
0x0314	0x00DB      	MOVWF      FARG_WordToStr_output
0x0315	0x214C      	CALL       _WordToStr
;Seminarska.c,63 :: 		Lcd_Out(1,1, txt);
0x0316	0x3001      	MOVLW      1
0x0317	0x00DE      	MOVWF      FARG_Lcd_Out_row
0x0318	0x3001      	MOVLW      1
0x0319	0x00DF      	MOVWF      FARG_Lcd_Out_column
0x031A	0x30A0      	MOVLW      _txt
0x031B	0x00E0      	MOVWF      FARG_Lcd_Out_text
0x031C	0x20E6      	CALL       _Lcd_Out
;Seminarska.c,65 :: 		C1ON_bit = 0;
0x031D	0x1283      	BCF        STATUS, 5
0x031E	0x1703      	BSF        STATUS, 6
0x031F	0x1387      	BCF        C1ON_bit, BitPos(C1ON_bit+0)
;Seminarska.c,66 :: 		C2ON_bit = 0;
0x0320	0x1388      	BCF        C2ON_bit, BitPos(C2ON_bit+0)
;Seminarska.c,67 :: 		UART1_Init(9600);
0x0321	0x3033      	MOVLW      51
0x0322	0x1683      	BSF        STATUS, 5
0x0323	0x1303      	BCF        STATUS, 6
0x0324	0x0099      	MOVWF      SPBRG
0x0325	0x1518      	BSF        TXSTA, 2
0x0326	0x22E3      	CALL       _UART1_Init
;Seminarska.c,68 :: 		Delay_ms(50);
0x0327	0x3082      	MOVLW      130
0x0328	0x00FC      	MOVWF      R12
0x0329	0x30DD      	MOVLW      221
0x032A	0x00FD      	MOVWF      R13
L_main1:
0x032B	0x0BFD      	DECFSZ     R13, 1
0x032C	0x2B2B      	GOTO       L_main1
0x032D	0x0BFC      	DECFSZ     R12, 1
0x032E	0x2B2B      	GOTO       L_main1
0x032F	0x0000      	NOP
0x0330	0x0000      	NOP
;Seminarska.c,70 :: 		while(1){
L_main2:
0x0331	0x1283      	BCF        STATUS, 5
;Seminarska.c,71 :: 		if(typeUser == 0){
0x0332	0x0820      	MOVF       _typeUser, 0
0x0333	0x3A00      	XORLW      0
0x0334	0x1D03      	BTFSS      STATUS, 2
0x0335	0x2E3F      	GOTO       L_main4
;Seminarska.c,72 :: 		do
L_main5:
;Seminarska.c,74 :: 		Lcd_Cmd(_LCD_Clear);
0x0336	0x3001      	MOVLW      1
0x0337	0x1683      	BSF        STATUS, 5
0x0338	0x00E4      	MOVWF      FARG_Lcd_Cmd_out_char
0x0339	0x201A      	CALL       _Lcd_Cmd
;Seminarska.c,75 :: 		Lcd_Out(1,1, "Vnesi");
0x033A	0x3001      	MOVLW      1
0x033B	0x1683      	BSF        STATUS, 5
0x033C	0x00DE      	MOVWF      FARG_Lcd_Out_row
0x033D	0x3001      	MOVLW      1
0x033E	0x00DF      	MOVWF      FARG_Lcd_Out_column
0x033F	0x3060      	MOVLW      ?lstr2_Seminarska
0x0340	0x00E0      	MOVWF      FARG_Lcd_Out_text
0x0341	0x20E6      	CALL       _Lcd_Out
;Seminarska.c,76 :: 		if(kp != 43 && kp != 45 && kp != 46 && kp != 47)
0x0342	0x1283      	BCF        STATUS, 5
0x0343	0x082E      	MOVF       _kp, 0
0x0344	0x3A2B      	XORLW      43
0x0345	0x1903      	BTFSC      STATUS, 2
0x0346	0x2B55      	GOTO       L_main10
0x0347	0x082E      	MOVF       _kp, 0
0x0348	0x3A2D      	XORLW      45
0x0349	0x1903      	BTFSC      STATUS, 2
0x034A	0x2B55      	GOTO       L_main10
0x034B	0x082E      	MOVF       _kp, 0
0x034C	0x3A2E      	XORLW      46
0x034D	0x1903      	BTFSC      STATUS, 2
0x034E	0x2B55      	GOTO       L_main10
0x034F	0x082E      	MOVF       _kp, 0
0x0350	0x3A2F      	XORLW      47
0x0351	0x1903      	BTFSC      STATUS, 2
0x0352	0x2B55      	GOTO       L_main10
L__main117:
;Seminarska.c,77 :: 		oldState = kp;
0x0353	0x082E      	MOVF       _kp, 0
0x0354	0x00AF      	MOVWF      _oldState
L_main10:
;Seminarska.c,78 :: 		kp = 0;
0x0355	0x01AE      	CLRF       _kp
;Seminarska.c,79 :: 		do{
L_main11:
;Seminarska.c,80 :: 		kp = Keypad_Key_Click();
0x0356	0x22BC      	CALL       _Keypad_Key_Click
0x0357	0x0870      	MOVF       R0, 0
0x0358	0x1283      	BCF        STATUS, 5
0x0359	0x00AE      	MOVWF      _kp
;Seminarska.c,81 :: 		typeUser = ADC_Read(7);
0x035A	0x3007      	MOVLW      7
0x035B	0x1683      	BSF        STATUS, 5
0x035C	0x00D9      	MOVWF      FARG_ADC_Read_channel
0x035D	0x2255      	CALL       _ADC_Read
0x035E	0x0870      	MOVF       R0, 0
0x035F	0x1283      	BCF        STATUS, 5
0x0360	0x00A0      	MOVWF      _typeUser
;Seminarska.c,82 :: 		if(typeUser != 0){
0x0361	0x0870      	MOVF       R0, 0
0x0362	0x3A00      	XORLW      0
0x0363	0x1903      	BTFSC      STATUS, 2
0x0364	0x2B66      	GOTO       L_main14
;Seminarska.c,83 :: 		break;
0x0365	0x2B69      	GOTO       L_main12
;Seminarska.c,84 :: 		}
L_main14:
;Seminarska.c,85 :: 		}while (!kp);
0x0366	0x082E      	MOVF       _kp, 0
0x0367	0x1903      	BTFSC      STATUS, 2
0x0368	0x2B56      	GOTO       L_main11
L_main12:
;Seminarska.c,86 :: 		if(typeUser != 0){
0x0369	0x0820      	MOVF       _typeUser, 0
0x036A	0x3A00      	XORLW      0
0x036B	0x1903      	BTFSC      STATUS, 2
0x036C	0x2B6E      	GOTO       L_main15
;Seminarska.c,87 :: 		break;
0x036D	0x2E3E      	GOTO       L_main6
;Seminarska.c,88 :: 		}
L_main15:
;Seminarska.c,89 :: 		switch (kp)
0x036E	0x2B9F      	GOTO       L_main16
;Seminarska.c,91 :: 		case 1: kp = 49; break; // 1
L_main18:
0x036F	0x3031      	MOVLW      49
0x0370	0x00AE      	MOVWF      _kp
0x0371	0x2BDF      	GOTO       L_main17
;Seminarska.c,92 :: 		case 2: kp = 52; break; // 4
L_main19:
0x0372	0x3034      	MOVLW      52
0x0373	0x00AE      	MOVWF      _kp
0x0374	0x2BDF      	GOTO       L_main17
;Seminarska.c,93 :: 		case 3: kp = 55; break; // 7
L_main20:
0x0375	0x3037      	MOVLW      55
0x0376	0x00AE      	MOVWF      _kp
0x0377	0x2BDF      	GOTO       L_main17
;Seminarska.c,94 :: 		case 4: kp = 74; break; // J
L_main21:
0x0378	0x304A      	MOVLW      74
0x0379	0x00AE      	MOVWF      _kp
0x037A	0x2BDF      	GOTO       L_main17
;Seminarska.c,95 :: 		case 5: kp = 50; break; // 2
L_main22:
0x037B	0x3032      	MOVLW      50
0x037C	0x00AE      	MOVWF      _kp
0x037D	0x2BDF      	GOTO       L_main17
;Seminarska.c,96 :: 		case 6: kp = 53; break; // 5
L_main23:
0x037E	0x3035      	MOVLW      53
0x037F	0x00AE      	MOVWF      _kp
0x0380	0x2BDF      	GOTO       L_main17
;Seminarska.c,97 :: 		case 7: kp = 56; break; // 8
L_main24:
0x0381	0x3038      	MOVLW      56
0x0382	0x00AE      	MOVWF      _kp
0x0383	0x2BDF      	GOTO       L_main17
;Seminarska.c,98 :: 		case 8: kp = 48; break; // 0
L_main25:
0x0384	0x3030      	MOVLW      48
0x0385	0x00AE      	MOVWF      _kp
0x0386	0x2BDF      	GOTO       L_main17
;Seminarska.c,99 :: 		case 9: kp = 51; break; // 3
L_main26:
0x0387	0x3033      	MOVLW      51
0x0388	0x00AE      	MOVWF      _kp
0x0389	0x2BDF      	GOTO       L_main17
;Seminarska.c,100 :: 		case 10: kp = 54; break; // 6
L_main27:
0x038A	0x3036      	MOVLW      54
0x038B	0x00AE      	MOVWF      _kp
0x038C	0x2BDF      	GOTO       L_main17
;Seminarska.c,101 :: 		case 11: kp = 57; break; // 9
L_main28:
0x038D	0x3039      	MOVLW      57
0x038E	0x00AE      	MOVWF      _kp
0x038F	0x2BDF      	GOTO       L_main17
;Seminarska.c,102 :: 		case 12: kp = 76; break; // L
L_main29:
0x0390	0x304C      	MOVLW      76
0x0391	0x00AE      	MOVWF      _kp
0x0392	0x2BDF      	GOTO       L_main17
;Seminarska.c,103 :: 		case 13: kp = 43; break; // +
L_main30:
0x0393	0x302B      	MOVLW      43
0x0394	0x00AE      	MOVWF      _kp
0x0395	0x2BDF      	GOTO       L_main17
;Seminarska.c,104 :: 		case 14: kp = 45; break; // Time
L_main31:
0x0396	0x302D      	MOVLW      45
0x0397	0x00AE      	MOVWF      _kp
0x0398	0x2BDF      	GOTO       L_main17
;Seminarska.c,105 :: 		case 15: kp = 46; break; // Add
L_main32:
0x0399	0x302E      	MOVLW      46
0x039A	0x00AE      	MOVWF      _kp
0x039B	0x2BDF      	GOTO       L_main17
;Seminarska.c,106 :: 		case 16: kp = 47; break; // Erase
L_main33:
0x039C	0x302F      	MOVLW      47
0x039D	0x00AE      	MOVWF      _kp
0x039E	0x2BDF      	GOTO       L_main17
;Seminarska.c,107 :: 		}
L_main16:
0x039F	0x082E      	MOVF       _kp, 0
0x03A0	0x3A01      	XORLW      1
0x03A1	0x1903      	BTFSC      STATUS, 2
0x03A2	0x2B6F      	GOTO       L_main18
0x03A3	0x082E      	MOVF       _kp, 0
0x03A4	0x3A02      	XORLW      2
0x03A5	0x1903      	BTFSC      STATUS, 2
0x03A6	0x2B72      	GOTO       L_main19
0x03A7	0x082E      	MOVF       _kp, 0
0x03A8	0x3A03      	XORLW      3
0x03A9	0x1903      	BTFSC      STATUS, 2
0x03AA	0x2B75      	GOTO       L_main20
0x03AB	0x082E      	MOVF       _kp, 0
0x03AC	0x3A04      	XORLW      4
0x03AD	0x1903      	BTFSC      STATUS, 2
0x03AE	0x2B78      	GOTO       L_main21
0x03AF	0x082E      	MOVF       _kp, 0
0x03B0	0x3A05      	XORLW      5
0x03B1	0x1903      	BTFSC      STATUS, 2
0x03B2	0x2B7B      	GOTO       L_main22
0x03B3	0x082E      	MOVF       _kp, 0
0x03B4	0x3A06      	XORLW      6
0x03B5	0x1903      	BTFSC      STATUS, 2
0x03B6	0x2B7E      	GOTO       L_main23
0x03B7	0x082E      	MOVF       _kp, 0
0x03B8	0x3A07      	XORLW      7
0x03B9	0x1903      	BTFSC      STATUS, 2
0x03BA	0x2B81      	GOTO       L_main24
0x03BB	0x082E      	MOVF       _kp, 0
0x03BC	0x3A08      	XORLW      8
0x03BD	0x1903      	BTFSC      STATUS, 2
0x03BE	0x2B84      	GOTO       L_main25
0x03BF	0x082E      	MOVF       _kp, 0
0x03C0	0x3A09      	XORLW      9
0x03C1	0x1903      	BTFSC      STATUS, 2
0x03C2	0x2B87      	GOTO       L_main26
0x03C3	0x082E      	MOVF       _kp, 0
0x03C4	0x3A0A      	XORLW      10
0x03C5	0x1903      	BTFSC      STATUS, 2
0x03C6	0x2B8A      	GOTO       L_main27
0x03C7	0x082E      	MOVF       _kp, 0
0x03C8	0x3A0B      	XORLW      11
0x03C9	0x1903      	BTFSC      STATUS, 2
0x03CA	0x2B8D      	GOTO       L_main28
0x03CB	0x082E      	MOVF       _kp, 0
0x03CC	0x3A0C      	XORLW      12
0x03CD	0x1903      	BTFSC      STATUS, 2
0x03CE	0x2B90      	GOTO       L_main29
0x03CF	0x082E      	MOVF       _kp, 0
0x03D0	0x3A0D      	XORLW      13
0x03D1	0x1903      	BTFSC      STATUS, 2
0x03D2	0x2B93      	GOTO       L_main30
0x03D3	0x082E      	MOVF       _kp, 0
0x03D4	0x3A0E      	XORLW      14
0x03D5	0x1903      	BTFSC      STATUS, 2
0x03D6	0x2B96      	GOTO       L_main31
0x03D7	0x082E      	MOVF       _kp, 0
0x03D8	0x3A0F      	XORLW      15
0x03D9	0x1903      	BTFSC      STATUS, 2
0x03DA	0x2B99      	GOTO       L_main32
0x03DB	0x082E      	MOVF       _kp, 0
0x03DC	0x3A10      	XORLW      16
0x03DD	0x1903      	BTFSC      STATUS, 2
0x03DE	0x2B9C      	GOTO       L_main33
L_main17:
;Seminarska.c,109 :: 		if(oldState == 0){
0x03DF	0x082F      	MOVF       _oldState, 0
0x03E0	0x3A00      	XORLW      0
0x03E1	0x1D03      	BTFSS      STATUS, 2
0x03E2	0x2BF5      	GOTO       L_main34
;Seminarska.c,110 :: 		if(kp == 43 || kp == 45 || kp == 46 || kp == 47){
0x03E3	0x082E      	MOVF       _kp, 0
0x03E4	0x3A2B      	XORLW      43
0x03E5	0x1903      	BTFSC      STATUS, 2
0x03E6	0x2BF4      	GOTO       L__main116
0x03E7	0x082E      	MOVF       _kp, 0
0x03E8	0x3A2D      	XORLW      45
0x03E9	0x1903      	BTFSC      STATUS, 2
0x03EA	0x2BF4      	GOTO       L__main116
0x03EB	0x082E      	MOVF       _kp, 0
0x03EC	0x3A2E      	XORLW      46
0x03ED	0x1903      	BTFSC      STATUS, 2
0x03EE	0x2BF4      	GOTO       L__main116
0x03EF	0x082E      	MOVF       _kp, 0
0x03F0	0x3A2F      	XORLW      47
0x03F1	0x1903      	BTFSC      STATUS, 2
0x03F2	0x2BF4      	GOTO       L__main116
0x03F3	0x2BF5      	GOTO       L_main37
L__main116:
;Seminarska.c,111 :: 		greska();
0x03F4	0x2236      	CALL       _greska
;Seminarska.c,112 :: 		}
L_main37:
;Seminarska.c,113 :: 		}
L_main34:
;Seminarska.c,115 :: 		if(kp == 43){// +
0x03F5	0x082E      	MOVF       _kp, 0
0x03F6	0x3A2B      	XORLW      43
0x03F7	0x1D03      	BTFSS      STATUS, 2
0x03F8	0x2CAD      	GOTO       L_main38
;Seminarska.c,116 :: 		flagPlus = 1;
0x03F9	0x3001      	MOVLW      1
0x03FA	0x00A2      	MOVWF      _flagPlus
;Seminarska.c,117 :: 		switch (oldstate)
0x03FB	0x2C47      	GOTO       L_main39
;Seminarska.c,119 :: 		case 49: oldState = 65; break; // A
L_main41:
0x03FC	0x3041      	MOVLW      65
0x03FD	0x00AF      	MOVWF      _oldState
0x03FE	0x2CA8      	GOTO       L_main40
;Seminarska.c,120 :: 		case 52: oldState = 68; break; // D
L_main42:
0x03FF	0x3044      	MOVLW      68
0x0400	0x00AF      	MOVWF      _oldState
0x0401	0x2CA8      	GOTO       L_main40
;Seminarska.c,121 :: 		case 55: oldState = 71; break; // G
L_main43:
0x0402	0x3047      	MOVLW      71
0x0403	0x00AF      	MOVWF      _oldState
0x0404	0x2CA8      	GOTO       L_main40
;Seminarska.c,122 :: 		case 74: oldState = 86; break; // V
L_main44:
0x0405	0x3056      	MOVLW      86
0x0406	0x00AF      	MOVWF      _oldState
0x0407	0x2CA8      	GOTO       L_main40
;Seminarska.c,123 :: 		case 50: oldState = 66; break; // B
L_main45:
0x0408	0x3042      	MOVLW      66
0x0409	0x00AF      	MOVWF      _oldState
0x040A	0x2CA8      	GOTO       L_main40
;Seminarska.c,124 :: 		case 53: oldState = 69; break; // E
L_main46:
0x040B	0x3045      	MOVLW      69
0x040C	0x00AF      	MOVWF      _oldState
0x040D	0x2CA8      	GOTO       L_main40
;Seminarska.c,125 :: 		case 56: oldState = 72; break; // H
L_main47:
0x040E	0x3048      	MOVLW      72
0x040F	0x00AF      	MOVWF      _oldState
0x0410	0x2CA8      	GOTO       L_main40
;Seminarska.c,126 :: 		case 48: oldState = 75; break; // K
L_main48:
0x0411	0x304B      	MOVLW      75
0x0412	0x00AF      	MOVWF      _oldState
0x0413	0x2CA8      	GOTO       L_main40
;Seminarska.c,127 :: 		case 51: oldState = 67; break; // C
L_main49:
0x0414	0x3043      	MOVLW      67
0x0415	0x00AF      	MOVWF      _oldState
0x0416	0x2CA8      	GOTO       L_main40
;Seminarska.c,128 :: 		case 54: oldState = 70; break; // F
L_main50:
0x0417	0x3046      	MOVLW      70
0x0418	0x00AF      	MOVWF      _oldState
0x0419	0x2CA8      	GOTO       L_main40
;Seminarska.c,129 :: 		case 57: oldState = 73; break; // I
L_main51:
0x041A	0x3049      	MOVLW      73
0x041B	0x00AF      	MOVWF      _oldState
0x041C	0x2CA8      	GOTO       L_main40
;Seminarska.c,130 :: 		case 76: oldState = 89; break; // Y
L_main52:
0x041D	0x3059      	MOVLW      89
0x041E	0x00AF      	MOVWF      _oldState
0x041F	0x2CA8      	GOTO       L_main40
;Seminarska.c,132 :: 		case 65: oldState = 77; break; // M
L_main53:
0x0420	0x304D      	MOVLW      77
0x0421	0x00AF      	MOVWF      _oldState
0x0422	0x2CA8      	GOTO       L_main40
;Seminarska.c,133 :: 		case 68: oldState = 80; break; // P
L_main54:
0x0423	0x3050      	MOVLW      80
0x0424	0x00AF      	MOVWF      _oldState
0x0425	0x2CA8      	GOTO       L_main40
;Seminarska.c,134 :: 		case 71: oldState = 83; break; // S
L_main55:
0x0426	0x3053      	MOVLW      83
0x0427	0x00AF      	MOVWF      _oldState
0x0428	0x2CA8      	GOTO       L_main40
;Seminarska.c,135 :: 		case 86: oldState = 87; break; // W
L_main56:
0x0429	0x3057      	MOVLW      87
0x042A	0x00AF      	MOVWF      _oldState
0x042B	0x2CA8      	GOTO       L_main40
;Seminarska.c,136 :: 		case 66: oldState = 78; break; // N
L_main57:
0x042C	0x304E      	MOVLW      78
0x042D	0x00AF      	MOVWF      _oldState
0x042E	0x2CA8      	GOTO       L_main40
;Seminarska.c,137 :: 		case 69: oldState = 81; break; // Q
L_main58:
0x042F	0x3051      	MOVLW      81
0x0430	0x00AF      	MOVWF      _oldState
0x0431	0x2CA8      	GOTO       L_main40
;Seminarska.c,138 :: 		case 72: oldState = 84; break; // T
L_main59:
0x0432	0x3054      	MOVLW      84
0x0433	0x00AF      	MOVWF      _oldState
0x0434	0x2CA8      	GOTO       L_main40
;Seminarska.c,139 :: 		case 75: oldState = 88; break; // X
L_main60:
0x0435	0x3058      	MOVLW      88
0x0436	0x00AF      	MOVWF      _oldState
0x0437	0x2CA8      	GOTO       L_main40
;Seminarska.c,140 :: 		case 67: oldState = 79; break; // O
L_main61:
0x0438	0x304F      	MOVLW      79
0x0439	0x00AF      	MOVWF      _oldState
0x043A	0x2CA8      	GOTO       L_main40
;Seminarska.c,141 :: 		case 70: oldState = 82; break; // R
L_main62:
0x043B	0x3052      	MOVLW      82
0x043C	0x00AF      	MOVWF      _oldState
0x043D	0x2CA8      	GOTO       L_main40
;Seminarska.c,142 :: 		case 73: oldState = 85; break; // U
L_main63:
0x043E	0x3055      	MOVLW      85
0x043F	0x00AF      	MOVWF      _oldState
0x0440	0x2CA8      	GOTO       L_main40
;Seminarska.c,143 :: 		case 89: oldState = 90; break; // Z
L_main64:
0x0441	0x305A      	MOVLW      90
0x0442	0x00AF      	MOVWF      _oldState
0x0443	0x2CA8      	GOTO       L_main40
;Seminarska.c,144 :: 		default: flag3 = 1;
L_main65:
0x0444	0x3001      	MOVLW      1
0x0445	0x00A1      	MOVWF      _flag3
;Seminarska.c,145 :: 		}
0x0446	0x2CA8      	GOTO       L_main40
L_main39:
0x0447	0x082F      	MOVF       _oldState, 0
0x0448	0x3A31      	XORLW      49
0x0449	0x1903      	BTFSC      STATUS, 2
0x044A	0x2BFC      	GOTO       L_main41
0x044B	0x082F      	MOVF       _oldState, 0
0x044C	0x3A34      	XORLW      52
0x044D	0x1903      	BTFSC      STATUS, 2
0x044E	0x2BFF      	GOTO       L_main42
0x044F	0x082F      	MOVF       _oldState, 0
0x0450	0x3A37      	XORLW      55
0x0451	0x1903      	BTFSC      STATUS, 2
0x0452	0x2C02      	GOTO       L_main43
0x0453	0x082F      	MOVF       _oldState, 0
0x0454	0x3A4A      	XORLW      74
0x0455	0x1903      	BTFSC      STATUS, 2
0x0456	0x2C05      	GOTO       L_main44
0x0457	0x082F      	MOVF       _oldState, 0
0x0458	0x3A32      	XORLW      50
0x0459	0x1903      	BTFSC      STATUS, 2
0x045A	0x2C08      	GOTO       L_main45
0x045B	0x082F      	MOVF       _oldState, 0
0x045C	0x3A35      	XORLW      53
0x045D	0x1903      	BTFSC      STATUS, 2
0x045E	0x2C0B      	GOTO       L_main46
0x045F	0x082F      	MOVF       _oldState, 0
0x0460	0x3A38      	XORLW      56
0x0461	0x1903      	BTFSC      STATUS, 2
0x0462	0x2C0E      	GOTO       L_main47
0x0463	0x082F      	MOVF       _oldState, 0
0x0464	0x3A30      	XORLW      48
0x0465	0x1903      	BTFSC      STATUS, 2
0x0466	0x2C11      	GOTO       L_main48
0x0467	0x082F      	MOVF       _oldState, 0
0x0468	0x3A33      	XORLW      51
0x0469	0x1903      	BTFSC      STATUS, 2
0x046A	0x2C14      	GOTO       L_main49
0x046B	0x082F      	MOVF       _oldState, 0
0x046C	0x3A36      	XORLW      54
0x046D	0x1903      	BTFSC      STATUS, 2
0x046E	0x2C17      	GOTO       L_main50
0x046F	0x082F      	MOVF       _oldState, 0
0x0470	0x3A39      	XORLW      57
0x0471	0x1903      	BTFSC      STATUS, 2
0x0472	0x2C1A      	GOTO       L_main51
0x0473	0x082F      	MOVF       _oldState, 0
0x0474	0x3A4C      	XORLW      76
0x0475	0x1903      	BTFSC      STATUS, 2
0x0476	0x2C1D      	GOTO       L_main52
0x0477	0x082F      	MOVF       _oldState, 0
0x0478	0x3A41      	XORLW      65
0x0479	0x1903      	BTFSC      STATUS, 2
0x047A	0x2C20      	GOTO       L_main53
0x047B	0x082F      	MOVF       _oldState, 0
0x047C	0x3A44      	XORLW      68
0x047D	0x1903      	BTFSC      STATUS, 2
0x047E	0x2C23      	GOTO       L_main54
0x047F	0x082F      	MOVF       _oldState, 0
0x0480	0x3A47      	XORLW      71
0x0481	0x1903      	BTFSC      STATUS, 2
0x0482	0x2C26      	GOTO       L_main55
0x0483	0x082F      	MOVF       _oldState, 0
0x0484	0x3A56      	XORLW      86
0x0485	0x1903      	BTFSC      STATUS, 2
0x0486	0x2C29      	GOTO       L_main56
0x0487	0x082F      	MOVF       _oldState, 0
0x0488	0x3A42      	XORLW      66
0x0489	0x1903      	BTFSC      STATUS, 2
0x048A	0x2C2C      	GOTO       L_main57
0x048B	0x082F      	MOVF       _oldState, 0
0x048C	0x3A45      	XORLW      69
0x048D	0x1903      	BTFSC      STATUS, 2
0x048E	0x2C2F      	GOTO       L_main58
0x048F	0x082F      	MOVF       _oldState, 0
0x0490	0x3A48      	XORLW      72
0x0491	0x1903      	BTFSC      STATUS, 2
0x0492	0x2C32      	GOTO       L_main59
0x0493	0x082F      	MOVF       _oldState, 0
0x0494	0x3A4B      	XORLW      75
0x0495	0x1903      	BTFSC      STATUS, 2
0x0496	0x2C35      	GOTO       L_main60
0x0497	0x082F      	MOVF       _oldState, 0
0x0498	0x3A43      	XORLW      67
0x0499	0x1903      	BTFSC      STATUS, 2
0x049A	0x2C38      	GOTO       L_main61
0x049B	0x082F      	MOVF       _oldState, 0
0x049C	0x3A46      	XORLW      70
0x049D	0x1903      	BTFSC      STATUS, 2
0x049E	0x2C3B      	GOTO       L_main62
0x049F	0x082F      	MOVF       _oldState, 0
0x04A0	0x3A49      	XORLW      73
0x04A1	0x1903      	BTFSC      STATUS, 2
0x04A2	0x2C3E      	GOTO       L_main63
0x04A3	0x082F      	MOVF       _oldState, 0
0x04A4	0x3A59      	XORLW      89
0x04A5	0x1903      	BTFSC      STATUS, 2
0x04A6	0x2C41      	GOTO       L_main64
0x04A7	0x2C44      	GOTO       L_main65
L_main40:
;Seminarska.c,146 :: 		if(flag3){
0x04A8	0x0821      	MOVF       _flag3, 0
0x04A9	0x1903      	BTFSC      STATUS, 2
0x04AA	0x2CAC      	GOTO       L_main66
;Seminarska.c,147 :: 		greska();
0x04AB	0x2236      	CALL       _greska
;Seminarska.c,148 :: 		}
L_main66:
;Seminarska.c,149 :: 		}else if(kp == 45){  //Time
0x04AC	0x2E3D      	GOTO       L_main67
L_main38:
0x04AD	0x082E      	MOVF       _kp, 0
0x04AE	0x3A2D      	XORLW      45
0x04AF	0x1D03      	BTFSS      STATUS, 2
0x04B0	0x2CD3      	GOTO       L_main68
;Seminarska.c,150 :: 		flagTime = 1;
0x04B1	0x3001      	MOVLW      1
0x04B2	0x00DF      	MOVWF      _flagTime
;Seminarska.c,151 :: 		brStanici = brStanici * 10 + (oldState - 48);
0x04B3	0x0823      	MOVF       _brStanici, 0
0x04B4	0x00F0      	MOVWF      R0
0x04B5	0x0824      	MOVF       _brStanici+1, 0
0x04B6	0x00F1      	MOVWF      R0+1
0x04B7	0x300A      	MOVLW      10
0x04B8	0x00F4      	MOVWF      R4
0x04B9	0x3000      	MOVLW      0
0x04BA	0x00F5      	MOVWF      R4+1
0x04BB	0x2199      	CALL       _Mul_16X16_U
0x04BC	0x3030      	MOVLW      48
0x04BD	0x022F      	SUBWF      _oldState, 0
0x04BE	0x00F2      	MOVWF      R2
0x04BF	0x01F3      	CLRF       R2+1
0x04C0	0x1C03      	BTFSS      STATUS, 0
0x04C1	0x03F3      	DECF       R2+1, 1
0x04C2	0x0872      	MOVF       R2, 0
0x04C3	0x07F0      	ADDWF      R0, 1
0x04C4	0x0873      	MOVF       R2+1, 0
0x04C5	0x1803      	BTFSC      STATUS, 0
0x04C6	0x3E01      	ADDLW      1
0x04C7	0x07F1      	ADDWF      R0+1, 1
0x04C8	0x0870      	MOVF       R0, 0
0x04C9	0x00A3      	MOVWF      _brStanici
0x04CA	0x0871      	MOVF       R0+1, 0
0x04CB	0x00A4      	MOVWF      _brStanici+1
;Seminarska.c,152 :: 		oldState = 0;
0x04CC	0x01AF      	CLRF       _oldState
;Seminarska.c,153 :: 		vreme = brStanici;
0x04CD	0x0870      	MOVF       R0, 0
0x04CE	0x00E7      	MOVWF      _vreme
;Seminarska.c,154 :: 		brStanici = 0;
0x04CF	0x01A3      	CLRF       _brStanici
0x04D0	0x01A4      	CLRF       _brStanici+1
;Seminarska.c,155 :: 		brCifri = 0;
0x04D1	0x01AD      	CLRF       _brCifri
;Seminarska.c,156 :: 		}else if(kp == 46){  //Add
0x04D2	0x2E3D      	GOTO       L_main69
L_main68:
0x04D3	0x082E      	MOVF       _kp, 0
0x04D4	0x3A2E      	XORLW      46
0x04D5	0x1D03      	BTFSS      STATUS, 2
0x04D6	0x2DA3      	GOTO       L_main70
;Seminarska.c,157 :: 		Lcd_Cmd(_LCD_CLEAR);
0x04D7	0x3001      	MOVLW      1
0x04D8	0x1683      	BSF        STATUS, 5
0x04D9	0x00E4      	MOVWF      FARG_Lcd_Cmd_out_char
0x04DA	0x201A      	CALL       _Lcd_Cmd
;Seminarska.c,158 :: 		if(flagTime){           //Ako sakame da vneseme vreme
0x04DB	0x085F      	MOVF       _flagTime, 0
0x04DC	0x1903      	BTFSC      STATUS, 2
0x04DD	0x2D34      	GOTO       L_main71
;Seminarska.c,159 :: 		brStanici = brStanici * 10 + (oldState - 48);
0x04DE	0x0823      	MOVF       _brStanici, 0
0x04DF	0x00F0      	MOVWF      R0
0x04E0	0x0824      	MOVF       _brStanici+1, 0
0x04E1	0x00F1      	MOVWF      R0+1
0x04E2	0x300A      	MOVLW      10
0x04E3	0x00F4      	MOVWF      R4
0x04E4	0x3000      	MOVLW      0
0x04E5	0x00F5      	MOVWF      R4+1
0x04E6	0x2199      	CALL       _Mul_16X16_U
0x04E7	0x3030      	MOVLW      48
0x04E8	0x022F      	SUBWF      _oldState, 0
0x04E9	0x00F2      	MOVWF      R2
0x04EA	0x01F3      	CLRF       R2+1
0x04EB	0x1C03      	BTFSS      STATUS, 0
0x04EC	0x03F3      	DECF       R2+1, 1
0x04ED	0x0872      	MOVF       R2, 0
0x04EE	0x0770      	ADDWF      R0, 0
0x04EF	0x00A3      	MOVWF      _brStanici
0x04F0	0x0871      	MOVF       R0+1, 0
0x04F1	0x1803      	BTFSC      STATUS, 0
0x04F2	0x3E01      	ADDLW      1
0x04F3	0x0773      	ADDWF      R2+1, 0
0x04F4	0x00A4      	MOVWF      _brStanici+1
;Seminarska.c,160 :: 		Lcd_Cmd(_LCD_CLEAR);
0x04F5	0x3001      	MOVLW      1
0x04F6	0x1683      	BSF        STATUS, 5
0x04F7	0x00E4      	MOVWF      FARG_Lcd_Cmd_out_char
0x04F8	0x201A      	CALL       _Lcd_Cmd
;Seminarska.c,161 :: 		brCifri = vreme + 48;
0x04F9	0x3030      	MOVLW      48
0x04FA	0x0767      	ADDWF      _vreme, 0
0x04FB	0x00F0      	MOVWF      R0
0x04FC	0x0870      	MOVF       R0, 0
0x04FD	0x00AD      	MOVWF      _brCifri
;Seminarska.c,162 :: 		Lcd_Out(1,1, brCifri);
0x04FE	0x3001      	MOVLW      1
0x04FF	0x1683      	BSF        STATUS, 5
0x0500	0x00DE      	MOVWF      FARG_Lcd_Out_row
0x0501	0x3001      	MOVLW      1
0x0502	0x00DF      	MOVWF      FARG_Lcd_Out_column
0x0503	0x0870      	MOVF       R0, 0
0x0504	0x00E0      	MOVWF      FARG_Lcd_Out_text
0x0505	0x20E6      	CALL       _Lcd_Out
;Seminarska.c,163 :: 		Delay_ms(10);
0x0506	0x301A      	MOVLW      26
0x0507	0x00FC      	MOVWF      R12
0x0508	0x30F8      	MOVLW      248
0x0509	0x00FD      	MOVWF      R13
L_main72:
0x050A	0x0BFD      	DECFSZ     R13, 1
0x050B	0x2D0A      	GOTO       L_main72
0x050C	0x0BFC      	DECFSZ     R12, 1
0x050D	0x2D0A      	GOTO       L_main72
0x050E	0x0000      	NOP
;Seminarska.c,164 :: 		tmp = brStanici * 16 + 11;
0x050F	0x3004      	MOVLW      4
0x0510	0x00F2      	MOVWF      R2
0x0511	0x1283      	BCF        STATUS, 5
0x0512	0x0823      	MOVF       _brStanici, 0
0x0513	0x00F0      	MOVWF      R0
0x0514	0x0824      	MOVF       _brStanici+1, 0
0x0515	0x00F1      	MOVWF      R0+1
0x0516	0x0872      	MOVF       R2, 0
L__main121:
0x0517	0x1903      	BTFSC      STATUS, 2
0x0518	0x2D1E      	GOTO       L__main122
0x0519	0x0DF0      	RLF        R0, 1
0x051A	0x0DF1      	RLF        R0+1, 1
0x051B	0x1070      	BCF        R0, 0
0x051C	0x3EFF      	ADDLW      255
0x051D	0x2D17      	GOTO       L__main121
L__main122:
0x051E	0x1283      	BCF        STATUS, 5
0x051F	0x300B      	MOVLW      11
0x0520	0x07F0      	ADDWF      R0, 1
0x0521	0x1803      	BTFSC      STATUS, 0
0x0522	0x0AF1      	INCF       R0+1, 1
0x0523	0x0870      	MOVF       R0, 0
0x0524	0x00EA      	MOVWF      _tmp
0x0525	0x0871      	MOVF       R0+1, 0
0x0526	0x00EB      	MOVWF      _tmp+1
;Seminarska.c,165 :: 		EEPROM_Write(tmp, vreme);
0x0527	0x0870      	MOVF       R0, 0
0x0528	0x1683      	BSF        STATUS, 5
0x0529	0x00D9      	MOVWF      FARG_EEPROM_Write_Address
0x052A	0x1283      	BCF        STATUS, 5
0x052B	0x0867      	MOVF       _vreme, 0
0x052C	0x1683      	BSF        STATUS, 5
0x052D	0x00DA      	MOVWF      FARG_EEPROM_Write_data_
0x052E	0x2213      	CALL       _EEPROM_Write
;Seminarska.c,166 :: 		brCifri = 0;
0x052F	0x1283      	BCF        STATUS, 5
0x0530	0x1303      	BCF        STATUS, 6
0x0531	0x01AD      	CLRF       _brCifri
;Seminarska.c,167 :: 		flagTime = 0;
0x0532	0x01DF      	CLRF       _flagTime
;Seminarska.c,168 :: 		}else{ //Obicno vnesuvanje na avtobuska linija bez vreme
0x0533	0x2DA2      	GOTO       L_main73
L_main71:
;Seminarska.c,169 :: 		if(oldState >= 48 && oldState <= 57){
0x0534	0x3030      	MOVLW      48
0x0535	0x022F      	SUBWF      _oldState, 0
0x0536	0x1C03      	BTFSS      STATUS, 0
0x0537	0x2D9E      	GOTO       L_main76
0x0538	0x082F      	MOVF       _oldState, 0
0x0539	0x3C39      	SUBLW      57
0x053A	0x1C03      	BTFSS      STATUS, 0
0x053B	0x2D9E      	GOTO       L_main76
L__main115:
;Seminarska.c,170 :: 		brStanici = brStanici * 10 + (oldState - 48);
0x053C	0x0823      	MOVF       _brStanici, 0
0x053D	0x00F0      	MOVWF      R0
0x053E	0x0824      	MOVF       _brStanici+1, 0
0x053F	0x00F1      	MOVWF      R0+1
0x0540	0x300A      	MOVLW      10
0x0541	0x00F4      	MOVWF      R4
0x0542	0x3000      	MOVLW      0
0x0543	0x00F5      	MOVWF      R4+1
0x0544	0x2199      	CALL       _Mul_16X16_U
0x0545	0x3030      	MOVLW      48
0x0546	0x022F      	SUBWF      _oldState, 0
0x0547	0x00F2      	MOVWF      R2
0x0548	0x01F3      	CLRF       R2+1
0x0549	0x1C03      	BTFSS      STATUS, 0
0x054A	0x03F3      	DECF       R2+1, 1
0x054B	0x0870      	MOVF       R0, 0
0x054C	0x07F2      	ADDWF      R2, 1
0x054D	0x0871      	MOVF       R0+1, 0
0x054E	0x1803      	BTFSC      STATUS, 0
0x054F	0x3E01      	ADDLW      1
0x0550	0x07F3      	ADDWF      R2+1, 1
0x0551	0x0872      	MOVF       R2, 0
0x0552	0x00A3      	MOVWF      _brStanici
0x0553	0x0873      	MOVF       R2+1, 0
0x0554	0x00A4      	MOVWF      _brStanici+1
;Seminarska.c,171 :: 		EEPROM_Write(brStanici * 16, brStanici);
0x0555	0x3004      	MOVLW      4
0x0556	0x00F0      	MOVWF      R0
0x0557	0x0872      	MOVF       R2, 0
0x0558	0x1683      	BSF        STATUS, 5
0x0559	0x00D9      	MOVWF      FARG_EEPROM_Write_Address
0x055A	0x0870      	MOVF       R0, 0
L__main123:
0x055B	0x1903      	BTFSC      STATUS, 2
0x055C	0x2D61      	GOTO       L__main124
0x055D	0x0DD9      	RLF        FARG_EEPROM_Write_Address, 1
0x055E	0x1059      	BCF        FARG_EEPROM_Write_Address, 0
0x055F	0x3EFF      	ADDLW      255
0x0560	0x2D5B      	GOTO       L__main123
L__main124:
0x0561	0x0872      	MOVF       R2, 0
0x0562	0x00DA      	MOVWF      FARG_EEPROM_Write_data_
0x0563	0x2213      	CALL       _EEPROM_Write
;Seminarska.c,172 :: 		brCifri = 0;
0x0564	0x1283      	BCF        STATUS, 5
0x0565	0x1303      	BCF        STATUS, 6
0x0566	0x01AD      	CLRF       _brCifri
;Seminarska.c,173 :: 		tmp = brStanici * 16;
0x0567	0x3004      	MOVLW      4
0x0568	0x00F0      	MOVWF      R0
0x0569	0x0823      	MOVF       _brStanici, 0
0x056A	0x00EA      	MOVWF      _tmp
0x056B	0x0824      	MOVF       _brStanici+1, 0
0x056C	0x00EB      	MOVWF      _tmp+1
0x056D	0x0870      	MOVF       R0, 0
L__main125:
0x056E	0x1903      	BTFSC      STATUS, 2
0x056F	0x2D75      	GOTO       L__main126
0x0570	0x0DEA      	RLF        _tmp, 1
0x0571	0x0DEB      	RLF        _tmp+1, 1
0x0572	0x106A      	BCF        _tmp, 0
0x0573	0x3EFF      	ADDLW      255
0x0574	0x2D6E      	GOTO       L__main125
L__main126:
;Seminarska.c,174 :: 		for(i = 0; i < 15; i++){
0x0575	0x01E8      	CLRF       _i
0x0576	0x01E9      	CLRF       _i+1
L_main77:
0x0577	0x3080      	MOVLW      128
0x0578	0x0669      	XORWF      _i+1, 0
0x0579	0x00F0      	MOVWF      R0
0x057A	0x3080      	MOVLW      128
0x057B	0x0270      	SUBWF      R0, 0
0x057C	0x1D03      	BTFSS      STATUS, 2
0x057D	0x2D80      	GOTO       L__main127
0x057E	0x300F      	MOVLW      15
0x057F	0x0268      	SUBWF      _i, 0
L__main127:
0x0580	0x1803      	BTFSC      STATUS, 0
0x0581	0x2D9D      	GOTO       L_main78
;Seminarska.c,175 :: 		tmp += 1;
0x0582	0x0AEA      	INCF       _tmp, 1
0x0583	0x1903      	BTFSC      STATUS, 2
0x0584	0x0AEB      	INCF       _tmp+1, 1
;Seminarska.c,176 :: 		EEPROM_Write(tmp, linija[i]);
0x0585	0x086A      	MOVF       _tmp, 0
0x0586	0x1683      	BSF        STATUS, 5
0x0587	0x00D9      	MOVWF      FARG_EEPROM_Write_Address
0x0588	0x1283      	BCF        STATUS, 5
0x0589	0x0868      	MOVF       _i, 0
0x058A	0x00F0      	MOVWF      R0
0x058B	0x0869      	MOVF       _i+1, 0
0x058C	0x00F1      	MOVWF      R0+1
0x058D	0x0DF0      	RLF        R0, 1
0x058E	0x0DF1      	RLF        R0+1, 1
0x058F	0x1070      	BCF        R0, 0
0x0590	0x0870      	MOVF       R0, 0
0x0591	0x3EB8      	ADDLW      _linija
0x0592	0x0084      	MOVWF      FSR
0x0593	0x0800      	MOVF       INDF, 0
0x0594	0x1683      	BSF        STATUS, 5
0x0595	0x00DA      	MOVWF      FARG_EEPROM_Write_data_
0x0596	0x2213      	CALL       _EEPROM_Write
;Seminarska.c,174 :: 		for(i = 0; i < 15; i++){
0x0597	0x1283      	BCF        STATUS, 5
0x0598	0x1303      	BCF        STATUS, 6
0x0599	0x0AE8      	INCF       _i, 1
0x059A	0x1903      	BTFSC      STATUS, 2
0x059B	0x0AE9      	INCF       _i+1, 1
;Seminarska.c,177 :: 		}
0x059C	0x2D77      	GOTO       L_main77
L_main78:
;Seminarska.c,178 :: 		}else{
0x059D	0x2D9F      	GOTO       L_main80
L_main76:
;Seminarska.c,179 :: 		greska();
0x059E	0x2236      	CALL       _greska
;Seminarska.c,180 :: 		}
L_main80:
;Seminarska.c,181 :: 		brStanici = 0;
0x059F	0x01A3      	CLRF       _brStanici
0x05A0	0x01A4      	CLRF       _brStanici+1
;Seminarska.c,182 :: 		clear();
0x05A1	0x2127      	CALL       _clear
;Seminarska.c,183 :: 		}
L_main73:
;Seminarska.c,184 :: 		}else if(kp == 47){  //Erase
0x05A2	0x2E3D      	GOTO       L_main81
L_main70:
0x05A3	0x082E      	MOVF       _kp, 0
0x05A4	0x3A2F      	XORLW      47
0x05A5	0x1D03      	BTFSS      STATUS, 2
0x05A6	0x2DD5      	GOTO       L_main82
;Seminarska.c,185 :: 		Lcd_Cmd(_LCD_CLEAR);
0x05A7	0x3001      	MOVLW      1
0x05A8	0x1683      	BSF        STATUS, 5
0x05A9	0x00E4      	MOVWF      FARG_Lcd_Cmd_out_char
0x05AA	0x201A      	CALL       _Lcd_Cmd
;Seminarska.c,186 :: 		temp = brStanici * 16;
0x05AB	0x3004      	MOVLW      4
0x05AC	0x00F0      	MOVWF      R0
0x05AD	0x0823      	MOVF       _brStanici, 0
0x05AE	0x00DD      	MOVWF      _temp
0x05AF	0x0824      	MOVF       _brStanici+1, 0
0x05B0	0x00DE      	MOVWF      _temp+1
0x05B1	0x0870      	MOVF       R0, 0
L__main128:
0x05B2	0x1903      	BTFSC      STATUS, 2
0x05B3	0x2DB9      	GOTO       L__main129
0x05B4	0x0DDD      	RLF        _temp, 1
0x05B5	0x0DDE      	RLF        _temp+1, 1
0x05B6	0x105D      	BCF        _temp, 0
0x05B7	0x3EFF      	ADDLW      255
0x05B8	0x2DB2      	GOTO       L__main128
L__main129:
;Seminarska.c,187 :: 		for(i = 0; i < 15; i++){
0x05B9	0x01E8      	CLRF       _i
0x05BA	0x01E9      	CLRF       _i+1
L_main83:
0x05BB	0x3080      	MOVLW      128
0x05BC	0x0669      	XORWF      _i+1, 0
0x05BD	0x00F0      	MOVWF      R0
0x05BE	0x3080      	MOVLW      128
0x05BF	0x0270      	SUBWF      R0, 0
0x05C0	0x1D03      	BTFSS      STATUS, 2
0x05C1	0x2DC4      	GOTO       L__main130
0x05C2	0x300F      	MOVLW      15
0x05C3	0x0268      	SUBWF      _i, 0
L__main130:
0x05C4	0x1803      	BTFSC      STATUS, 0
0x05C5	0x2DD4      	GOTO       L_main84
;Seminarska.c,188 :: 		EEPROM_Write(temp, 0);
0x05C6	0x085D      	MOVF       _temp, 0
0x05C7	0x1683      	BSF        STATUS, 5
0x05C8	0x00D9      	MOVWF      FARG_EEPROM_Write_Address
0x05C9	0x01DA      	CLRF       FARG_EEPROM_Write_data_
0x05CA	0x2213      	CALL       _EEPROM_Write
;Seminarska.c,189 :: 		temp +=1;
0x05CB	0x1283      	BCF        STATUS, 5
0x05CC	0x1303      	BCF        STATUS, 6
0x05CD	0x0ADD      	INCF       _temp, 1
0x05CE	0x1903      	BTFSC      STATUS, 2
0x05CF	0x0ADE      	INCF       _temp+1, 1
;Seminarska.c,187 :: 		for(i = 0; i < 15; i++){
0x05D0	0x0AE8      	INCF       _i, 1
0x05D1	0x1903      	BTFSC      STATUS, 2
0x05D2	0x0AE9      	INCF       _i+1, 1
;Seminarska.c,190 :: 		}
0x05D3	0x2DBB      	GOTO       L_main83
L_main84:
;Seminarska.c,191 :: 		}else{
0x05D4	0x2E3D      	GOTO       L_main86
L_main82:
;Seminarska.c,192 :: 		if(flagPlus){  //Ako stisneme +
0x05D5	0x0822      	MOVF       _flagPlus, 0
0x05D6	0x1903      	BTFSC      STATUS, 2
0x05D7	0x2DE8      	GOTO       L_main87
;Seminarska.c,193 :: 		linija[pomestuvanje] = oldState;
0x05D8	0x0847      	MOVF       _pomestuvanje, 0
0x05D9	0x00F0      	MOVWF      R0
0x05DA	0x0DF0      	RLF        R0, 1
0x05DB	0x1070      	BCF        R0, 0
0x05DC	0x0870      	MOVF       R0, 0
0x05DD	0x3EB8      	ADDLW      _linija
0x05DE	0x0084      	MOVWF      FSR
0x05DF	0x082F      	MOVF       _oldState, 0
0x05E0	0x0080      	MOVWF      INDF
0x05E1	0x0A84      	INCF       FSR, 1
0x05E2	0x0180      	CLRF       INDF
;Seminarska.c,194 :: 		oldState = 0;
0x05E3	0x01AF      	CLRF       _oldState
;Seminarska.c,195 :: 		pomestuvanje++;
0x05E4	0x0AC7      	INCF       _pomestuvanje, 1
;Seminarska.c,196 :: 		brCifri = 0;
0x05E5	0x01AD      	CLRF       _brCifri
;Seminarska.c,197 :: 		flagPlus = 0;
0x05E6	0x01A2      	CLRF       _flagPlus
;Seminarska.c,198 :: 		}else if(oldState == 76 || oldState == 74){ // J ili L
0x05E7	0x2E3D      	GOTO       L_main88
L_main87:
0x05E8	0x082F      	MOVF       _oldState, 0
0x05E9	0x3A4C      	XORLW      76
0x05EA	0x1903      	BTFSC      STATUS, 2
0x05EB	0x2DF1      	GOTO       L__main114
0x05EC	0x082F      	MOVF       _oldState, 0
0x05ED	0x3A4A      	XORLW      74
0x05EE	0x1903      	BTFSC      STATUS, 2
0x05EF	0x2DF1      	GOTO       L__main114
0x05F0	0x2E0D      	GOTO       L_main91
L__main114:
;Seminarska.c,199 :: 		linija[pomestuvanje] = oldState;
0x05F1	0x0847      	MOVF       _pomestuvanje, 0
0x05F2	0x00F0      	MOVWF      R0
0x05F3	0x0DF0      	RLF        R0, 1
0x05F4	0x1070      	BCF        R0, 0
0x05F5	0x0870      	MOVF       R0, 0
0x05F6	0x3EB8      	ADDLW      _linija
0x05F7	0x0084      	MOVWF      FSR
0x05F8	0x082F      	MOVF       _oldState, 0
0x05F9	0x0080      	MOVWF      INDF
0x05FA	0x0A84      	INCF       FSR, 1
0x05FB	0x0180      	CLRF       INDF
;Seminarska.c,200 :: 		oldState = 0;
0x05FC	0x01AF      	CLRF       _oldState
;Seminarska.c,201 :: 		pomestuvanje++;
0x05FD	0x0AC7      	INCF       _pomestuvanje, 1
;Seminarska.c,202 :: 		Lcd_Cmd(_LCD_CLEAR);
0x05FE	0x3001      	MOVLW      1
0x05FF	0x1683      	BSF        STATUS, 5
0x0600	0x00E4      	MOVWF      FARG_Lcd_Cmd_out_char
0x0601	0x201A      	CALL       _Lcd_Cmd
;Seminarska.c,203 :: 		Lcd_Out(1,1, "J ili L");
0x0602	0x3001      	MOVLW      1
0x0603	0x1683      	BSF        STATUS, 5
0x0604	0x00DE      	MOVWF      FARG_Lcd_Out_row
0x0605	0x3001      	MOVLW      1
0x0606	0x00DF      	MOVWF      FARG_Lcd_Out_column
0x0607	0x303F      	MOVLW      ?lstr3_Seminarska
0x0608	0x00E0      	MOVWF      FARG_Lcd_Out_text
0x0609	0x20E6      	CALL       _Lcd_Out
;Seminarska.c,204 :: 		brCifri = 0;
0x060A	0x1283      	BCF        STATUS, 5
0x060B	0x01AD      	CLRF       _brCifri
;Seminarska.c,205 :: 		}else{
0x060C	0x2E3D      	GOTO       L_main92
L_main91:
;Seminarska.c,206 :: 		if(oldState >= 48 && oldState <= 57){   // Ako e vnesena brojka
0x060D	0x3030      	MOVLW      48
0x060E	0x022F      	SUBWF      _oldState, 0
0x060F	0x1C03      	BTFSS      STATUS, 0
0x0610	0x2E3D      	GOTO       L_main95
0x0611	0x082F      	MOVF       _oldState, 0
0x0612	0x3C39      	SUBLW      57
0x0613	0x1C03      	BTFSS      STATUS, 0
0x0614	0x2E3D      	GOTO       L_main95
L__main113:
;Seminarska.c,207 :: 		brStanici = brStanici * 10 + (oldState - 48);
0x0615	0x0823      	MOVF       _brStanici, 0
0x0616	0x00F0      	MOVWF      R0
0x0617	0x0824      	MOVF       _brStanici+1, 0
0x0618	0x00F1      	MOVWF      R0+1
0x0619	0x300A      	MOVLW      10
0x061A	0x00F4      	MOVWF      R4
0x061B	0x3000      	MOVLW      0
0x061C	0x00F5      	MOVWF      R4+1
0x061D	0x2199      	CALL       _Mul_16X16_U
0x061E	0x3030      	MOVLW      48
0x061F	0x022F      	SUBWF      _oldState, 0
0x0620	0x00F2      	MOVWF      R2
0x0621	0x01F3      	CLRF       R2+1
0x0622	0x1C03      	BTFSS      STATUS, 0
0x0623	0x03F3      	DECF       R2+1, 1
0x0624	0x0872      	MOVF       R2, 0
0x0625	0x0770      	ADDWF      R0, 0
0x0626	0x00A3      	MOVWF      _brStanici
0x0627	0x0871      	MOVF       R0+1, 0
0x0628	0x1803      	BTFSC      STATUS, 0
0x0629	0x3E01      	ADDLW      1
0x062A	0x0773      	ADDWF      R2+1, 0
0x062B	0x00A4      	MOVWF      _brStanici+1
;Seminarska.c,208 :: 		Lcd_Out(1,1, "Vnesena Brojka");
0x062C	0x3001      	MOVLW      1
0x062D	0x1683      	BSF        STATUS, 5
0x062E	0x00DE      	MOVWF      FARG_Lcd_Out_row
0x062F	0x3001      	MOVLW      1
0x0630	0x00DF      	MOVWF      FARG_Lcd_Out_column
0x0631	0x3030      	MOVLW      ?lstr4_Seminarska
0x0632	0x00E0      	MOVWF      FARG_Lcd_Out_text
0x0633	0x20E6      	CALL       _Lcd_Out
;Seminarska.c,209 :: 		Delay_ms(10);
0x0634	0x301A      	MOVLW      26
0x0635	0x00FC      	MOVWF      R12
0x0636	0x30F8      	MOVLW      248
0x0637	0x00FD      	MOVWF      R13
L_main96:
0x0638	0x0BFD      	DECFSZ     R13, 1
0x0639	0x2E38      	GOTO       L_main96
0x063A	0x0BFC      	DECFSZ     R12, 1
0x063B	0x2E38      	GOTO       L_main96
0x063C	0x0000      	NOP
;Seminarska.c,210 :: 		}
L_main95:
;Seminarska.c,211 :: 		}
L_main92:
L_main88:
;Seminarska.c,212 :: 		}
L_main86:
L_main81:
L_main69:
L_main67:
;Seminarska.c,213 :: 		}while(1);
0x063D	0x2B36      	GOTO       L_main5
L_main6:
;Seminarska.c,214 :: 		}else{
0x063E	0x2EF7      	GOTO       L_main97
L_main4:
;Seminarska.c,215 :: 		i = 0;
0x063F	0x1283      	BCF        STATUS, 5
0x0640	0x01E8      	CLRF       _i
0x0641	0x01E9      	CLRF       _i+1
;Seminarska.c,216 :: 		brCifri = 0;
0x0642	0x01AD      	CLRF       _brCifri
;Seminarska.c,217 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0643	0x3001      	MOVLW      1
0x0644	0x1683      	BSF        STATUS, 5
0x0645	0x00E4      	MOVWF      FARG_Lcd_Cmd_out_char
0x0646	0x201A      	CALL       _Lcd_Cmd
;Seminarska.c,218 :: 		Lcd_Out(1,1, "Korisnicki");
0x0647	0x3001      	MOVLW      1
0x0648	0x1683      	BSF        STATUS, 5
0x0649	0x00DE      	MOVWF      FARG_Lcd_Out_row
0x064A	0x3001      	MOVLW      1
0x064B	0x00DF      	MOVWF      FARG_Lcd_Out_column
0x064C	0x3048      	MOVLW      ?lstr5_Seminarska
0x064D	0x00E0      	MOVWF      FARG_Lcd_Out_text
0x064E	0x20E6      	CALL       _Lcd_Out
;Seminarska.c,219 :: 		strcpy(txt, "GET TIME");
0x064F	0x30A0      	MOVLW      _txt
0x0650	0x00D9      	MOVWF      FARG_strcpy_to
0x0651	0x3054      	MOVLW      ?lstr6_Seminarska
0x0652	0x00DA      	MOVWF      FARG_strcpy_from
0x0653	0x2131      	CALL       _strcpy
;Seminarska.c,220 :: 		while(1){
L_main98:
;Seminarska.c,221 :: 		if (UART1_Data_Ready()) {
0x0654	0x2290      	CALL       _UART1_Data_Ready
0x0655	0x0870      	MOVF       R0, 0
0x0656	0x1903      	BTFSC      STATUS, 2
0x0657	0x2EF6      	GOTO       L_main100
;Seminarska.c,222 :: 		if(flag){
0x0658	0x0853      	MOVF       _flag, 0
0x0659	0x1903      	BTFSC      STATUS, 2
0x065A	0x2E78      	GOTO       L_main101
;Seminarska.c,223 :: 		uart_rd = UART1_Read();
0x065B	0x218E      	CALL       _UART1_Read
0x065C	0x0870      	MOVF       R0, 0
0x065D	0x1683      	BSF        STATUS, 5
0x065E	0x00B7      	MOVWF      _uart_rd
;Seminarska.c,224 :: 		if(uart_rd == txt[i]){
0x065F	0x1283      	BCF        STATUS, 5
0x0660	0x0868      	MOVF       _i, 0
0x0661	0x3EA0      	ADDLW      _txt
0x0662	0x0084      	MOVWF      FSR
0x0663	0x0870      	MOVF       R0, 0
0x0664	0x0600      	XORWF      INDF, 0
0x0665	0x1D03      	BTFSS      STATUS, 2
0x0666	0x2E6B      	GOTO       L_main102
;Seminarska.c,225 :: 		i++;
0x0667	0x0AE8      	INCF       _i, 1
0x0668	0x1903      	BTFSC      STATUS, 2
0x0669	0x0AE9      	INCF       _i+1, 1
;Seminarska.c,226 :: 		}else{
0x066A	0x2E6D      	GOTO       L_main103
L_main102:
;Seminarska.c,227 :: 		i = 0;
0x066B	0x01E8      	CLRF       _i
0x066C	0x01E9      	CLRF       _i+1
;Seminarska.c,228 :: 		}
L_main103:
;Seminarska.c,229 :: 		if(i == 7){
0x066D	0x3000      	MOVLW      0
0x066E	0x0669      	XORWF      _i+1, 0
0x066F	0x1D03      	BTFSS      STATUS, 2
0x0670	0x2E73      	GOTO       L__main131
0x0671	0x3007      	MOVLW      7
0x0672	0x0668      	XORWF      _i, 0
L__main131:
0x0673	0x1D03      	BTFSS      STATUS, 2
0x0674	0x2E77      	GOTO       L_main104
;Seminarska.c,230 :: 		flag = 1;
0x0675	0x3001      	MOVLW      1
0x0676	0x00D3      	MOVWF      _flag
;Seminarska.c,231 :: 		}
L_main104:
;Seminarska.c,232 :: 		}else{
0x0677	0x2EB8      	GOTO       L_main105
L_main101:
;Seminarska.c,233 :: 		uart_rd = UART1_Read();
0x0678	0x218E      	CALL       _UART1_Read
0x0679	0x0870      	MOVF       R0, 0
0x067A	0x1683      	BSF        STATUS, 5
0x067B	0x00B7      	MOVWF      _uart_rd
;Seminarska.c,234 :: 		if(flagDveTocki == 0){
0x067C	0x1283      	BCF        STATUS, 5
0x067D	0x0866      	MOVF       _flagDveTocki, 0
0x067E	0x3A00      	XORLW      0
0x067F	0x1D03      	BTFSS      STATUS, 2
0x0680	0x2E9A      	GOTO       L_main106
;Seminarska.c,235 :: 		saati += brCifri * 10 + (uart_rd - 48);
0x0681	0x082D      	MOVF       _brCifri, 0
0x0682	0x00F0      	MOVWF      R0
0x0683	0x300A      	MOVLW      10
0x0684	0x00F4      	MOVWF      R4
0x0685	0x2297      	CALL       _Mul_8X8_U
0x0686	0x3030      	MOVLW      48
0x0687	0x1683      	BSF        STATUS, 5
0x0688	0x0237      	SUBWF      _uart_rd, 0
0x0689	0x00F1      	MOVWF      R1
0x068A	0x0871      	MOVF       R1, 0
0x068B	0x07F0      	ADDWF      R0, 1
0x068C	0x0870      	MOVF       R0, 0
0x068D	0x1283      	BCF        STATUS, 5
0x068E	0x07EC      	ADDWF      _saati, 1
;Seminarska.c,236 :: 		brCifri++;
0x068F	0x0AAD      	INCF       _brCifri, 1
;Seminarska.c,237 :: 		if(uart_rd == 58){
0x0690	0x1683      	BSF        STATUS, 5
0x0691	0x0837      	MOVF       _uart_rd, 0
0x0692	0x3A3A      	XORLW      58
0x0693	0x1D03      	BTFSS      STATUS, 2
0x0694	0x2E99      	GOTO       L_main107
;Seminarska.c,238 :: 		flagDveTocki = 1;
0x0695	0x3001      	MOVLW      1
0x0696	0x1283      	BCF        STATUS, 5
0x0697	0x00E6      	MOVWF      _flagDveTocki
;Seminarska.c,239 :: 		brCifri = 0;
0x0698	0x01AD      	CLRF       _brCifri
;Seminarska.c,240 :: 		}
L_main107:
;Seminarska.c,241 :: 		}else{
0x0699	0x2EB8      	GOTO       L_main108
L_main106:
0x069A	0x1283      	BCF        STATUS, 5
;Seminarska.c,242 :: 		minuti += brCifri * 10 + (uart_rd - 48);
0x069B	0x082D      	MOVF       _brCifri, 0
0x069C	0x00F0      	MOVWF      R0
0x069D	0x300A      	MOVLW      10
0x069E	0x00F4      	MOVWF      R4
0x069F	0x2297      	CALL       _Mul_8X8_U
0x06A0	0x3030      	MOVLW      48
0x06A1	0x1683      	BSF        STATUS, 5
0x06A2	0x0237      	SUBWF      _uart_rd, 0
0x06A3	0x00F1      	MOVWF      R1
0x06A4	0x0871      	MOVF       R1, 0
0x06A5	0x07F0      	ADDWF      R0, 1
0x06A6	0x0870      	MOVF       R0, 0
0x06A7	0x1283      	BCF        STATUS, 5
0x06A8	0x07ED      	ADDWF      _minuti, 1
;Seminarska.c,243 :: 		brCifri++;
0x06A9	0x0AAD      	INCF       _brCifri, 1
;Seminarska.c,244 :: 		if(brCifri == 2){
0x06AA	0x082D      	MOVF       _brCifri, 0
0x06AB	0x3A02      	XORLW      2
0x06AC	0x1D03      	BTFSS      STATUS, 2
0x06AD	0x2EB8      	GOTO       L_main109
;Seminarska.c,245 :: 		saati *= 60;
0x06AE	0x086C      	MOVF       _saati, 0
0x06AF	0x00F0      	MOVWF      R0
0x06B0	0x303C      	MOVLW      60
0x06B1	0x00F4      	MOVWF      R4
0x06B2	0x2297      	CALL       _Mul_8X8_U
0x06B3	0x0870      	MOVF       R0, 0
0x06B4	0x00EC      	MOVWF      _saati
;Seminarska.c,246 :: 		minuti += saati;
0x06B5	0x0870      	MOVF       R0, 0
0x06B6	0x07ED      	ADDWF      _minuti, 1
;Seminarska.c,247 :: 		break;
0x06B7	0x2EF7      	GOTO       L_main99
;Seminarska.c,248 :: 		}
L_main109:
;Seminarska.c,249 :: 		}
L_main108:
;Seminarska.c,250 :: 		}
L_main105:
0x06B8	0x1283      	BCF        STATUS, 5
;Seminarska.c,253 :: 		i=0;
0x06B9	0x01E8      	CLRF       _i
0x06BA	0x01E9      	CLRF       _i+1
;Seminarska.c,254 :: 		for(i=0;i<16;i++) {
0x06BB	0x01E8      	CLRF       _i
0x06BC	0x01E9      	CLRF       _i+1
L_main110:
0x06BD	0x3080      	MOVLW      128
0x06BE	0x0669      	XORWF      _i+1, 0
0x06BF	0x00F0      	MOVWF      R0
0x06C0	0x3080      	MOVLW      128
0x06C1	0x0270      	SUBWF      R0, 0
0x06C2	0x1D03      	BTFSS      STATUS, 2
0x06C3	0x2EC6      	GOTO       L__main132
0x06C4	0x3010      	MOVLW      16
0x06C5	0x0268      	SUBWF      _i, 0
L__main132:
0x06C6	0x1803      	BTFSC      STATUS, 0
0x06C7	0x2EE7      	GOTO       L_main111
;Seminarska.c,255 :: 		vreme=EEPROM_Read(i*16+11);
0x06C8	0x3004      	MOVLW      4
0x06C9	0x00F0      	MOVWF      R0
0x06CA	0x0868      	MOVF       _i, 0
0x06CB	0x1683      	BSF        STATUS, 5
0x06CC	0x00D9      	MOVWF      FARG_EEPROM_Read_Address
0x06CD	0x0870      	MOVF       R0, 0
L__main133:
0x06CE	0x1903      	BTFSC      STATUS, 2
0x06CF	0x2ED4      	GOTO       L__main134
0x06D0	0x0DD9      	RLF        FARG_EEPROM_Read_Address, 1
0x06D1	0x1059      	BCF        FARG_EEPROM_Read_Address, 0
0x06D2	0x3EFF      	ADDLW      255
0x06D3	0x2ECE      	GOTO       L__main133
L__main134:
0x06D4	0x300B      	MOVLW      11
0x06D5	0x07D9      	ADDWF      FARG_EEPROM_Read_Address, 1
0x06D6	0x2283      	CALL       _EEPROM_Read
0x06D7	0x0870      	MOVF       R0, 0
0x06D8	0x1303      	BCF        STATUS, 6
0x06D9	0x00E7      	MOVWF      _vreme
;Seminarska.c,256 :: 		Lcd_Out(1,1,vreme);
0x06DA	0x3001      	MOVLW      1
0x06DB	0x1683      	BSF        STATUS, 5
0x06DC	0x00DE      	MOVWF      FARG_Lcd_Out_row
0x06DD	0x3001      	MOVLW      1
0x06DE	0x00DF      	MOVWF      FARG_Lcd_Out_column
0x06DF	0x0870      	MOVF       R0, 0
0x06E0	0x00E0      	MOVWF      FARG_Lcd_Out_text
0x06E1	0x20E6      	CALL       _Lcd_Out
;Seminarska.c,254 :: 		for(i=0;i<16;i++) {
0x06E2	0x1283      	BCF        STATUS, 5
0x06E3	0x0AE8      	INCF       _i, 1
0x06E4	0x1903      	BTFSC      STATUS, 2
0x06E5	0x0AE9      	INCF       _i+1, 1
;Seminarska.c,258 :: 		}
0x06E6	0x2EBD      	GOTO       L_main110
L_main111:
;Seminarska.c,260 :: 		Lcd_Cmd(_LCD_CLEAR);
0x06E7	0x3001      	MOVLW      1
0x06E8	0x1683      	BSF        STATUS, 5
0x06E9	0x00E4      	MOVWF      FARG_Lcd_Cmd_out_char
0x06EA	0x201A      	CALL       _Lcd_Cmd
;Seminarska.c,261 :: 		Lcd_Out(1,1, txt);
0x06EB	0x3001      	MOVLW      1
0x06EC	0x1683      	BSF        STATUS, 5
0x06ED	0x00DE      	MOVWF      FARG_Lcd_Out_row
0x06EE	0x3001      	MOVLW      1
0x06EF	0x00DF      	MOVWF      FARG_Lcd_Out_column
0x06F0	0x30A0      	MOVLW      _txt
0x06F1	0x00E0      	MOVWF      FARG_Lcd_Out_text
0x06F2	0x20E6      	CALL       _Lcd_Out
;Seminarska.c,262 :: 		UART1_Write(uart_rd);
0x06F3	0x0837      	MOVF       _uart_rd, 0
0x06F4	0x00D9      	MOVWF      FARG_UART1_Write_data_
0x06F5	0x2279      	CALL       _UART1_Write
;Seminarska.c,263 :: 		}
L_main100:
;Seminarska.c,264 :: 		}
0x06F6	0x2E54      	GOTO       L_main98
L_main99:
;Seminarska.c,265 :: 		}
L_main97:
;Seminarska.c,266 :: 		}
0x06F7	0x2B31      	GOTO       L_main2
;Seminarska.c,267 :: 		}
L_end_main:
0x06F8	0x2EF8      	GOTO       $+0
; end of _main
0x074A	0x3020      	MOVLW      32
0x074B	0x0084      	MOVWF      FSR
0x074C	0x304C      	MOVLW      76
0x074D	0x1283      	BCF        STATUS, 5
0x074E	0x1303      	BCF        STATUS, 6
0x074F	0x00F0      	MOVWF      R0
0x0750	0x30FE      	MOVLW      254
0x0751	0x00EE      	MOVWF      ___DoICPAddr
0x0752	0x3006      	MOVLW      6
0x0753	0x00EF      	MOVWF      111
0x0754	0x22B0      	CALL       688
0x0755	0x0008      	RETURN
;Seminarska.c,0 :: ?ICS_typeUser
0x06FE	0x3400 ;?ICS_typeUser+0
; end of ?ICS_typeUser
;Seminarska.c,0 :: ?ICS_flag3
0x06FF	0x3400 ;?ICS_flag3+0
; end of ?ICS_flag3
;Seminarska.c,0 :: ?ICS_flagPlus
0x0700	0x3400 ;?ICS_flagPlus+0
; end of ?ICS_flagPlus
;Seminarska.c,0 :: ?ICS_brStanici
0x0701	0x3400 ;?ICS_brStanici+0
0x0702	0x3400 ;?ICS_brStanici+1
; end of ?ICS_brStanici
;Seminarska.c,0 :: ?ICS?lstr1_Seminarska
0x0703	0x3447 ;?ICS?lstr1_Seminarska+0
0x0704	0x3472 ;?ICS?lstr1_Seminarska+1
0x0705	0x3465 ;?ICS?lstr1_Seminarska+2
0x0706	0x3473 ;?ICS?lstr1_Seminarska+3
0x0707	0x3468 ;?ICS?lstr1_Seminarska+4
0x0708	0x346B ;?ICS?lstr1_Seminarska+5
0x0709	0x3461 ;?ICS?lstr1_Seminarska+6
0x070A	0x3400 ;?ICS?lstr1_Seminarska+7
; end of ?ICS?lstr1_Seminarska
;Seminarska.c,0 :: ?ICS_brCifri
0x070B	0x3400 ;?ICS_brCifri+0
; end of ?ICS_brCifri
;Seminarska.c,0 :: ?ICS_kp
0x070C	0x3400 ;?ICS_kp+0
; end of ?ICS_kp
;Seminarska.c,0 :: ?ICS_oldState
0x070D	0x3400 ;?ICS_oldState+0
; end of ?ICS_oldState
;Seminarska.c,0 :: ?ICS?lstr4_Seminarska
0x070E	0x3456 ;?ICS?lstr4_Seminarska+0
0x070F	0x346E ;?ICS?lstr4_Seminarska+1
0x0710	0x3465 ;?ICS?lstr4_Seminarska+2
0x0711	0x3473 ;?ICS?lstr4_Seminarska+3
0x0712	0x3465 ;?ICS?lstr4_Seminarska+4
0x0713	0x346E ;?ICS?lstr4_Seminarska+5
0x0714	0x3461 ;?ICS?lstr4_Seminarska+6
0x0715	0x3420 ;?ICS?lstr4_Seminarska+7
0x0716	0x3442 ;?ICS?lstr4_Seminarska+8
0x0717	0x3472 ;?ICS?lstr4_Seminarska+9
0x0718	0x346F ;?ICS?lstr4_Seminarska+10
0x0719	0x346A ;?ICS?lstr4_Seminarska+11
0x071A	0x346B ;?ICS?lstr4_Seminarska+12
0x071B	0x3461 ;?ICS?lstr4_Seminarska+13
0x071C	0x3400 ;?ICS?lstr4_Seminarska+14
; end of ?ICS?lstr4_Seminarska
;Seminarska.c,0 :: ?ICS?lstr3_Seminarska
0x071D	0x344A ;?ICS?lstr3_Seminarska+0
0x071E	0x3420 ;?ICS?lstr3_Seminarska+1
0x071F	0x3469 ;?ICS?lstr3_Seminarska+2
0x0720	0x346C ;?ICS?lstr3_Seminarska+3
0x0721	0x3469 ;?ICS?lstr3_Seminarska+4
0x0722	0x3420 ;?ICS?lstr3_Seminarska+5
0x0723	0x344C ;?ICS?lstr3_Seminarska+6
0x0724	0x3400 ;?ICS?lstr3_Seminarska+7
; end of ?ICS?lstr3_Seminarska
;Seminarska.c,0 :: ?ICS_pomestuvanje
0x0725	0x3400 ;?ICS_pomestuvanje+0
; end of ?ICS_pomestuvanje
;Seminarska.c,0 :: ?ICS?lstr5_Seminarska
0x0726	0x344B ;?ICS?lstr5_Seminarska+0
0x0727	0x346F ;?ICS?lstr5_Seminarska+1
0x0728	0x3472 ;?ICS?lstr5_Seminarska+2
0x0729	0x3469 ;?ICS?lstr5_Seminarska+3
0x072A	0x3473 ;?ICS?lstr5_Seminarska+4
0x072B	0x346E ;?ICS?lstr5_Seminarska+5
0x072C	0x3469 ;?ICS?lstr5_Seminarska+6
0x072D	0x3463 ;?ICS?lstr5_Seminarska+7
0x072E	0x346B ;?ICS?lstr5_Seminarska+8
0x072F	0x3469 ;?ICS?lstr5_Seminarska+9
0x0730	0x3400 ;?ICS?lstr5_Seminarska+10
; end of ?ICS?lstr5_Seminarska
;Seminarska.c,0 :: ?ICS_flag
0x0731	0x3400 ;?ICS_flag+0
; end of ?ICS_flag
;Seminarska.c,0 :: ?ICS?lstr6_Seminarska
0x0732	0x3447 ;?ICS?lstr6_Seminarska+0
0x0733	0x3445 ;?ICS?lstr6_Seminarska+1
0x0734	0x3454 ;?ICS?lstr6_Seminarska+2
0x0735	0x3420 ;?ICS?lstr6_Seminarska+3
0x0736	0x3454 ;?ICS?lstr6_Seminarska+4
0x0737	0x3449 ;?ICS?lstr6_Seminarska+5
0x0738	0x344D ;?ICS?lstr6_Seminarska+6
0x0739	0x3445 ;?ICS?lstr6_Seminarska+7
0x073A	0x3400 ;?ICS?lstr6_Seminarska+8
; end of ?ICS?lstr6_Seminarska
;Seminarska.c,0 :: ?ICS_temp
0x073B	0x3400 ;?ICS_temp+0
0x073C	0x3400 ;?ICS_temp+1
; end of ?ICS_temp
;Seminarska.c,0 :: ?ICS_flagTime
0x073D	0x3400 ;?ICS_flagTime+0
; end of ?ICS_flagTime
;Seminarska.c,0 :: ?ICS?lstr2_Seminarska
0x073E	0x3456 ;?ICS?lstr2_Seminarska+0
0x073F	0x346E ;?ICS?lstr2_Seminarska+1
0x0740	0x3465 ;?ICS?lstr2_Seminarska+2
0x0741	0x3473 ;?ICS?lstr2_Seminarska+3
0x0742	0x3469 ;?ICS?lstr2_Seminarska+4
0x0743	0x3400 ;?ICS?lstr2_Seminarska+5
; end of ?ICS?lstr2_Seminarska
;Seminarska.c,0 :: ?ICS_flagDveTocki
0x0744	0x3400 ;?ICS_flagDveTocki+0
; end of ?ICS_flagDveTocki
;Seminarska.c,0 :: ?ICS_vreme
0x0745	0x3400 ;?ICS_vreme+0
; end of ?ICS_vreme
;Seminarska.c,0 :: ?ICS_i
0x0746	0x3400 ;?ICS_i+0
0x0747	0x3400 ;?ICS_i+1
; end of ?ICS_i
;Seminarska.c,0 :: ?ICS_tmp
0x0748	0x3400 ;?ICS_tmp+0
0x0749	0x3400 ;?ICS_tmp+1
; end of ?ICS_tmp
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [3]    _Delay_1us
0x0006      [13]    _Delay_5500us
0x0013       [7]    _Delay_50us
0x001A      [94]    _Lcd_Cmd
0x0078       [9]    _Lcd_Chr_CP
0x0081       [8]    _Delay_10us
0x0089       [8]    _Delay_22us
0x0091      [29]    _Div_16X16_U
0x00AE      [49]    _Keypad_Key_Press
0x00DF       [7]    _____DoICP
0x00E6      [65]    _Lcd_Out
0x0127      [10]    _clear
0x0131      [27]    _strcpy
0x014C      [66]    _WordToStr
0x018E      [11]    _UART1_Read
0x0199      [43]    _Mul_16X16_U
0x01C4      [79]    _Lcd_Init
0x0213      [35]    _EEPROM_Write
0x0236      [31]    _greska
0x0255      [36]    _ADC_Read
0x0279      [10]    _UART1_Write
0x0283      [13]    _EEPROM_Read
0x0290       [7]    _UART1_Data_Ready
0x0297      [25]    _Mul_8X8_U
0x02B0      [12]    ___CC2DW
0x02BC      [15]    _Keypad_Key_Click
0x02CB       [5]    _Keypad_Init
0x02D0      [19]    _ADC_Init
0x02E3      [16]    _UART1_Init
0x02F3    [1029]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [0]    RB2_bit
0x0006       [0]    LCD_D6
0x0006       [0]    RB4_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB5_bit
0x0006       [0]    RB0_bit
0x0006       [0]    LCD_D7
0x0006       [0]    LCD_RS
0x0006       [0]    LCD_D4
0x0006       [0]    RB1_bit
0x0006       [0]    LCD_EN
0x0006       [0]    LCD_D5
0x0008       [1]    PORTD
0x0008       [1]    keypadPort
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0020       [1]    _typeUser
0x0021       [1]    _flag3
0x0022       [1]    _flagPlus
0x0023       [2]    _brStanici
0x0025       [8]    ?lstr1_Seminarska
0x002D       [1]    _brCifri
0x002E       [1]    _kp
0x002F       [1]    _oldState
0x0030      [15]    ?lstr4_Seminarska
0x003F       [8]    ?lstr3_Seminarska
0x0047       [1]    _pomestuvanje
0x0048      [11]    ?lstr5_Seminarska
0x0053       [1]    _flag
0x0054       [9]    ?lstr6_Seminarska
0x005D       [2]    _temp
0x005F       [1]    _flagTime
0x0060       [6]    ?lstr2_Seminarska
0x0066       [1]    _flagDveTocki
0x0067       [1]    _vreme
0x0068       [2]    _i
0x006A       [2]    _tmp
0x006C       [1]    _saati
0x006D       [1]    _minuti
0x006E       [2]    ___DoICPAddr
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [0]    LCD_D5_Direction
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    LCD_D7_Direction
0x0086       [0]    LCD_D6_Direction
0x0086       [0]    LCD_D4_Direction
0x0086       [0]    LCD_EN_Direction
0x0086       [0]    LCD_RS_Direction
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB2_bit
0x0086       [0]    TRISB1_bit
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC7_bit
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009A       [1]    SPBRGH
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
0x00A0      [20]    _txt
0x00B4       [3]    _ADC_Get_Sample_Ptr
0x00B7       [1]    _uart_rd
0x00B8      [32]    _linija
0x00D8       [0]    __Lib_Lcd_cmd_status
0x00D9       [1]    FARG_UART1_Write_data_
0x00D9       [1]    Keypad_Key_Click_rslt_L0
0x00D9       [1]    FARG_ADC_Read_channel
0x00D9       [1]    FARG_strcpy_to
0x00D9       [2]    FARG_WordToStr_input
0x00D9       [1]    FARG_EEPROM_Write_Address
0x00D9       [1]    FARG_EEPROM_Read_Address
0x00DA       [1]    FARG_strcpy_from
0x00DA       [1]    FARG_EEPROM_Write_data_
0x00DB       [1]    FARG_WordToStr_output
0x00DC       [1]    WordToStr_len_L0
0x00DD       [1]    FLOC__WordToStr
0x00DE       [1]    Keypad_Key_Press_rslt_L0
0x00DE       [1]    FARG_Lcd_Out_row
0x00DF       [1]    Keypad_Key_Press_kdata_L0
0x00DF       [1]    FARG_Lcd_Out_column
0x00E0       [1]    Keypad_Key_Press_loc_L0
0x00E0       [1]    FARG_Lcd_Out_text
0x00E1       [1]    Lcd_Out_i_L0
0x00E1       [1]    Keypad_Key_Press_rowcnt_L0
0x00E2       [1]    Keypad_Key_Press_shifter_L0
0x00E3       [1]    FARG_Lcd_Chr_CP_out_char
0x00E4       [1]    FARG_Lcd_Cmd_out_char
0x0107       [0]    C1ON_bit
0x0108       [0]    C2ON_bit
0x010C       [1]    EEDATA
0x010D       [1]    EEADR
0x0188       [1]    ANSEL
0x0189       [1]    ANSELH
0x018C       [1]    EECON1
0x018D       [1]    EECON2
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x06FE       [1]    ?ICS_typeUser
0x06FF       [1]    ?ICS_flag3
0x0700       [1]    ?ICS_flagPlus
0x0701       [2]    ?ICS_brStanici
0x0703       [8]    ?ICS?lstr1_Seminarska
0x070B       [1]    ?ICS_brCifri
0x070C       [1]    ?ICS_kp
0x070D       [1]    ?ICS_oldState
0x070E      [15]    ?ICS?lstr4_Seminarska
0x071D       [8]    ?ICS?lstr3_Seminarska
0x0725       [1]    ?ICS_pomestuvanje
0x0726      [11]    ?ICS?lstr5_Seminarska
0x0731       [1]    ?ICS_flag
0x0732       [9]    ?ICS?lstr6_Seminarska
0x073B       [2]    ?ICS_temp
0x073D       [1]    ?ICS_flagTime
0x073E       [6]    ?ICS?lstr2_Seminarska
0x0744       [1]    ?ICS_flagDveTocki
0x0745       [1]    ?ICS_vreme
0x0746       [2]    ?ICS_i
0x0748       [2]    ?ICS_tmp
//** Label List: ** 
//----------------------------------------------
  L_greska0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_main61
  L_main62
  L_main63
  L_main64
  L_main65
  L_main66
  L_main67
  L_main68
  L_main69
  L_main70
  L_main71
  L_main72
  L_main73
  L_main74
  L_main75
  L_main76
  L_main77
  L_main78
  L_main79
  L_main80
  L_main81
  L_main82
  L_main83
  L_main84
  L_main85
  L_main86
  L_main87
  L_main88
  L_main89
  L_main90
  L_main91
  L_main92
  L_main93
  L_main94
  L_main95
  L_main96
  L_main97
  L_main98
  L_main99
  L_main100
  L_main101
  L_main102
  L_main103
  L_main104
  L_main105
  L_main106
  L_main107
  L_main108
  L_main109
  L_main110
  L_main111
  L_main112
  L__main113
  L__main114
  L__main115
  L__main116
  L__main117
  L_end_greska
  _greska
  L_end_clear
  _clear
  L_end_main
  _main
  L__main121
  L__main122
  L__main123
  L__main124
  L__main125
  L__main126
  L__main127
  L__main128
  L__main129
  L__main130
  L__main131
  L__main132
  L__main133
  L__main134
  L_ADC_Get_Sample0
  L_ADC_Get_Sample1
  L_ADC_Read2
  L_ADC_Read3
  L_end_ADC_Init
  _ADC_Init
  L_end_ADC_Get_Sample
  _ADC_Get_Sample
  L_end_ADC_Read
  _ADC_Read
  L_ByteToStr0
  L_ByteToStr1
  L_ByteToStr2
  L_ByteToStr3
  L_ByteToStr4
  L_ByteToStr5
  L_WordToStr6
  L_WordToStr7
  L_WordToStr8
  L_WordToStr9
  L_WordToStr10
  L_WordToStr11
  L_WordToStrWithZeros12
  L_WordToStrWithZeros13
  L_WordToStrWithZeros14
  L_WordToStrWithZeros15
  L_WordToStrWithZeros16
  L_ShortToStr17
  L_ShortToStr18
  L_ShortToStr19
  L_ShortToStr20
  L_ShortToStr21
  L_ShortToStr22
  L_IntToStr23
  L_IntToStr24
  L_IntToStr25
  L_IntToStr26
  L_IntToStr27
  L_IntToStr28
  L_IntToStrWithZeros29
  L_IntToStrWithZeros30
  L_IntToStrWithZeros31
  L_IntToStrWithZeros32
  L_IntToStrWithZeros33
  L_IntToStrWithZeros34
  L_IntToStrWithZeros35
  L_IntToStrWithZeros36
  L_IntToStrWithZeros37
  L_LongWordToStr38
  L_LongWordToStr39
  L_LongWordToStr40
  L_LongWordToStr41
  L_LongWordToStr42
  L_LongWordToStr43
  L_LongWordToStrWithZeros44
  L_LongWordToStrWithZeros45
  L_LongWordToStrWithZeros46
  L_LongWordToStrWithZeros47
  L_LongWordToStrWithZeros48
  L_LongToStr49
  L_LongToStr50
  L_LongToStr51
  L_LongToStr52
  L_LongToStr53
  L_LongToStr54
  L_LongIntToStrWithZeros55
  L_LongIntToStrWithZeros56
  L_LongIntToStrWithZeros57
  L_LongIntToStrWithZeros58
  L_LongIntToStrWithZeros59
  L_LongIntToStrWithZeros60
  L_LongIntToStrWithZeros61
  L_LongIntToStrWithZeros62
  L_LongIntToStrWithZeros63
  L_Dec2Bcd64
  L_Dec2Bcd65
  L_Rtrim66
  L_Rtrim67
  L_Rtrim68
  L_Rtrim69
  L_Ltrim70
  L_Ltrim71
  L_Ltrim72
  L_Ltrim73
  L_Ltrim74
  L_Ltrim75
  L_FloatToStr76
  L_FloatToStr77
  L_FloatToStr78
  L_FloatToStr79
  L_FloatToStr80
  L_FloatToStr81
  L_FloatToStr82
  L_FloatToStr83
  L_FloatToStr84
  L_FloatToStr85
  L_FloatToStr86
  L_FloatToStr87
  L_FloatToStr88
  L_FloatToStr89
  L_FloatToStr90
  L_FloatToStr91
  L_FloatToStr92
  L_FloatToStr93
  L_FloatToStr94
  L_FloatToStr95
  L_FloatToStr96
  L_FloatToStr97
  L__Rtrim98
  L__Ltrim99
  L__FloatToStr100
  L_end_ByteToHex
  _ByteToHex
  L_end_ShortToHex
  _ShortToHex
  L_end_WordToHex
  _WordToHex
  L_end_IntToHex
  _IntToHex
  L_end_LongWordToHex
  _LongWordToHex
  L_end_LongIntToHex
  _LongIntToHex
  L_end_ByteToStr
  _ByteToStr
  L_end_WordToStr
  _WordToStr
  L__WordToStr109
  L_end_WordToStrWithZeros
  _WordToStrWithZeros
  L__WordToStrWithZeros111
  L_end_ShortToStr
  _ShortToStr
  L__ShortToStr113
  L_end_IntToStr
  _IntToStr
  L__IntToStr115
  L__IntToStr116
  L_end_IntToStrWithZeros
  _IntToStrWithZeros
  L__IntToStrWithZeros118
  L__IntToStrWithZeros119
  L__IntToStrWithZeros120
  L_end_LongWordToStr
  _LongWordToStr
  L__LongWordToStr122
  L__LongWordToStr123
  L_end_LongWordToStrWithZeros
  _LongWordToStrWithZeros
  L__LongWordToStrWithZeros125
  L_end_LongToStr
  _LongToStr
  L__LongToStr127
  L__LongToStr128
  L_end_LongIntToStrWithZeros
  _LongIntToStrWithZeros
  L__LongIntToStrWithZeros130
  L__LongIntToStrWithZeros131
  L__LongIntToStrWithZeros132
  L_end_Dec2Bcd
  _Dec2Bcd
  L_end_Bcd2Dec
  _Bcd2Dec
  L_end_Bcd2Dec16
  _Bcd2Dec16
  L__Bcd2Dec16136
  L__Bcd2Dec16137
  L_end_Dec2Bcd16
  _Dec2Bcd16
  L__Dec2Bcd16139
  L__Dec2Bcd16140
  L_end_Rtrim
  _Rtrim
  L_end_Ltrim
  _Ltrim
  L_end_FloatToStr
  _FloatToStr
  L__FloatToStr144
  L__FloatToStr145
  L__FloatToStr146
  L__FloatToStr147
  L__FloatToStr148
  L_memchr0
  L_memchr1
  L_memchr2
  L_memchr3
  L_memcmp4
  L_memcmp5
  L_memcmp6
  L_memcpy7
  L_memcpy8
  L_memmove9
  L_memmove10
  L_memmove11
  L_memmove12
  L_memmove13
  L_memmove14
  L_memmove15
  L_memmove16
  L_memmove17
  L_memmove18
  L_memmove19
  L_memset20
  L_memset21
  L_strcat22
  L_strcat23
  L_strcat24
  L_strcat25
  L_strchr26
  L_strchr27
  L_strchr28
  L_strchr29
  L_strcmp30
  L_strcmp31
  L_strcmp32
  L_strcmp33
  L_strcpy34
  L_strcpy35
  L_strlen36
  L_strlen37
  L_strncat38
  L_strncat39
  L_strncat40
  L_strncat41
  L_strncat42
  L_strncat43
  L_strncat44
  L_strncpy45
  L_strncpy46
  L_strncpy47
  L_strncpy48
  L_strncpy49
  L_strspn50
  L_strspn51
  L_strspn52
  L_strspn53
  L_strcspn54
  L_strcspn55
  L_strcspn56
  L_strcspn57
  L_strncmp58
  L_strncmp59
  L_strncmp60
  L_strncmp61
  L_strncmp62
  L_strpbrk63
  L_strpbrk64
  L_strpbrk65
  L_strrchr66
  L_strrchr67
  L_strrchr68
  L_strrchr69
  L_strstr70
  L_strstr71
  L_strstr72
  L_strstr73
  L_strstr74
  L_strtok75
  L_strtok76
  L_strtok77
  L_strtok78
  L_strtok79
  L__memmove80
  L__strcmp81
  L__strncat82
  L__strspn83
  L__strcspn84
  L__strncmp85
  L__strstr86
  L_end_memchr
  _memchr
  L_end_memcmp
  _memcmp
  L__memcmp89
  L_end_memcpy
  _memcpy
  L_end_memmove
  _memmove
  L_end_memset
  _memset
  L_end_strcat
  _strcat
  L_end_strchr
  _strchr
  L_end_strcmp
  _strcmp
  L_end_strcpy
  _strcpy
  L_end_strlen
  _strlen
  L_end_strncat
  _strncat
  L__strncat99
  L_end_strncpy
  _strncpy
  L_end_strspn
  _strspn
  L_end_strcspn
  _strcspn
  L_end_strncmp
  _strncmp
  L_end_strpbrk
  _strpbrk
  L_end_strrchr
  _strrchr
  L_end_strstr
  _strstr
  L__strstr107
  L_end_strtok
  _strtok
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_10ms9
  L_Delay_100ms10
  L_Delay_1sec11
  L_boot16_Delay_5ms12
  L_Delay_Cyc13
  L_Delay_Cyc14
  L_VDelay_ms15
  L_VDelay_ms16
  L_VDelay_ms17
  L_VDelay_Advanced_ms18
  L_VDelay_Advanced_ms19
  L_VDelay_Advanced_ms20
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_1sec
  _Delay_1sec
  L_end_boot16_Delay_5ms
  _boot16_Delay_5ms
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_VDelay_ms
  _VDelay_ms
  L__VDelay_ms38
  L__VDelay_ms39
  L__VDelay_ms40
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms42
  L__VDelay_Advanced_ms43
  L__VDelay_Advanced_ms44
  L_EEPROM_Write0
  L_EEPROM_Write1
  L_end_EEPROM_Read
  _EEPROM_Read
  L_end_EEPROM_Write
  _EEPROM_Write
  L__EEPROM_Write4
  L__EEPROM_Write5
  L_Keypad_Key_Press0
  L_Keypad_Key_Press1
  L_Keypad_Key_Press2
  L_Keypad_Key_Press3
  L_Keypad_Key_Press4
  L_Keypad_Key_Click5
  L_Keypad_Key_Click6
  L_end_Keypad_Init
  _Keypad_Init
  L_end_Keypad_Key_Press
  _Keypad_Key_Press
  L_end_Keypad_Key_Click
  _Keypad_Key_Click
  L_Lcd_Cmd0
  L_Lcd_Cmd1
  L_Lcd_Out_CP2
  L_Lcd_Out_CP3
  L_Lcd_Chr4
  L_Lcd_Chr5
  L_Lcd_Chr6
  L_Lcd_Chr7
  L_Lcd_Chr8
  L_Lcd_Chr9
  L_Lcd_Chr10
  L_Lcd_Out11
  L_Lcd_Out12
  L_Lcd_Out13
  L_Lcd_Out14
  L_Lcd_Out15
  L_Lcd_Out16
  L_Lcd_Out17
  L_Lcd_Out18
  L_Lcd_Out19
  L_end_Lcd_Cmd
  _Lcd_Cmd
  L__Lcd_Cmd21
  L__Lcd_Cmd22
  L__Lcd_Cmd23
  L__Lcd_Cmd24
  L__Lcd_Cmd25
  L__Lcd_Cmd26
  L__Lcd_Cmd27
  L__Lcd_Cmd28
  L__Lcd_Cmd29
  L__Lcd_Cmd30
  L__Lcd_Cmd31
  L__Lcd_Cmd32
  L__Lcd_Cmd33
  L__Lcd_Cmd34
  L__Lcd_Cmd35
  L__Lcd_Cmd36
  L__Lcd_Cmd37
  L__Lcd_Cmd38
  L__Lcd_Cmd39
  L__Lcd_Cmd40
  L_end_Lcd_Chr_CP
  _Lcd_Chr_CP
  L_end_Lcd_Out_CP
  _Lcd_Out_CP
  L_end_Lcd_Chr
  _Lcd_Chr
  L_end_Lcd_Init
  _Lcd_Init
  L_end_Lcd_Out
  _Lcd_Out
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Mul_8X8_U
  _Mul_8X8_U
  L_end_Mul_16X16_U
  _Mul_16X16_U
  L_end_Div_8X8_U
  _Div_8X8_U
  L_end_Div_16X16_U
  _Div_16X16_U
  L_end_Mul_8X8_S
  _Mul_8X8_S
  L_end_Mul_16X16_S
  _Mul_16X16_S
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8X8_S
  _Div_8X8_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
